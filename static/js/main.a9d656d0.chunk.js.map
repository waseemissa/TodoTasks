{"version":3,"sources":["Components/Suggestion.js","Components/Pending.js","Components/UserCard.js","Components/Layout/MainNavigation.js","Pages/MainPage.js","Pages/MessagesPage.js","Components/Notification.js","Pages/NotificationsPage.js","Components/UserComment.js","Components/Project.js","Pages/ProjectsPage.js","Components/UserSkill.js","Pages/SkillsPage.js","Components/UserEducation.js","Pages/EducationPage.js","Components/UserExperience.js","Pages/ExperiencePage.js","Images/bg.jpg","Pages/LoginPage.js","Pages/RegisterPage.js","Components/ProfileComponents/UserCard.js","Components/ProfileComponents/UserEducation.js","Pages/Profile/UserEducationPage.js","Components/ProfileComponents/UserSkill.js","Pages/Profile/UserSkillsPage.js","Pages/Profile/UserFeed.js","Components/ProfileComponents/UserExperience.js","Pages/Profile/UserExperiencePage.js","Components/Connection.js","Pages/ConnectionsPage.js","Pages/SearchResults.js","firebase.js","Components/Blocked.js","Pages/BlockedContacts.js","App.js","index.js"],"names":["Suggestion","props","history","useHistory","a","authorization","localStorage","getItem","fetch","method","headers","accepts","Authorization","body","URLSearchParams","user2_id","id","response","ok","Error","json","add_response","Card","sx","display","flexDirection","paddingTop","CardHeader","onClick","setItem","name","profession","picture","bio","email","phone_number","push","username","window","location","reload","flex","style","fontFamily","avatar","Avatar","src","title","IconButton","color","component","sendFollowRequestAPI","then","catch","error","console","log","message","document","getElementById","Pending","value","accept_response","delete_response","hidden","Stack","direction","acceptFollowRequestAPI","deleteFollowRequestAPI","Input","styled","UserCard","useState","user_picture","setUserPicture","width","CssBaseline","Container","maxWidth","lg","marginLeft","marginRight","Box","bgcolor","height","bottom","position","htmlFor","paddingLeft","accept","type","onChange","e","event","target","files","fd","FormData","append","axios","post","res","data","picture_url","fileUploadHandler","textAlign","marginTop","List","ListItem","disablePadding","ListItemButton","RouterLink","to","ListItemIcon","ListItemText","primary","Search","theme","borderRadius","shape","backgroundColor","alpha","palette","common","white","spacing","breakpoints","up","SearchIconWrapper","padding","pointerEvents","alignItems","justifyContent","StyledInputBase","InputBase","transition","transitions","create","MainNavigation","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","count","setCount","useEffect","getNotificationsCountAPI","count_response","addEventListener","keyCode","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","clear","onpopstate","go","mobileMenuId","renderMobileMenu","size","Badge","badgeContent","flexGrow","AppBar","Toolbar","Typography","variant","noWrap","textDecoration","xs","sm","placeholder","inputProps","md","edge","top","left","transform","border","boxShadow","p","MainPage","setOpen","handleClose","setProfession","setBio","setPhoneNumber","pendingRequests","setPendingRequests","suggestions","setSuggestions","edit_response","pending_response","suggestions_response","getPendingRequestsAPI","pending_connections","getSuggestionsAPI","Grid","container","item","paddingBottom","marginBottom","mt","mb","alignSelf","Modal","noValidate","autoComplete","TextField","label","innerHTML","Button","editProfileAPI","map","pendingRequest","info","first_name","last_name","suggestion","MessagesPage","messages","setMessages","setMessage","allMessages","Pusher","logToConsole","cluster","subscribe","bind","submit","overflow","background","inlineSize","gap","endIcon","right","Notification","notification_id","text","deleteNotificationAPI","NotificationsPage","notifications","setNotifications","notifications_response","getUserNotificationsAPI","notification","UserComment","fontSize","CardContent","Project","comments","setComments","getProjectComments","project_id","markAsDone_response","getProjectCommentsAPI","comments_response","comment_text","due_date","amount","markAsDoneAPI","comment","user","addCommentAPI","ProjectsPage","projects","setProjects","freelancers","setFreelancers","freelancerId","setFreelancerId","freelancers_response","freelancer_user_id","description","price","getProjects","getProjectsAPI","projects_response","getFreelancersAPI","InputLabel","Select","labelId","freelancer","createProjectAPI","project","UserSkill","setTitle","skill_id","update_response","deleteSkillAPI","updateSkillAPI","SkillsPage","skills","setSkills","getUserSkills","getUserSkillsAPI","skills_response","user_id","addSkill","addSkillAPI","skill_title","skill","UserEducation","degree","setDegree","university","setUniversity","major","setMajor","year","setYear","education_id","deleteEducationAPI","updateEducationAPI","EducationPage","educations","setEducations","getUserEdcuation","getUserEdcuationAPI","education_response","education","addEducation","addEducationAPI","UserExperience","setPosition","company","setCompany","start_date","setStartDate","end_date","setEndDate","job_id","deleteExperienceAPI","updateExperienceAPI","ExperiencePage","experiences","setExperiences","getUserExperience","getUserExperienceAPI","experience_response","jobs","addExperience","addExperienceAPI","experience","LoginPage","login","loginAPI","login_response","access_token","alert","password","token","handleLogin","preventDefault","backgroundImage","float","margin","paddingRight","m","required","Link","RegisterPage","is_freelancer","setIsFreelancer","register","registerAPI","password_confirmation","register_response","handleRegistration","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","setId","setName","setPicture","UserEducationPage","UserSkillsPage","UserFeed","UserExperiencePage","Connection","unfollow_response","block_response","unfollowAPI","blockAPI","ConnectionsPage","connections","setConnections","connections_response","getConnectionsAPI","connection","SearchResults","searchResults","setSearchResults","search_value","search_key","search_response","getSearchResultsAPI","search_results","result","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Blocked","unblockAPI","BlockedContacts","blockedContacts","setBlockedContacts","blocked_response","getBlockedContactsAPI","blocked_contacts","contact","App","isIOS","messaging","navigator","serviceWorker","registration","scope","requestPermission","getToken","vapidKey","serviceWorkerRegistration","currentToken","err","path","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.a9d656d0.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Suggestion(props) {\r\n  const history = new useHistory();\r\n\r\n  const handleSendRequest = () => {\r\n    sendFollowRequest();\r\n    document.getElementById(\"suggestion_\" + props.id).style.display = \"none\";\r\n  };\r\n\r\n  const handleClick = () => {\r\n    localStorage.setItem(\"todo_tasks_user_id\", props.id);\r\n    localStorage.setItem(\"todo_tasks_user_name\", props.name);\r\n    localStorage.setItem(\"todo_tasks_user_profession\", props.profession);\r\n    localStorage.setItem(\"todo_tasks_user_picture\", props.picture);\r\n    localStorage.setItem(\"todo_tasks_user_bio\", props.bio);\r\n    localStorage.setItem(\"todo_tasks_user_email\", props.email);\r\n    localStorage.setItem(\"todo_tasks_user_phone_number\", props.phone_number);\r\n    localStorage.setItem(\"is_friend\", \"false\");\r\n    history.push(\"/feed/\" + props.username);\r\n    window.location.reload();\r\n  };\r\n\r\n  function sendFollowRequest() {\r\n    sendFollowRequestAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function sendFollowRequestAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/send-follow-request\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user2_id: props.id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const add_response = await response.json();\r\n    return add_response;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      id={\"suggestion_\" + props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        onClick={handleClick}\r\n        sx={{ flex: \"5\" }}\r\n        style={{ fontFamily: \"Roboto\" }}\r\n        avatar={\r\n          <Avatar src={props.picture} aria-label=\"Profile Picture\"></Avatar>\r\n        }\r\n        title={props.name}\r\n      />\r\n      <IconButton\r\n        style={{ color: \"#1976d2\" }}\r\n        aria-label=\"Follow\"\r\n        component=\"span\"\r\n        sx={{ flex: \"1\" }}\r\n        onClick={handleSendRequest}\r\n      >\r\n        <AddCircleIcon />\r\n      </IconButton>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nexport default function Pending(props) {\r\n  const handleApproval = () => {\r\n    acceptFollowRequest();\r\n    document.getElementById(\"pending_\" + props.id).style.display = \"none\";\r\n  };\r\n\r\n  const handleRejection = () => {\r\n    deleteFollowRequest();\r\n    document.getElementById(\"pending_\" + props.id).style.display = \"none\";\r\n  };\r\n\r\n  function acceptFollowRequest() {\r\n    acceptFollowRequestAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function acceptFollowRequestAPI() {\r\n    const user2_id = document.getElementById(\"user2_id\").value;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/accept-follow-request\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user2_id: user2_id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const accept_response = await response.json();\r\n    return accept_response;\r\n  }\r\n\r\n  function deleteFollowRequest() {\r\n    deleteFollowRequestAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function deleteFollowRequestAPI() {\r\n    const user2_id = document.getElementById(\"user2_id\").value;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/delete-follow-request\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user2_id: user2_id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const delete_response = await response.json();\r\n    return delete_response;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      id={\"pending_\" + props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"10\" }}\r\n        style={{ fontFamily: \"Roboto\" }}\r\n        avatar={\r\n          <Avatar\r\n            aria-label=\"profile picture\"\r\n            src={props.picture}\r\n          ></Avatar>\r\n        }\r\n        title={props.name}\r\n      />\r\n      <button hidden id=\"user2_id\" value={props.id}></button>\r\n      <Stack direction=\"row\" sx={{ flex: \"1\" }}>\r\n        <IconButton\r\n          style={{ color: \"#1976d2\" }}\r\n          aria-label=\"Approve\"\r\n          onClick={handleApproval}\r\n        >\r\n          <CheckIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"error\"\r\n          aria-label=\"Decline\"\r\n          onClick={handleRejection}\r\n        >\r\n          <CancelIcon />\r\n        </IconButton>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport AccountTreeIcon from \"@mui/icons-material/AccountTree\";\r\nimport FeedIcon from \"@mui/icons-material/Feed\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport WorkIcon from \"@mui/icons-material/Work\";\r\nimport SchoolIcon from \"@mui/icons-material/School\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport PersonOffIcon from \"@mui/icons-material/PersonOff\";\r\nimport { Link as RouterLink, MemoryRouter as Router } from \"react-router-dom\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport PhotoCamera from \"@mui/icons-material/PhotoCamera\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Input = styled(\"input\")({\r\n  display: \"none\",\r\n});\r\n\r\nexport default function UserCard() {\r\n  const name = localStorage.getItem(\"full_name\");\r\n  const profession = localStorage.getItem(\"profession\");\r\n  const [user_picture, setUserPicture] = useState(\r\n    localStorage.getItem(\"profile_picture\")\r\n  );\r\n\r\n  const fileUploadHandler = (event) => {\r\n    let picture = event.target.files[0];\r\n    let fd = new FormData();\r\n    fd.append(\"picture\", picture);\r\n    const authorization = localStorage.getItem(\"token\");\r\n    console.log(picture);\r\n    axios\r\n      .post(\"https://todotasks.tk/api/auth/upload-profile-picture\", fd, {\r\n        headers: {\r\n          Authorization: authorization,\r\n          accepts: \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        document.getElementById(\"user_image\").src = res.data.picture.picture_url;\r\n        localStorage.setItem(\"profile_picture\", res.data.picture.picture_url);\r\n        setUserPicture(res.data.picture.picture_url);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment style={{ width: \"80%\" }}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"sm\" lg={{ marginLeft: \"20px\", marginRight: \"20px\" }}>\r\n        <Box sx={{ bgcolor: \"#1976d2\", height: \"100px\" }}>\r\n          <center>\r\n            <Avatar\r\n              id=\"user_image\"\r\n              src={user_picture}\r\n              sx={{\r\n                width: \"100px\",\r\n                height: \"100px\",\r\n                bottom: \"-50px\",\r\n                position: \"relative\",\r\n              }}\r\n            ></Avatar>\r\n          </center>\r\n          <label htmlFor=\"profile_image\" style={{ paddingLeft: \"65%\" }}>\r\n            <Input\r\n              accept=\"image/*\"\r\n              id=\"profile_image\"\r\n              type=\"file\"\r\n              onChange={(e) => {\r\n                fileUploadHandler(e);\r\n              }}\r\n            />\r\n            <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n            >\r\n              <PhotoCamera />\r\n            </IconButton>\r\n          </label>\r\n        </Box>\r\n        <Box sx={{ paddingTop: \"40px\", textAlign: \"center\" }}>\r\n          <h3 style={{ fontFamily: \"Roboto\" }}>{name}</h3>\r\n          <p\r\n            id=\"profession_p_card\"\r\n            style={{ marginTop: \"-20px\", fontFamily: \"Roboto\" }}\r\n          >\r\n            {profession}\r\n          </p>\r\n        </Box>\r\n        <Box>\r\n          <List style={{ fontFamily: \"Roboto\" }}>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/user-feed\">\r\n                <ListItemIcon>\r\n                  <FeedIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Contact Info\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/projects\">\r\n                <ListItemIcon>\r\n                  <AccountTreeIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Projects\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/connections\">\r\n                <ListItemIcon>\r\n                  <PersonIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Connections\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/blocked\">\r\n                <ListItemIcon>\r\n                  <PersonOffIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Blocked Contacts\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/user-experience\">\r\n                <ListItemIcon>\r\n                  <WorkIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Experience\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/user-education\">\r\n                <ListItemIcon>\r\n                  <SchoolIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Education\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/user-skills\">\r\n                <ListItemIcon>\r\n                  <StarIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Skills\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          </List>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport ForumIcon from \"@mui/icons-material/Forum\";\r\nimport { Link as RouterLink, MemoryRouter as Router } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function MainNavigation() {\r\n  const history = new useHistory();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const [count, setCount] = React.useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getNotificationsCount();\r\n    const input = document.getElementById(\"search_value\");\r\n    input.addEventListener(\"keyup\", function (event) {\r\n      if (event.keyCode === 13) {\r\n        localStorage.setItem(\r\n          \"search_value\",\r\n          document.getElementById(\"search_value\").value\r\n        );\r\n        history.push(\"/search\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    handleMenuClose();\r\n    localStorage.clear();\r\n    localStorage.setItem(\"is_authenticated\", \"false\");\r\n    history.push(\"/\");\r\n    //prevent going back\r\n    window.onpopstate = function (event) {\r\n      history.go(1);\r\n    };\r\n  };\r\n\r\n  function getNotificationsCount() {\r\n    getNotificationsCountAPI()\r\n      .then((count_response) => {\r\n        setCount(count_response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getNotificationsCountAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-notifications-count\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const count_response = await response.json();\r\n    return count_response;\r\n  }\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleLogout} style={{ fontFamily: \"Roboto\" }}>\r\n        Logout\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem component={RouterLink} to=\"/messages\">\r\n        <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge>\r\n            <ForumIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n\r\n      <MenuItem component={RouterLink} to=\"/notifications\">\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label={\"show \" + count + \" new notifications\"}\r\n          color=\"inherit\"\r\n        >\r\n          <Badge badgeContent={count} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            color=\"white\"\r\n            component={RouterLink}\r\n            to=\"/user-feed\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n              maxWidth: \"900px\",\r\n              fontFamily: \"Roboto\",\r\n            }}\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            Todo Tasks\r\n          </Typography>\r\n          <Search style={{ width: \"300px\" }} id=\"search_area\">\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Search By Profession...\"\r\n              id=\"search_value\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </Search>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              color=\"inherit\"\r\n              component={RouterLink}\r\n              to=\"/messages\"\r\n            >\r\n              <Badge>\r\n                <ForumIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label={\"show \" + count + \" new notifications\"}\r\n              color=\"inherit\"\r\n              component={RouterLink}\r\n              to=\"/notifications\"\r\n            >\r\n              <Badge badgeContent={count} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\nimport ClassIcon from \"@mui/icons-material/Class\";\r\nimport LocalPhoneIcon from \"@mui/icons-material/LocalPhone\";\r\nimport EmailIcon from \"@mui/icons-material/Email\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport Avatar from \"@mui/material/Avatar\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"1px solid #1976d2\",\r\n  borderRadius: \"35px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nfunction MainPage() {\r\n  const history = new useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [profession, setProfession] = useState(\r\n    localStorage.getItem(\"profession\")\r\n  );\r\n  const [bio, setBio] = useState(localStorage.getItem(\"bio\"));\r\n  const [phone_number, setPhoneNumber] = useState(\r\n    localStorage.getItem(\"phone_number\")\r\n  );\r\n  const email = localStorage.getItem(\"email\");\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  const handleEditBio = () => {\r\n    setBio(document.getElementById(\"bio\").value);\r\n    document.getElementById(\"bio_p\").innerHTML =\r\n      document.getElementById(\"bio\").value;\r\n    localStorage.setItem(\"bio\", bio);\r\n  };\r\n\r\n  const handleEditProfession = () => {\r\n    setProfession(document.getElementById(\"profession\").value);\r\n    document.getElementById(\"profession_p\").innerHTML =\r\n      document.getElementById(\"profession\").value;\r\n    document.getElementById(\"profession_p_card\").innerHTML =\r\n      document.getElementById(\"profession\").value;\r\n    localStorage.setItem(\"profession\", profession);\r\n  };\r\n\r\n  const handleEditPhoneNumber = () => {\r\n    setPhoneNumber(document.getElementById(\"phone_number\").value);\r\n    document.getElementById(\"phone_p\").innerHTML =\r\n      document.getElementById(\"phone_number\").value;\r\n    localStorage.setItem(\"phone_number\", phone_number);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    handleClose();\r\n    editProfile();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function editProfile() {\r\n    editProfileAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function editProfileAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/edit-profile\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        bio: bio,\r\n        profession: profession,\r\n        phone_number: phone_number,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const edit_response = await response.json();\r\n    return edit_response;\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Contact Info\r\n                </Typography>\r\n                <IconButton\r\n                  onClick={handleOpen}\r\n                  color=\"primary\"\r\n                  aria-label=\"Edit\"\r\n                  component=\"span\"\r\n                  sx={{ alignSelf: \"center\" }}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n              </Box>\r\n              <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n                <Box component=\"form\" sx={style} noValidate autoComplete=\"off\">\r\n                  <Typography id=\"title\" variant=\"h6\">\r\n                    Edit Info\r\n                  </Typography>\r\n                  <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                    <TextField\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      id=\"profession\"\r\n                      label=\"Profession\"\r\n                      variant=\"outlined\"\r\n                      value={profession}\r\n                      onChange={handleEditProfession}\r\n                    ></TextField>\r\n                    <TextField\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      id=\"phone_number\"\r\n                      label=\"Phone Number\"\r\n                      variant=\"outlined\"\r\n                      value={phone_number}\r\n                      onChange={handleEditPhoneNumber}\r\n                    ></TextField>\r\n                    <TextField\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      id=\"bio\"\r\n                      label=\"Bio\"\r\n                      variant=\"outlined\"\r\n                      value={bio}\r\n                      onChange={handleEditBio}\r\n                    ></TextField>\r\n                    <Button\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      variant=\"contained\"\r\n                      onClick={handleEdit}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              </Modal>\r\n              <Stack direction=\"column\" spacing={2}>\r\n                <Card\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <CardHeader\r\n                    sx={{ flex: \"5\" }}\r\n                    avatar={\r\n                      <Avatar\r\n                        sx={{ bgcolor: \"primary.dark\" }}\r\n                        aria-label=\"Bio\"\r\n                      >\r\n                        <InfoIcon />\r\n                      </Avatar>\r\n                    }\r\n                    title={\r\n                      <Typography>\r\n                        <h3>Bio</h3>\r\n                        <p\r\n                          id=\"bio_p\"\r\n                          style={{ marginTop: \"-20px\", fontFamily: \"roboto\" }}\r\n                        >\r\n                          {bio}\r\n                        </p>\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </Card>\r\n                <Card\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <CardHeader\r\n                    sx={{ flex: \"5\" }}\r\n                    avatar={\r\n                      <Avatar\r\n                        sx={{ bgcolor: \"primary.dark\" }}\r\n                        aria-label=\"Profession\"\r\n                      >\r\n                        <ClassIcon />\r\n                      </Avatar>\r\n                    }\r\n                    title={\r\n                      <Typography>\r\n                        <h3>Profession</h3>\r\n                        <p\r\n                          id=\"profession_p\"\r\n                          style={{ marginTop: \"-20px\", fontFamily: \"Roboto\" }}\r\n                        >\r\n                          {profession}\r\n                        </p>\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </Card>\r\n                <Card\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <CardHeader\r\n                    sx={{ flex: \"5\" }}\r\n                    avatar={\r\n                      <Avatar\r\n                        sx={{ bgcolor: \"primary.dark\" }}\r\n                        aria-label=\"E-mail Address\"\r\n                      >\r\n                        <EmailIcon />\r\n                      </Avatar>\r\n                    }\r\n                    title={\r\n                      <Typography>\r\n                        <h3>E-mail Address</h3>\r\n                        <p style={{ marginTop: \"-20px\", fontFamily: \"roboto\" }}>\r\n                          {email}\r\n                        </p>\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </Card>\r\n                <Card\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <CardHeader\r\n                    sx={{ flex: \"5\" }}\r\n                    avatar={\r\n                      <Avatar\r\n                        sx={{ bgcolor: \"primary.dark\" }}\r\n                        aria-label=\"Phone Number\"\r\n                      >\r\n                        <LocalPhoneIcon />\r\n                      </Avatar>\r\n                    }\r\n                    title={\r\n                      <Typography>\r\n                        <h3>Phone Number</h3>\r\n                        <p\r\n                          id=\"phone_p\"\r\n                          style={{ marginTop: \"-20px\", fontFamily: \"roboto\" }}\r\n                        >\r\n                          {phone_number}\r\n                        </p>\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </Card>\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      username={pendingRequest.info.username}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                      profession={pendingRequest.info.profession}\r\n                      email={pendingRequest.info.email}\r\n                      bio={pendingRequest.info.bio}\r\n                      phone_number={pendingRequest.info.phone_number}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import * as React from \"react\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Button from \"@mui/material/Button\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Pusher from \"pusher-js\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction MessagesPage() {\r\n  const history = new useHistory();\r\n  const username = localStorage.getItem(\"full_name\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  let allMessages = [];\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n\r\n    Pusher.logToConsole = true;\r\n\r\n    const pusher = new Pusher(\"88b8b9f2f7269cc451cd\", {\r\n      cluster: \"ap2\",\r\n    });\r\n\r\n    const channel = pusher.subscribe(\"my-channel\");\r\n    channel.bind(\"message\", function (data) {\r\n      allMessages.push(data);\r\n      setMessages(allMessages);\r\n    });\r\n  }, []);\r\n\r\n  const submit = async (e) => {\r\n    const authorization = localStorage.getItem(\"token\");\r\n    console.log(username);\r\n    console.log(message);\r\n    await fetch(\"https://todotasks.tk/api/auth/message\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        username: username,\r\n        message: message,\r\n      }),\r\n    });\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          lg={9}\r\n          style={{ position: \"relative\", height: \"680px\" }}\r\n        >\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Chit Chat\r\n                </Typography>\r\n              </Box>\r\n              <div\r\n                id=\"messages_div\"\r\n                style={{\r\n                  height: \"580px\",\r\n                  overflow: \"auto\",\r\n                  background: \"#fff\",\r\n                }}\r\n              >\r\n                {messages.map((message) => {\r\n                  return (\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: \"#1976d2\",\r\n                        inlineSize: \"70%\",\r\n                        height: \"wrap-content\",\r\n                        borderRadius: \"5px\",\r\n                        marginTop: \"10px\",\r\n                        marginLeft: \"30px\",\r\n                        color: \"white\",\r\n                        fontFamily: \"Roboto\",\r\n                      }}\r\n                    >\r\n                      <h4\r\n                        style={{\r\n                          paddingLeft: \"10px\",\r\n                          paddingTop: \"5px\",\r\n                          color: \"#000\",\r\n                        }}\r\n                      >\r\n                        {message.username}\r\n                      </h4>\r\n                      <p style={{ paddingLeft: \"15px\" }}>{message.message}</p>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  bottom: \"0px\",\r\n                  paddingBottom: \"15px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  width: \"95%\",\r\n                  alignItems: \"center\",\r\n                  gap: \"10px\",\r\n                  height: \"60px\",\r\n                  backgroundColor: \"#ffffff\",\r\n                }}\r\n              >\r\n                <TextField\r\n                  id=\"outlined-multiline-flexible\"\r\n                  label=\"Send a message\"\r\n                  variant=\"standard\"\r\n                  value={message}\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                  style={{ width: \"89%\", marginRight: \"120px\", left: \"10px\" }}\r\n                />\r\n\r\n                <Button\r\n                  onClick={submit}\r\n                  variant=\"contained\"\r\n                  endIcon={<SendIcon />}\r\n                  style={{\r\n                    flex: \"1\",\r\n                    height: \"40px\",\r\n                    position: \"absolute\",\r\n                    right: \"25px\",\r\n                    width: \"10%\",\r\n                    marginLeft: \"5px\",\r\n                  }}\r\n                >\r\n                  Send\r\n                </Button>\r\n              </div>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessagesPage;\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\n\r\nexport default function Notification(props) {\r\n  const handleDelete = () => {\r\n    deleteNotification();\r\n    document.getElementById(props.id).style.display = \"none\";\r\n  };\r\n\r\n  function deleteNotification() {\r\n    deleteNotificationAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function deleteNotificationAPI() {\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/delete-notification\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          notification_id: id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const delete_response = await response.json();\r\n    return delete_response;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"notification\">\r\n            <NotificationsIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <p>{props.text}</p>\r\n          </Typography>\r\n        }\r\n      />\r\n      <Stack sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <IconButton\r\n          color=\"error\"\r\n          onClick={handleDelete}\r\n          aria-label=\"Delete\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Notification from \"../Components/Notification\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction NotificationsPage() {\r\n  const history = new useHistory();\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getUserNotifications();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserNotifications() {\r\n    getUserNotificationsAPI()\r\n      .then((notifications_response) => {\r\n        setNotifications(notifications_response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  async function getUserNotificationsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-notifications\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const notifications_response = await response.json();\r\n    return notifications_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container>\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Notifications\r\n                </Typography>\r\n              </Box>\r\n              <Stack direction=\"column\" spacing={2}>\r\n                {notifications.map((notification) => (\r\n                  <Notification\r\n                    id={notification.id}\r\n                    text={notification.text}\r\n                  ></Notification>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      username={pendingRequest.info.username}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                      profession={pendingRequest.info.profession}\r\n                      email={pendingRequest.info.email}\r\n                      bio={pendingRequest.info.bio}\r\n                      phone_number={pendingRequest.info.phone_number}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotificationsPage;\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\n\r\nexport default function UserComment(props) {\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ marginTop: \"10px\", fontFamily: \"Roboto\", fontSize: \"15pt\" }}\r\n    >\r\n      <CardHeader\r\n        avatar={<Avatar aria-label=\"profile picture\" src={props.picture}></Avatar>}\r\n        title={\r\n          <Typography\r\n            style={{\r\n              fontFamily: \"Roboto\",\r\n              fontSize: \"16pt\",\r\n              marginTop: \"-35px\",\r\n            }}\r\n          >\r\n            {props.name}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardContent>\r\n        <Typography\r\n          style={{\r\n            paddingLeft: \"60px\",\r\n            marginTop: \"-40px\",\r\n            fontFamily: \"Roboto\",\r\n            fontSize: \"12pt\",\r\n          }}\r\n        >\r\n          {props.text}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport AccountTreeIcon from \"@mui/icons-material/AccountTree\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\nimport UserComment from \"./UserComment\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"1px solid #1976d2\",\r\n  borderRadius: \"35px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function Project(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProjectComments();\r\n  }, []);\r\n\r\n  const handleAddComment = () => {\r\n    addComment();\r\n    document.getElementById(\"comment_text\").value = \"\";\r\n  };\r\n\r\n  const handleMarkAsDone = () => {\r\n    markAsDone();\r\n  };\r\n\r\n  //mark as done\r\n  function markAsDone() {\r\n    markAsDoneAPI()\r\n      .then(() => {\r\n        document.getElementById(\"project_\" + props.id).style.display = \"none\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function markAsDoneAPI() {\r\n    const project_id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/mark-done\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        project_id: project_id,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const markAsDone_response = await response.json();\r\n    return markAsDone_response;\r\n  }\r\n\r\n  //get project comments\r\n  function getProjectComments() {\r\n    getProjectCommentsAPI()\r\n      .then((comments_response) => {\r\n        setComments(comments_response.comments);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getProjectCommentsAPI() {\r\n    const project_id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-project-comments\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          project_id: project_id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const comments_response = await response.json();\r\n    return comments_response;\r\n  }\r\n\r\n  //add a comment\r\n  function addComment() {\r\n    addCommentAPI()\r\n      .then(() => {\r\n        getProjectComments();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function addCommentAPI() {\r\n    const project_id = props.id;\r\n    const comment_text = document.getElementById(\"comment_text\").value;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/add-project-comment\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          project_id: project_id,\r\n          comment_text: comment_text,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const add_response = await response.json();\r\n    return add_response;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      id={\"project_\" + props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"Project\">\r\n            <AccountTreeIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <p>{props.title}</p>\r\n            <p>\r\n              Due on {props.due_date} for {props.amount} USD\r\n            </p>\r\n          </Typography>\r\n        }\r\n      />\r\n      <Stack sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <IconButton\r\n          onClick={handleOpen}\r\n          style={{ color: \"#1976d2\" }}\r\n          aria-label=\"Show details\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <InfoIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleMarkAsDone}\r\n          style={{ color: \"#1976d2\" }}\r\n          aria-label=\"Mark as done\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <CheckIcon />\r\n        </IconButton>\r\n      </Stack>\r\n      <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n        <Box component=\"form\" sx={style} noValidate autoComplete=\"off\">\r\n          <Typography id=\"title\" variant=\"h6\">\r\n            Project Details\r\n          </Typography>\r\n          <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <Typography>\r\n              <p style={{ fontFamily: \"Roboto\" }}>{props.title}</p>\r\n              <p style={{ fontFamily: \"Roboto\" }}>\r\n                Due on {props.due_date} for {props.amount} USD\r\n              </p>\r\n            </Typography>\r\n          </Box>\r\n          <Typography id=\"title\" variant=\"h6\">\r\n            Discussion\r\n          </Typography>\r\n          <div\r\n            style={{\r\n              overflow: \"scroll\",\r\n              height: \"300px\",\r\n              fontFamily: \"Roboto\",\r\n            }}\r\n          >\r\n            {comments.map((comment) => (\r\n              <UserComment\r\n                picture={comment.picture[0].picture_url}\r\n                name={comment.user.first_name + \" \" + comment.user.last_name}\r\n                text={comment.comment}\r\n              ></UserComment>\r\n            ))}\r\n          </div>\r\n          <Box sx={{ display: \"flex\", direction: \"row\", paddingTop: \"5px\" }}>\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              id=\"comment_text\"\r\n              label=\"Type your comment\"\r\n              variant=\"standard\"\r\n              sx={{ flex: \"3\" }}\r\n            />\r\n            <Button variant=\"contained\" onClick={handleAddComment}>\r\n              Post\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Project from \"../Components/Project\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"1px solid #1976d2\",\r\n  borderRadius: \"35px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nfunction ProjectsPage() {\r\n  const history = new useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [freelancers, setFreelancers] = useState([]);\r\n  const [freelancerId, setFreelancerId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getFreelancers();\r\n    getProjects();\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    setFreelancerId(event.target.value);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    handleClose();\r\n    createProject();\r\n  };\r\n\r\n  //get freelancers\r\n  function getFreelancers() {\r\n    getFreelancersAPI()\r\n      .then((freelancers_response) => {\r\n        setFreelancers(freelancers_response.freelancers);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getFreelancersAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-followed-freelancers\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const freelancers_response = await response.json();\r\n    return freelancers_response;\r\n  }\r\n\r\n  //Create Project\r\n\r\n  function createProject() {\r\n    createProjectAPI()\r\n      .then(() => {\r\n        getProjects();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function createProjectAPI() {\r\n    const freelancer_user_id = freelancerId;\r\n    const description = document.getElementById(\"description\").value;\r\n    const price = document.getElementById(\"price\").value;\r\n    const due_date = document.getElementById(\"due_date\").value;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/create-project\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          freelancer_user_id: freelancer_user_id,\r\n          description: description,\r\n          price: price,\r\n          due_date: due_date,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const add_response = await response.json();\r\n    return add_response;\r\n  }\r\n\r\n  //get Projects\r\n  function getProjects() {\r\n    getProjectsAPI()\r\n      .then((projects_response) => {\r\n        setProjects(projects_response.projects);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getProjectsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-projects\", {\r\n      method: \"GET\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const projects_response = await response.json();\r\n    return projects_response;\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Projects\r\n                </Typography>\r\n                <IconButton\r\n                  onClick={handleOpen}\r\n                  color=\"primary\"\r\n                  aria-label=\"Edit\"\r\n                  component=\"span\"\r\n                >\r\n                  <AddCircleIcon />\r\n                </IconButton>\r\n              </Box>\r\n              <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n                <Box component=\"form\" sx={style} noValidate autoComplete=\"off\">\r\n                  <Typography id=\"title\" variant=\"h6\">\r\n                    Start Project\r\n                  </Typography>\r\n                  <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                    <InputLabel\r\n                      id=\"demo-simple-select-label\"\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Freelancer\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={freelancerId}\r\n                      onChange={handleChange}\r\n                    >\r\n                      {freelancers.map((freelancer) => (\r\n                        <MenuItem value={freelancer.info.id}>\r\n                          {freelancer.info.first_name +\r\n                            \" \" +\r\n                            freelancer.info.last_name}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                    <InputLabel\r\n                      id=\"demo-simple-select-label\"\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Description\r\n                    </InputLabel>\r\n                    <TextField\r\n                      id=\"description\"\r\n                      variant=\"outlined\"\r\n                      placeholder=\"What is your project?\"\r\n                    ></TextField>\r\n                    <InputLabel\r\n                      id=\"demo-simple-select-label\"\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Price\r\n                    </InputLabel>\r\n                    <TextField\r\n                      id=\"price\"\r\n                      variant=\"outlined\"\r\n                      placeholder=\"Amount in USD\"\r\n                    ></TextField>\r\n                    <InputLabel\r\n                      id=\"demo-simple-select-label\"\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Due Date\r\n                    </InputLabel>\r\n                    <TextField\r\n                      id=\"due_date\"\r\n                      variant=\"outlined\"\r\n                      placeholder=\"Deadline\"\r\n                    ></TextField>\r\n                    <Button\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      variant=\"contained\"\r\n                      onClick={handleSave}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              </Modal>\r\n              <Stack direction=\"column\" spacing={2}>\r\n                {projects.map((project) => (\r\n                  <Project\r\n                    id={project.id}\r\n                    amount={project.price}\r\n                    title={project.description}\r\n                    due_date={project.due_date}\r\n                  ></Project>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      username={pendingRequest.info.username}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                      profession={pendingRequest.info.profession}\r\n                      email={pendingRequest.info.email}\r\n                      bio={pendingRequest.info.bio}\r\n                      phone_number={pendingRequest.info.phone_number}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    sx={{ mt: 4, mb: 2 }}\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectsPage;\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { useState } from \"react\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"1px solid #1976d2\",\r\n  borderRadius: \"35px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function UserSkill(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [title, setTitle] = useState(props.title);\r\n\r\n  const handleEditTitle = () =>\r\n    setTitle(document.getElementById(\"skill_title\").value);\r\n  const handleDelete = () => {\r\n    deleteSkill();\r\n    document.getElementById(props.id).style.display = \"none\";\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    updateSkill();\r\n    handleClose();\r\n  };\r\n\r\n  function updateSkill() {\r\n    updateSkillAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function updateSkillAPI() {\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n    \r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/update-skill\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        skill_id: id,\r\n        title: title,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const update_response = await response.json();\r\n    return update_response;\r\n  }\r\n\r\n  function deleteSkill() {\r\n    deleteSkillAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function deleteSkillAPI() {\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/delete-skill\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        skill_id: id,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const delete_response = await response.json();\r\n    return delete_response;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"Skill\">\r\n            <StarIcon />\r\n          </Avatar>\r\n        }\r\n        title={title}\r\n      />\r\n      <Stack sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <IconButton\r\n          onClick={handleOpen}\r\n          style={{ color: \"#1976d2\" }}\r\n          aria-label=\"Edit\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleDelete}\r\n          color=\"error\"\r\n          aria-label=\"Delete\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Stack>\r\n      <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n        <Box component=\"form\" sx={style} noValidate autoComplete=\"off\">\r\n          <Typography id=\"title\" variant=\"h6\">\r\n            Edit Skill\r\n          </Typography>\r\n          <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <TextField\r\n              sx={{ marginTop: \"15px\" }}\r\n              id=\"skill_title\"\r\n              label=\"Title\"\r\n              variant=\"outlined\"\r\n              value={title}\r\n              onChange={handleEditTitle}\r\n            ></TextField>\r\n            <Button\r\n              sx={{ marginTop: \"15px\" }}\r\n              variant=\"contained\"\r\n              onClick={handleUpdate}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport UserSkill from \"../Components/UserSkill\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"1px solid #1976d2\",\r\n  borderRadius: \"35px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nfunction SkillsPage() {\r\n  const history = new useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [skills, setSkills] = useState([]);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getUserSkills();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserSkills() {\r\n    getUserSkillsAPI()\r\n      .then((skills_response) => {\r\n        setSkills(skills_response.skills);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getUserSkillsAPI() {\r\n    const user_id = localStorage.getItem(\"id\");\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-user-skills\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user_id: user_id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const skills_response = await response.json();\r\n    return skills_response;\r\n  }\r\n\r\n  function addSkill() {\r\n    addSkillAPI()\r\n      .then(() => {\r\n        getUserSkills();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function addSkillAPI() {\r\n    const skill_title = document.getElementById(\"skill_title\").value;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/add-skill\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        title: skill_title,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const update_response = await response.json();\r\n    return update_response;\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  const handleSave = () => {\r\n    addSkill();\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Skills\r\n                </Typography>\r\n                <IconButton\r\n                  onClick={handleOpen}\r\n                  color=\"primary\"\r\n                  aria-label=\"Edit\"\r\n                  component=\"span\"\r\n                  sx={{ alignSelf: \"center\" }}\r\n                >\r\n                  <AddCircleIcon />\r\n                </IconButton>\r\n              </Box>\r\n              <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n                <Box component=\"form\" sx={style} noValidate autoComplete=\"off\">\r\n                  <Typography id=\"title\" variant=\"h6\">\r\n                    Add Skill\r\n                  </Typography>\r\n                  <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                    <TextField\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      id=\"skill_title\"\r\n                      label=\"Title\"\r\n                      variant=\"outlined\"\r\n                      placeholder=\"What is your skill?\"\r\n                    ></TextField>\r\n                    <Button\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      variant=\"contained\"\r\n                      onClick={handleSave}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              </Modal>\r\n              <Stack id=\"skills\" direction=\"column\" spacing={2}>\r\n                {skills.map((skill) => (\r\n                  <UserSkill id={skill.id} title={skill.title}></UserSkill>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SkillsPage;\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { useState } from \"react\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"1px solid #1976d2\",\r\n  borderRadius: \"35px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function UserEducation(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [degree, setDegree] = useState(props.degree);\r\n  const [university, setUniversity] = useState(props.university);\r\n  const [major, setMajor] = useState(props.major);\r\n  const [year, setYear] = useState(props.year);\r\n\r\n  const handleEditDegree = () =>\r\n    setDegree(document.getElementById(\"degree\").value);\r\n  const handleEditMajor = () =>\r\n    setMajor(document.getElementById(\"major\").value);\r\n  const handleEditUniversity = () =>\r\n    setUniversity(document.getElementById(\"university\").value);\r\n  const handleEditYear = () => setYear(document.getElementById(\"year\").value);\r\n\r\n  const handleDelete = () => {\r\n    deleteEducation();\r\n    document.getElementById(props.id).style.display = \"none\";\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    updateEducation();\r\n    handleClose();\r\n  };\r\n\r\n  function updateEducation() {\r\n    updateEducationAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function updateEducationAPI() {\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/update-education\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          education_id: id,\r\n          degree: degree,\r\n          major: major,\r\n          university: university,\r\n          year: year,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const update_response = await response.json();\r\n    return update_response;\r\n  }\r\n\r\n  function deleteEducation() {\r\n    deleteEducationAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function deleteEducationAPI() {\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/delete-education\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          education_id: id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const delete_response = await response.json();\r\n    return delete_response;\r\n  }\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        style={{ fontFamily: \"Roboto\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"Education\">\r\n            <StarIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <p>\r\n              {degree} in {major}\r\n            </p>\r\n            <p>\r\n              {university} ({year})\r\n            </p>\r\n          </Typography>\r\n        }\r\n      />\r\n      <Stack sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <IconButton\r\n          style={{ color: \"#1976d2\" }}\r\n          onClick={handleOpen}\r\n          aria-label=\"Edit\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"error\"\r\n          onClick={handleDelete}\r\n          aria-label=\"Delete\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Stack>\r\n      <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n        <Box component=\"form\" sx={style} noValidate autoComplete=\"off\">\r\n          <Typography id=\"title\" variant=\"h6\">\r\n            Edit Education\r\n          </Typography>\r\n          <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <TextField\r\n              sx={{ marginTop: \"15px\" }}\r\n              id=\"degree\"\r\n              label=\"Degree\"\r\n              variant=\"outlined\"\r\n              value={degree}\r\n              onChange={handleEditDegree}\r\n            ></TextField>\r\n            <TextField\r\n              sx={{ marginTop: \"15px\" }}\r\n              id=\"major\"\r\n              label=\"Major\"\r\n              variant=\"outlined\"\r\n              value={major}\r\n              onChange={handleEditMajor}\r\n            ></TextField>\r\n            <TextField\r\n              sx={{ marginTop: \"15px\" }}\r\n              id=\"university\"\r\n              label=\"University\"\r\n              variant=\"outlined\"\r\n              value={university}\r\n              onChange={handleEditUniversity}\r\n            ></TextField>\r\n            <TextField\r\n              sx={{ marginTop: \"15px\" }}\r\n              id=\"year\"\r\n              label=\"Year\"\r\n              variant=\"outlined\"\r\n              value={year}\r\n              onChange={handleEditYear}\r\n            ></TextField>\r\n            <Button\r\n              sx={{ marginTop: \"15px\" }}\r\n              variant=\"contained\"\r\n              onClick={handleUpdate}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport UserEducation from \"../Components/UserEducation\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"1px solid #1976d2\",\r\n  borderRadius: \"35px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nfunction EducationPage() {\r\n  const history = new useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const [educations, setEducations] = useState([]);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getUserEdcuation();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserEdcuation() {\r\n    getUserEdcuationAPI()\r\n      .then((education_response) => {\r\n        setEducations(education_response.education);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getUserEdcuationAPI() {\r\n    const user_id = localStorage.getItem(\"id\");\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/user-education\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user_id: user_id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const education_response = await response.json();\r\n    return education_response;\r\n  }\r\n\r\n  function addEducation() {\r\n    addEducationAPI()\r\n      .then(() => {\r\n        getUserEdcuation();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function addEducationAPI() {\r\n    const degree = document.getElementById(\"degree\").value;\r\n    const major = document.getElementById(\"major\").value;\r\n    const university = document.getElementById(\"university\").value;\r\n    const year = document.getElementById(\"year\").value;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/add-education\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          degree: degree,\r\n          major: major,\r\n          university: university,\r\n          year: year,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const add_response = await response.json();\r\n    return add_response;\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  const handleSave = () => {\r\n    addEducation();\r\n    handleClose();\r\n  };\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Education\r\n                </Typography>\r\n                <IconButton\r\n                  onClick={handleOpen}\r\n                  color=\"primary\"\r\n                  aria-label=\"Add\"\r\n                  component=\"span\"\r\n                  sx={{ alignSelf: \"center\" }}\r\n                >\r\n                  <AddCircleIcon />\r\n                </IconButton>\r\n              </Box>\r\n              <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n                <Box component=\"form\" sx={style} noValidate autoComplete=\"off\">\r\n                  <Typography id=\"title\" variant=\"h6\">\r\n                    Add Education\r\n                  </Typography>\r\n                  <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                    <TextField\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      id=\"degree\"\r\n                      label=\"Degree\"\r\n                      variant=\"outlined\"\r\n                    ></TextField>\r\n                    <TextField\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      id=\"major\"\r\n                      label=\"Major\"\r\n                      variant=\"outlined\"\r\n                    ></TextField>\r\n                    <TextField\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      id=\"university\"\r\n                      label=\"University\"\r\n                      variant=\"outlined\"\r\n                    ></TextField>\r\n                    <TextField\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      id=\"year\"\r\n                      label=\"Year\"\r\n                      variant=\"outlined\"\r\n                    ></TextField>\r\n                    <Button\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      variant=\"contained\"\r\n                      onClick={handleSave}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              </Modal>\r\n              <Stack direction=\"column\" spacing={2}>\r\n                {educations.map((education) => (\r\n                  <UserEducation\r\n                    id={education.id}\r\n                    degree={education.degree}\r\n                    major={education.major}\r\n                    university={education.university}\r\n                    year={education.year}\r\n                  ></UserEducation>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      username={pendingRequest.info.username}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                      profession={pendingRequest.info.profession}\r\n                      email={pendingRequest.info.email}\r\n                      bio={pendingRequest.info.bio}\r\n                      phone_number={pendingRequest.info.phone_number}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EducationPage;\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport WorkIcon from \"@mui/icons-material/Work\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { useState } from \"react\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"1px solid #1976d2\",\r\n  borderRadius: \"35px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function UserExperience(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [position, setPosition] = useState(props.position);\r\n  const [company, setCompany] = useState(props.company);\r\n  const [start_date, setStartDate] = useState(props.start_date);\r\n  const [end_date, setEndDate] = useState(props.end_date);\r\n\r\n  const handleEditPosition = () =>\r\n    setPosition(document.getElementById(\"position\").value);\r\n  const handleEditCompany = () =>\r\n    setCompany(document.getElementById(\"company\").value);\r\n  const handleEditStartDate = () =>\r\n    setStartDate(document.getElementById(\"start_date\").value);\r\n  const handleEditEndDate = () =>\r\n    setEndDate(document.getElementById(\"end_date\").value);\r\n\r\n  const handleDelete = () => {\r\n    deleteExperience();\r\n    document.getElementById(props.id).style.display = \"none\";\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    updateExperience();\r\n    handleClose();\r\n  };\r\n\r\n  function updateExperience() {\r\n    updateExperienceAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function updateExperienceAPI() {\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/update-job\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        job_id: id,\r\n        position: position,\r\n        company: company,\r\n        start_date: start_date,\r\n        end_date: end_date,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const update_response = await response.json();\r\n    return update_response;\r\n  }\r\n\r\n  function deleteExperience() {\r\n    deleteExperienceAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function deleteExperienceAPI() {\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/delete-job\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        job_id: id,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const delete_response = await response.json();\r\n    return delete_response;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        style={{ fontFamily: \"Roboto\" }}\r\n        sx={{ flex: \"5\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"Experience\">\r\n            <WorkIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <p>\r\n              {position} at {company}\r\n            </p>\r\n            <p>\r\n              From {start_date} till {end_date}\r\n            </p>\r\n          </Typography>\r\n        }\r\n      />\r\n      <Stack sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <IconButton\r\n          onClick={handleOpen}\r\n          style={{ color: \"#1976d2\" }}\r\n          aria-label=\"Edit\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleDelete}\r\n          color=\"error\"\r\n          aria-label=\"Delete\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Stack>\r\n      <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n        <Box component=\"form\" sx={style} noValidate autoComplete=\"off\">\r\n          <Typography id=\"title\" variant=\"h6\">\r\n            Edit Experience\r\n          </Typography>\r\n          <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <TextField\r\n              sx={{ marginTop: \"15px\" }}\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              value={position}\r\n              onChange={handleEditPosition}\r\n            ></TextField>\r\n            <TextField\r\n              sx={{ marginTop: \"15px\" }}\r\n              id=\"company\"\r\n              label=\"Company\"\r\n              variant=\"outlined\"\r\n              value={company}\r\n              onChange={handleEditCompany}\r\n            ></TextField>\r\n            <TextField\r\n              sx={{ marginTop: \"15px\" }}\r\n              id=\"start_date\"\r\n              label=\"Start Date\"\r\n              variant=\"outlined\"\r\n              value={start_date}\r\n              onChange={handleEditStartDate}\r\n            ></TextField>\r\n            <TextField\r\n              sx={{ marginTop: \"15px\" }}\r\n              id=\"end_date\"\r\n              label=\"End Date\"\r\n              variant=\"outlined\"\r\n              value={end_date}\r\n              onChange={handleEditEndDate}\r\n            ></TextField>\r\n            <Button\r\n              sx={{ marginTop: \"15px\" }}\r\n              variant=\"contained\"\r\n              onClick={handleUpdate}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport UserExperience from \"../Components/UserExperience\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"1px solid #1976d2\",\r\n  borderRadius: \"35px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nfunction ExperiencePage() {\r\n  const history = new useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [experiences, setExperiences] = useState([]);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getUserExperience();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserExperience() {\r\n    getUserExperienceAPI()\r\n      .then((experience_response) => {\r\n        setExperiences(experience_response.jobs);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getUserExperienceAPI() {\r\n    const user_id = localStorage.getItem(\"id\");\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/user-jobs\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        user_id: user_id,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const experience_response = await response.json();\r\n    return experience_response;\r\n  }\r\n\r\n  function addExperience() {\r\n    addExperienceAPI()\r\n      .then(() => {\r\n        getUserExperience();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function addExperienceAPI() {\r\n    const position = document.getElementById(\"position\").value;\r\n    const company = document.getElementById(\"company\").value;\r\n    const start_date = document.getElementById(\"start_date\").value;\r\n    const end_date = document.getElementById(\"end_date\").value;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/add-job\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        position: position,\r\n        company: company,\r\n        start_date: start_date,\r\n        end_date: end_date,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const add_response = await response.json();\r\n    return add_response;\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  const handleSave = () => {\r\n    addExperience();\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Experience\r\n                </Typography>\r\n                <IconButton\r\n                  onClick={handleOpen}\r\n                  color=\"primary\"\r\n                  aria-label=\"Add\"\r\n                  component=\"span\"\r\n                  sx={{ alignSelf: \"center\" }}\r\n                >\r\n                  <AddCircleIcon />\r\n                </IconButton>\r\n              </Box>\r\n              <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n                <Box component=\"form\" sx={style} noValidate autoComplete=\"off\">\r\n                  <Typography id=\"title\" variant=\"h6\">\r\n                    Add Experience\r\n                  </Typography>\r\n                  <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                    <TextField\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      id=\"position\"\r\n                      label=\"Position\"\r\n                      variant=\"outlined\"\r\n                    ></TextField>\r\n                    <TextField\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      id=\"company\"\r\n                      label=\"Company\"\r\n                      variant=\"outlined\"\r\n                    ></TextField>\r\n                    <TextField\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      id=\"start_date\"\r\n                      label=\"Start Date\"\r\n                      variant=\"outlined\"\r\n                    ></TextField>\r\n                    <TextField\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      id=\"end_date\"\r\n                      label=\"End Date\"\r\n                      variant=\"outlined\"\r\n                    ></TextField>\r\n                    <Button\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      variant=\"contained\"\r\n                      onClick={handleSave}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              </Modal>\r\n              <Stack direction=\"column\" spacing={2}>\r\n                {experiences.map((experience) => (\r\n                  <UserExperience\r\n                    id={experience.id}\r\n                    company={experience.company}\r\n                    position={experience.position}\r\n                    start_date={experience.start_date}\r\n                    end_date={experience.end_date}\r\n                  ></UserExperience>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      username={pendingRequest.info.username}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                      profession={pendingRequest.info.profession}\r\n                      email={pendingRequest.info.email}\r\n                      bio={pendingRequest.info.bio}\r\n                      phone_number={pendingRequest.info.phone_number}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExperiencePage;\r\n","export default __webpack_public_path__ + \"static/media/bg.01705941.jpg\";","import * as React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport background from \"../Images/bg.jpg\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nexport default function LoginPage() {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"true\") {\r\n      history.push(\"/projects\");\r\n    } else {\r\n      localStorage.setItem(\"is_authenticated\", \"false\");\r\n    }\r\n  }, []);\r\n\r\n  function login() {\r\n    loginAPI()\r\n      .then((login_response) => {\r\n        localStorage.setItem(\"token\", \"bearer \" + login_response.access_token);\r\n        localStorage.setItem(\"id\", login_response.user.id);\r\n        localStorage.setItem(\r\n          \"full_name\",\r\n          login_response.user.first_name + \" \" + login_response.user.last_name\r\n        );\r\n        localStorage.setItem(\"username\", login_response.user.username);\r\n        localStorage.setItem(\"email\", login_response.user.email);\r\n        localStorage.setItem(\"phone_number\", login_response.user.phone_number);\r\n        localStorage.setItem(\r\n          \"profile_picture\",\r\n          login_response.picture[0].picture_url\r\n        );\r\n        localStorage.setItem(\"profession\", login_response.user.profession);\r\n        localStorage.setItem(\"bio\", login_response.user.bio);\r\n        localStorage.setItem(\"is_authenticated\", \"true\");\r\n        history.push(\"/projects\");\r\n      })\r\n      .catch((error) => {\r\n        alert(\r\n          \"Please Check If you're entering the correct email and password!\"\r\n        );\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  async function loginAPI() {\r\n    const email = document.getElementById(\"email\").value;\r\n    const password = document.getElementById(\"password\").value;\r\n    const token = localStorage.getItem(\"device_token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/login\", {\r\n      method: \"POST\",\r\n      body: new URLSearchParams({\r\n        email: email,\r\n        password: password,\r\n        token: token,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const login_response = await response.json();\r\n    return login_response;\r\n  }\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    login();\r\n  };\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container style={{ backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          md={6}\r\n          sx={{ textAlign: \"center\", color: \"white\" }}\r\n          style={{\r\n            position: \"relative\",\r\n            height: \"100vh\",\r\n            backgroundImage: `url(${background})`,\r\n          }}\r\n        >\r\n          <h1 style={{ color: \"#1976d2\" }}>Todo Tasks</h1>\r\n          <div\r\n            style={{\r\n              marginTop: \"35px\",\r\n              backgroundColor: \"#1976d2\",\r\n              borderRadius: \"20px\",\r\n              marginLeft: \"10px\",\r\n              maxWidth: \"50%\",\r\n              float: \"left\",\r\n              padding: \"3px\",\r\n            }}\r\n          >\r\n            <p style={{ fontSize: \"13pt\", fontFamily: \"Roboto\" }}>\r\n              What is the perfect platform for freelancing?\r\n            </p>\r\n          </div>\r\n          <div\r\n            style={{\r\n              marginTop: \"35px\",\r\n              backgroundColor: \"#1976d2\",\r\n              borderRadius: \"20px\",\r\n              maxWidth: \"50%\",\r\n              float: \"right\",\r\n              marginRight: \"10px\",\r\n              padding: \"3px\",\r\n            }}\r\n          >\r\n            <p style={{ fontSize: \"13pt\", fontFamily: \"Roboto\" }}>\r\n              Todo Tasks is a map for you if you're searching for a freelancer.\r\n            </p>\r\n          </div>\r\n          <div\r\n            style={{\r\n              marginTop: \"10px\",\r\n              maxWidth: \"50%\",\r\n              backgroundColor: \"#1976d2\",\r\n              borderRadius: \"20px\",\r\n              float: \"right\",\r\n              marginRight: \"10px\",\r\n              padding: \"3px\",\r\n            }}\r\n          >\r\n            <p style={{ fontSize: \"13pt\", fontFamily: \"Roboto\" }}>\r\n              And your home if you are a freelancer and you want to work\r\n              comfortably.\r\n            </p>\r\n          </div>\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: \"0px\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                flex: \"8\",\r\n                backgroundColor: \"white\",\r\n                border: \"1px solid #1976d2\",\r\n                borderRadius: \"20px\",\r\n                textAlign: \"left\",\r\n                margin: \"10px\",\r\n                paddingLeft: \"10px\",\r\n                height: \"40px\",\r\n              }}\r\n            >\r\n              <p style={{ color: \"black\", fontFamily: \"Roboto\" }}>\r\n                By Waseem Issa on Behalf of SE Factory\r\n              </p>\r\n            </div>\r\n            <div style={{ flex: \"1\", marginLeft: \"-20px\" }}>\r\n              <p\r\n                style={{\r\n                  color: \"#1976d2\",\r\n                  fontSize: \"10pt\",\r\n                  marginBottom: \"5px\",\r\n                  paddingRight: \"10px\",\r\n                  paddingLeft: \"10px\",\r\n                }}\r\n              >\r\n                <SendIcon sx={{ width: \"35px\", height: \"35px\" }} />\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} sx={{ textAlign: \"center\" }}>\r\n          <Box\r\n            component=\"form\"\r\n            xs={{ marginBottom: \"10px\" }}\r\n            sx={{\r\n              \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\r\n            }}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n          >\r\n            <center>\r\n              <div\r\n                style={{\r\n                  border: \"1px solid #1976d2\",\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: \"35px\",\r\n                  marginTop: \"100px\",\r\n                  width: \"80%\",\r\n                  fontFamily: \"Roboto\",\r\n                }}\r\n              >\r\n                <h1 style={{ fontFamily: \"Roboto\" }}>Login</h1>\r\n                <TextField\r\n                  required\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  placeholder=\"someone@example.com \"\r\n                  style={{ width: \"80%\" }}\r\n                />\r\n                <TextField\r\n                  required\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  label=\"Password\"\r\n                  placeholder=\"your password\"\r\n                  style={{ width: \"80%\" }}\r\n                />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ width: \"80%\" }}\r\n                  onClick={handleLogin}\r\n                >\r\n                  Login\r\n                </Button>\r\n                <p>\r\n                  New to Todo Tasks?{\" \"}\r\n                  <Link component={RouterLink} to=\"/register\">\r\n                    Register.\r\n                  </Link>{\" \"}\r\n                </p>\r\n              </div>\r\n            </center>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport background from \"../Images/bg.jpg\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { Link as RouterLink} from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport default function RegisterPage() {\r\n  const history = useHistory();\r\n\r\n  const [is_freelancer, setIsFreelancer] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setIsFreelancer(event.target.value);\r\n  };\r\n\r\n  function register() {\r\n    registerAPI()\r\n      .then(() => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n        alert(\r\n          \"Registration fail, you should:\\nFill all the fields \\nBe at least 18 years old\\nHave a unique email and username\\nProvide a confirmed password of at least 6 characters\"\r\n        );\r\n      });\r\n  }\r\n\r\n  async function registerAPI() {\r\n    const first_name = document.getElementById(\"first_name\").value;\r\n    const last_name = document.getElementById(\"last_name\").value;\r\n    const username = document.getElementById(\"username\").value;\r\n    const email = document.getElementById(\"email\").value;\r\n    const password = document.getElementById(\"password\").value;\r\n    const password_confirmation = document.getElementById(\"password_confirmation\").value;\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/register\", {\r\n      method: \"POST\",\r\n      body: new URLSearchParams({\r\n        first_name: first_name,\r\n        last_name: last_name,\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n        password_confirmation: password_confirmation,\r\n        is_freelancer: is_freelancer,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const register_response = await response.json();\r\n    return register_response;\r\n  }\r\n\r\n  const handleRegistration = async (e) => {\r\n    e.preventDefault();\r\n    register();\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container style={{ backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          md={6}\r\n          sx={{ textAlign: \"center\", color: \"white\" }}\r\n          style={{\r\n            position: \"relative\",\r\n            height: \"680px\",\r\n            backgroundImage: `url(${background})`,\r\n          }}\r\n        >\r\n          <h1 style={{ color: \"#1976d2\", fontFamily: \"Roboto\" }}>Todo Tasks</h1>\r\n          <div\r\n            style={{\r\n              marginTop: \"35px\",\r\n              backgroundColor: \"#1976d2\",\r\n              borderRadius: \"20px\",\r\n              maxWidth: \"50%\",\r\n              float: \"left\",\r\n              marginLeft: \"10px\",\r\n              padding: \"3px\",\r\n            }}\r\n          >\r\n            <p style={{ fontSize: \"13pt\", fontFamily: \"Roboto\" }}>\r\n              What is the perfect platform for freelancing?\r\n            </p>\r\n          </div>\r\n          <div\r\n            style={{\r\n              marginTop: \"35px\",\r\n              backgroundColor: \"#1976d2\",\r\n              borderRadius: \"20px\",\r\n              maxWidth: \"50%\",\r\n              float: \"right\",\r\n              marginRight: \"10px\",\r\n              padding: \"3px\",\r\n            }}\r\n          >\r\n            <p style={{ fontSize: \"13pt\", fontFamily: \"Roboto\" }}>\r\n              Todo Tasks is a map for you if you're searching for a freelancer.\r\n            </p>\r\n          </div>\r\n          <div\r\n            style={{\r\n              marginTop: \"10px\",\r\n              maxWidth: \"50%\",\r\n              backgroundColor: \"#1976d2\",\r\n              borderRadius: \"20px\",\r\n              float: \"right\",\r\n              marginRight: \"10px\",\r\n              padding: \"3px\",\r\n            }}\r\n          >\r\n            <p style={{ fontSize: \"13pt\", fontFamily: \"Roboto\" }}>\r\n              And your home if you are a freelancer and you want to work\r\n              comfortably.\r\n            </p>\r\n          </div>\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: \"0px\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                flex: \"8\",\r\n                backgroundColor: \"white\",\r\n                border: \"1px solid #1976d2\",\r\n                borderRadius: \"20px\",\r\n                textAlign: \"left\",\r\n                margin: \"10px\",\r\n                paddingLeft: \"10px\",\r\n                height: \"40px\",\r\n              }}\r\n            >\r\n              <p style={{ color: \"black\", fontFamily: \"Roboto\" }}>\r\n                By Waseem Issa on Behalf of SE Factory\r\n              </p>\r\n            </div>\r\n            <div style={{ flex: \"1\", marginLeft: \"-20px\" }}>\r\n              <p\r\n                style={{\r\n                  color: \"#1976d2\",\r\n                  fontSize: \"10pt\",\r\n                  marginBottom: \"5px\",\r\n                  paddingRight: \"10px\",\r\n                  paddingLeft: \"10px\",\r\n                }}\r\n              >\r\n                <SendIcon sx={{ width: \"35px\", height: \"35px\" }} />\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} sx={{ textAlign: \"center\" }}>\r\n          <Box\r\n            component=\"form\"\r\n            sx={{\r\n              \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\r\n            }}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n          >\r\n            <center>\r\n              <div\r\n                style={{\r\n                  marginTop: \"10px\",\r\n                  marginBottom: \"10px\",\r\n                  border: \"1px solid #1976d2\",\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: \"35px\",\r\n                  width: \"80%\",\r\n                  fontFamily: \"Roboto\",\r\n                }}\r\n              >\r\n                <h1 style={{ fontFamily: \"Roboto\" }}>Registration</h1>\r\n                <TextField\r\n                  required\r\n                  id=\"first_name\"\r\n                  type=\"text\"\r\n                  label=\"First Name\"\r\n                  placeholder=\"John\"\r\n                  sx={{ fontFamily: \"Roboto\" }}\r\n                  style={{ width: \"80%\" }}\r\n                />\r\n                <TextField\r\n                  required\r\n                  id=\"last_name\"\r\n                  type=\"text\"\r\n                  label=\"Last Name\"\r\n                  placeholder=\"Smith\"\r\n                  style={{ width: \"80%\" }}\r\n                />\r\n                <TextField\r\n                  required\r\n                  id=\"username\"\r\n                  type=\"text\"\r\n                  label=\"Username\"\r\n                  placeholder=\"john.smith\"\r\n                  style={{ width: \"80%\" }}\r\n                />\r\n                <TextField\r\n                  required\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  label=\"Email Address\"\r\n                  placeholder=\"someone@example.com \"\r\n                  style={{ width: \"80%\" }}\r\n                />\r\n                <TextField\r\n                  required\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  label=\"Password\"\r\n                  placeholder=\"At least 6 characters\"\r\n                  style={{ width: \"80%\" }}\r\n                />\r\n                <TextField\r\n                  required\r\n                  type=\"password\"\r\n                  id=\"password_confirmation\"\r\n                  label=\"Confirm Password\"\r\n                  placeholder=\"Should match password\"\r\n                  style={{ width: \"80%\" }}\r\n                />\r\n                <FormControl component=\"fieldset\" sx={{ width: \"80%\" }}>\r\n                  <FormLabel component=\"legend\">\r\n                    Are you a freelancer?\r\n                  </FormLabel>\r\n                  <RadioGroup\r\n                    required\r\n                    aria-label=\"is_freelancer\"\r\n                    name=\"radio-buttons-group\"\r\n                    id=\"is_freelancer\"\r\n                    value={is_freelancer}\r\n                    onChange={handleChange}\r\n                    sx={{ display: \"flex\", flexDirection: \"row\" }}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"1\"\r\n                      control={<Radio />}\r\n                      label=\"Yes\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"0\"\r\n                      control={<Radio />}\r\n                      label=\"No\"\r\n                    />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ width: \"80%\" }}\r\n                  type=\"submit\"\r\n                  onClick={handleRegistration}\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n                <p>\r\n                  Already on Todo Tasks?{\" \"}\r\n                  <Link component={RouterLink} to=\"/\">\r\n                    Login.\r\n                  </Link>{\" \"}\r\n                </p>\r\n              </div>\r\n            </center>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport FeedIcon from \"@mui/icons-material/Feed\";\r\nimport WorkIcon from \"@mui/icons-material/Work\";\r\nimport SchoolIcon from \"@mui/icons-material/School\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport { Link as RouterLink, MemoryRouter as Router } from \"react-router-dom\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function UserCard() {\r\n  const [id, setId] = useState(localStorage.getItem(\"todo_tasks_user_id\"));\r\n  const [name, setName] = useState(\r\n    localStorage.getItem(\"todo_tasks_user_name\")\r\n  );\r\n  const [profession, setProfession] = useState(\r\n    localStorage.getItem(\"todo_tasks_user_profession\")\r\n  );\r\n  const [picture, setPicture] = useState(\r\n    localStorage.getItem(\"todo_tasks_user_picture\")\r\n  );\r\n\r\n  useEffect(() => {\r\n    setId(localStorage.getItem(\"todo_tasks_user_id\"));\r\n    setName(localStorage.getItem(\"todo_tasks_user_name\"));\r\n    setProfession(localStorage.getItem(\"todo_tasks_user_profession\"));\r\n    setPicture(localStorage.getItem(\"todo_tasks_user_picture\"));\r\n\r\n    const isFriend = localStorage.getItem(\"is_friend\");\r\n    if (isFriend == \"true\") {\r\n      document.getElementById(\"follow_label\").style.display = \"none\";\r\n    }\r\n  }, []);\r\n\r\n  const handleFollow = () => {\r\n    sendFollowRequest();\r\n    document.getElementById(\"follow_label\").style.display = \"none\";\r\n  };\r\n\r\n  function sendFollowRequest() {\r\n    sendFollowRequestAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function sendFollowRequestAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/send-follow-request\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user2_id: id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const add_response = await response.json();\r\n    return add_response;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment style={{ width: \"80%\" }}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"sm\" lg={{ marginLeft: \"20px\", marginRight: \"20px\" }}>\r\n        <Box sx={{ bgcolor: \"#1976d2\", height: \"100px\" }}>\r\n          <center>\r\n            <Avatar\r\n              src={picture}\r\n              sx={{\r\n                width: \"100px\",\r\n                height: \"100px\",\r\n                bottom: \"-50px\",\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              A\r\n            </Avatar>\r\n          </center>\r\n          <label\r\n            id=\"follow_label\"\r\n            htmlFor=\"follow\"\r\n            style={{ paddingLeft: \"65%\" }}\r\n          >\r\n            <IconButton\r\n              onClick={handleFollow}\r\n              color=\"primary\"\r\n              id=\"follow\"\r\n              aria-label=\"Follow\"\r\n              component=\"span\"\r\n            >\r\n              <AddCircleOutlineIcon />\r\n            </IconButton>\r\n          </label>\r\n        </Box>\r\n        <Box sx={{ paddingTop: \"40px\", textAlign: \"center\" }}>\r\n          <h3>{name}</h3>\r\n          <p style={{ marginTop: \"-20px\" }}>{profession}</p>\r\n        </Box>\r\n        <Box>\r\n          <List>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/feed\">\r\n                <ListItemIcon>\r\n                  <FeedIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Contact Info\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/experience\">\r\n                <ListItemIcon>\r\n                  <WorkIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Experience\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/education\">\r\n                <ListItemIcon>\r\n                  <SchoolIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Education\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/skills\">\r\n                <ListItemIcon>\r\n                  <StarIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Skills\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          </List>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\n\r\nexport default function UserEducation(props) {\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"education\">\r\n            <StarIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <p>\r\n              {props.degree} in {props.major}\r\n            </p>\r\n            <p>\r\n              {props.university} ({props.year})\r\n            </p>\r\n          </Typography>\r\n        }\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../../Components/Suggestion\";\r\nimport Pending from \"../../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../../Components/ProfileComponents/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport UserEducation from \"../../Components/ProfileComponents/UserEducation\";\r\nimport MainNavigation from \"../../Components/Layout/MainNavigation\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction UserEducationPage() {\r\n  const history = new useHistory();\r\n  const [educations, setEducations] = useState([]);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getUserEdcuation();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserEdcuation() {\r\n    getUserEdcuationAPI()\r\n      .then((education_response) => {\r\n        setEducations(education_response.education);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getUserEdcuationAPI() {\r\n    const user_id = localStorage.getItem(\"todo_tasks_user_id\");\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/user-education\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user_id: user_id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const education_response = await response.json();\r\n    return education_response;\r\n  }\r\n\r\n  //pending Requests\r\n\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Education\r\n                </Typography>\r\n              </Box>\r\n              <Stack direction=\"column\" spacing={2}>\r\n                {educations.map((education) => (\r\n                  <UserEducation\r\n                    id={education.id}\r\n                    degree={education.degree}\r\n                    major={education.major}\r\n                    university={education.university}\r\n                    year={education.year}\r\n                  ></UserEducation>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      username={pendingRequest.info.username}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                      profession={pendingRequest.info.profession}\r\n                      email={pendingRequest.info.email}\r\n                      bio={pendingRequest.info.bio}\r\n                      phone_number={pendingRequest.info.phone_number}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEducationPage;\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\n\r\nexport default function UserSkill(props) {\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"Skill\">\r\n            <StarIcon />\r\n          </Avatar>\r\n        }\r\n        title={props.title}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../../Components/Suggestion\";\r\nimport Pending from \"../../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../../Components/ProfileComponents/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport UserSkill from \"../../Components/ProfileComponents/UserSkill\";\r\nimport MainNavigation from \"../../Components/Layout/MainNavigation\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction UserSkillsPage() {\r\n  const history = new useHistory();\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [skills, setSkills] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getUserSkills();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserSkills() {\r\n    getUserSkillsAPI()\r\n      .then((skills_response) => {\r\n        setSkills(skills_response.skills);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getUserSkillsAPI() {\r\n    const user_id = localStorage.getItem(\"todo_tasks_user_id\");\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-user-skills\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user_id: user_id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const skills_response = await response.json();\r\n    return skills_response;\r\n  }\r\n\r\n  //pending Requests\r\n\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Skills\r\n                </Typography>\r\n              </Box>\r\n              <Stack id=\"skills\" direction=\"column\" spacing={2}>\r\n                {skills.map((skill) => (\r\n                  <UserSkill id={skill.id} title={skill.title}></UserSkill>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      username={pendingRequest.info.username}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                      profession={pendingRequest.info.profession}\r\n                      email={pendingRequest.info.email}\r\n                      bio={pendingRequest.info.bio}\r\n                      phone_number={pendingRequest.info.phone_number}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserSkillsPage;\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../../Components/Suggestion\";\r\nimport Pending from \"../../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../../Components/ProfileComponents/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport MainNavigation from \"../../Components/Layout/MainNavigation\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\nimport LocalPhoneIcon from \"@mui/icons-material/LocalPhone\";\r\nimport EmailIcon from \"@mui/icons-material/Email\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction UserFeed() {\r\n  const history = new useHistory();\r\n  const bio = localStorage.getItem(\"todo_tasks_user_bio\");\r\n  const email = localStorage.getItem(\"todo_tasks_user_email\");\r\n  const phone_number = localStorage.getItem(\"todo_tasks_user_phone_number\");\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  //pending Requests\r\n\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Contact Info\r\n                </Typography>\r\n              </Box>\r\n              <Stack direction=\"column\" spacing={2}>\r\n                <Card\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <CardHeader\r\n                    sx={{ flex: \"5\" }}\r\n                    avatar={\r\n                      <Avatar\r\n                        sx={{ bgcolor: \"primary.dark\" }}\r\n                        aria-label=\"Bio\"\r\n                      >\r\n                        <InfoIcon />\r\n                      </Avatar>\r\n                    }\r\n                    title={\r\n                      <Typography>\r\n                        <h3>Bio</h3>\r\n                        <p style={{ marginTop: \"-20px\", fontFamily: \"roboto\" }}>\r\n                          {bio}\r\n                        </p>\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </Card>\r\n                <Card\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <CardHeader\r\n                    sx={{ flex: \"5\" }}\r\n                    avatar={\r\n                      <Avatar\r\n                        sx={{ bgcolor: \"primary.dark\" }}\r\n                        aria-label=\"E-mail Address\"\r\n                      >\r\n                        <EmailIcon />\r\n                      </Avatar>\r\n                    }\r\n                    title={\r\n                      <Typography>\r\n                        <h3>E-mail Address</h3>\r\n                        <p style={{ marginTop: \"-20px\", fontFamily: \"roboto\" }}>\r\n                          {email}\r\n                        </p>\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </Card>\r\n                <Card\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <CardHeader\r\n                    sx={{ flex: \"5\" }}\r\n                    avatar={\r\n                      <Avatar\r\n                        sx={{ bgcolor: \"primary.dark\" }}\r\n                        aria-label=\"Phone Number\"\r\n                      >\r\n                        <LocalPhoneIcon />\r\n                      </Avatar>\r\n                    }\r\n                    title={\r\n                      <Typography>\r\n                        <h3>Phone Number</h3>\r\n                        <p style={{ marginTop: \"-20px\", fontFamily: \"roboto\" }}>\r\n                          {phone_number}\r\n                        </p>\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </Card>\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      username={pendingRequest.info.username}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                      profession={pendingRequest.info.profession}\r\n                      email={pendingRequest.info.email}\r\n                      bio={pendingRequest.info.bio}\r\n                      phone_number={pendingRequest.info.phone_number}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserFeed;\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport WorkIcon from \"@mui/icons-material/Work\";\r\n\r\nexport default function UserExperience(props) {\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"Experience\">\r\n            <WorkIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <p>\r\n              {props.position} at {props.company}\r\n            </p>\r\n            <p>\r\n              From {props.start_date} till {props.end_date}\r\n            </p>\r\n          </Typography>\r\n        }\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../../Components/Suggestion\";\r\nimport Pending from \"../../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../../Components/ProfileComponents/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport UserExperience from \"../../Components/ProfileComponents/UserExperience\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport MainNavigation from \"../../Components/Layout/MainNavigation\";\r\n\r\nfunction UserExperiencePage() {\r\n  const history = new useHistory();\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [experiences, setExperiences] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getUserExperience();\r\n  }, []);\r\n\r\n  function getUserExperience() {\r\n    getUserExperienceAPI()\r\n      .then((experience_response) => {\r\n        setExperiences(experience_response.jobs);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getUserExperienceAPI() {\r\n    const user_id = localStorage.getItem(\"todo_tasks_user_id\");\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/user-jobs\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        user_id: user_id,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const experience_response = await response.json();\r\n    return experience_response;\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Experience\r\n                </Typography>\r\n              </Box>\r\n              <Stack direction=\"column\" spacing={2}>\r\n                {experiences.map((experience) => (\r\n                  <UserExperience\r\n                    id={experience.id}\r\n                    company={experience.company}\r\n                    position={experience.position}\r\n                    start_date={experience.start_date}\r\n                    end_date={experience.end_date}\r\n                  ></UserExperience>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      username={pendingRequest.info.username}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                      profession={pendingRequest.info.profession}\r\n                      email={pendingRequest.info.email}\r\n                      bio={pendingRequest.info.bio}\r\n                      phone_number={pendingRequest.info.phone_number}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserExperiencePage;\r\n","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Stack from '@mui/material/Stack';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\r\nimport BlockIcon from '@mui/icons-material/Block';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Connection(props) {\r\n  const history = new useHistory();\r\n\r\n  const handleUnfollow = () =>{\r\n    unfollow();\r\n    document.getElementById('connection_'+props.id).style.display = \"none\";\r\n  }\r\n\r\n  const handleBlock = () => {\r\n    block();\r\n    document.getElementById('connection_'+props.id).style.display = \"none\";\r\n  }\r\n\r\n  //unfollow\r\n  function unfollow(){\r\n    unfollowAPI().then()\r\n    .catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function unfollowAPI(){\r\n  const user2_id = props.id;\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/unfollow\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user2_id': user2_id\r\n        })\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const unfollow_response = await response.json();\r\n  return unfollow_response;\r\n  }\r\n\r\n  //block\r\n  function block(){\r\n    blockAPI().then()\r\n    .catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function blockAPI(){\r\n  const user2_id = props.id;\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/block\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user2_id': user2_id\r\n        })\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const block_response = await response.json();\r\n  return block_response;\r\n  }\r\n\r\n  const handleClick = () => {\r\n    localStorage.setItem('todo_tasks_user_id', props.id);\r\n    localStorage.setItem('todo_tasks_user_name', props.name);\r\n    localStorage.setItem('todo_tasks_user_profession', props.profession);\r\n    localStorage.setItem('todo_tasks_user_picture', props.picture);\r\n    localStorage.setItem('todo_tasks_user_bio', props.bio);\r\n    localStorage.setItem('todo_tasks_user_email', props.email);\r\n    localStorage.setItem('todo_tasks_user_phone_number', props.phone_number);\r\n    localStorage.setItem('is_friend', 'true');\r\n    history.push('/feed/'+props.username);\r\n    window.location.reload();\r\n  }\r\n  \r\n\r\n  return (\r\n    <Card id={\"connection_\"+props.id} sx={{display:'flex', flexDirection:'row', paddingTop:'5px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        onClick={handleClick}\r\n        avatar={\r\n          <Avatar aria-label=\"profile picture\" src={props.picture}>\r\n          </Avatar>\r\n        }\r\n        title={props.name}\r\n        />\r\n        <Stack sx={{display:'flex', flexDirection:'row'}}>\r\n        <IconButton onClick={handleUnfollow} color=\"error\" aria-label=\"Unfollow\" component=\"span\" sx={{flex:'1'}}>\r\n        <PersonRemoveIcon  />\r\n        </IconButton>\r\n        <IconButton onClick={handleBlock} color=\"error\"aria-label=\"Block\" component=\"span\" sx={{flex:'1'}}>\r\n        <BlockIcon />\r\n        </IconButton>\r\n        </Stack>\r\n        </Card>\r\n  );\r\n}","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport { useState } from \"react\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport { useEffect } from \"react\";\r\nimport Connection from \"../Components/Connection\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction ConnectionsPage() {\r\n  const history = new useHistory();\r\n  const [connections, setConnections] = useState([]);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getConnections();\r\n  }, []);\r\n\r\n  function getConnections() {\r\n    getConnectionsAPI()\r\n      .then((connections_response) => {\r\n        setConnections(connections_response.connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getConnectionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-connections\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const connections_response = await response.json();\r\n    return connections_response;\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Connections\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Stack id=\"connections\" direction=\"column\" spacing={2}>\r\n                {connections.map((connection) => (\r\n                  <Connection\r\n                    id={connection.info.id}\r\n                    username={connection.info.username}\r\n                    name={\r\n                      connection.info.first_name +\r\n                      \" \" +\r\n                      connection.info.last_name\r\n                    }\r\n                    picture={connection.picture[0].picture_url}\r\n                    profession={connection.info.profession}\r\n                    email={connection.info.email}\r\n                    bio={connection.info.bio}\r\n                    phone_number={connection.info.phone_number}\r\n                  ></Connection>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConnectionsPage;\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport { useState } from \"react\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction SearchResults() {\r\n  const history = new useHistory();\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getSearchResults();\r\n  }, []);\r\n\r\n  function getSearchResults() {\r\n    getSearchResultsAPI()\r\n      .then((search_response) => {\r\n        setSearchResults(search_response.search_results);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSearchResultsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n    const search_value = localStorage.getItem(\"search_value\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/search\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        search_key: search_value,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const search_response = await response.json();\r\n    return search_response;\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Search Results\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Stack id=\"connections\" direction=\"column\" spacing={2}>\r\n                {searchResults.map((result) => (\r\n                  <Suggestion\r\n                    id={result.info.id}\r\n                    username={result.info.username}\r\n                    name={result.info.first_name + \" \" + result.info.last_name}\r\n                    picture={result.picture[0].picture_url}\r\n                    profession={result.info.profession}\r\n                    email={result.info.email}\r\n                    bio={result.info.bio}\r\n                    phone_number={result.info.phone_number}\r\n                  ></Suggestion>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResults;\r\n","import firebase from \"firebase\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyCPq5sSe6IcMKCG6ocxKgw3SN0wfhn11pI\",\r\n  authDomain: \"todotasks-5c2a9.firebaseapp.com\",\r\n  projectId: \"todotasks-5c2a9\",\r\n  storageBucket: \"todotasks-5c2a9.appspot.com\",\r\n  messagingSenderId: \"813965289640\",\r\n  appId: \"1:813965289640:web:cb1401465f9479f40eba9d\",\r\n  measurementId: \"G-TEDBSBFEXQ\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport PersonRemoveIcon from \"@mui/icons-material/PersonRemove\";\r\n\r\nexport default function Blocked(props) {\r\n  const handleUnblock = () => {\r\n    unblock();\r\n  };\r\n\r\n  //unblock\r\n  function unblock() {\r\n    unblockAPI()\r\n      .then(() => {\r\n        document.getElementById(\"blocked_\" + props.id).style.display = \"none\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function unblockAPI() {\r\n    const user2_id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/unblock\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        user2_id: user2_id,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const block_response = await response.json();\r\n    return block_response;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      id={\"blocked_\" + props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        avatar={<Avatar aria-label=\"profile pic\" src={props.picture}></Avatar>}\r\n        title={props.name}\r\n      />\r\n      <Stack sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <IconButton\r\n          onClick={handleUnblock}\r\n          style={{ color: \"#1976d2\" }}\r\n          aria-label=\"unblock\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <PersonRemoveIcon />\r\n        </IconButton>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport { useState } from \"react\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport { useEffect } from \"react\";\r\nimport Blocked from \"../Components/Blocked\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction BlockedContacts() {\r\n  const history = new useHistory();\r\n  const [blockedContacts, setBlockedContacts] = useState([]);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getBlockedContacts();\r\n  }, []);\r\n\r\n  function getBlockedContacts() {\r\n    getBlockedContactsAPI()\r\n      .then((blocked_response) => {\r\n        setBlockedContacts(blocked_response.blocked_contacts);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getBlockedContactsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-blocked-contacts\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const blocked_response = await response.json();\r\n    return blocked_response;\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Blocked Contacts\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Stack id=\"connections\" direction=\"column\" spacing={2}>\r\n                {blockedContacts.map((contact) => (\r\n                  <Blocked\r\n                    id={contact.info.id}\r\n                    name={\r\n                      contact.info.first_name + \" \" + contact.info.last_name\r\n                    }\r\n                    picture={contact.picture[0].picture_url}\r\n                  ></Blocked>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlockedContacts;\r\n","import * as React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport MainPage from \"./Pages/MainPage\";\nimport MessagesPage from \"./Pages/MessagesPage\";\nimport NotificationsPage from \"./Pages/NotificationsPage\";\nimport ProjectsPage from \"./Pages/ProjectsPage\";\nimport SkillsPage from \"./Pages/SkillsPage\";\nimport EducationPage from \"./Pages/EducationPage\";\nimport ExperiencePage from \"./Pages/ExperiencePage\";\nimport LoginPage from \"./Pages/LoginPage\";\nimport RegisterPage from \"./Pages/RegisterPage\";\nimport UserEducationPage from \"./Pages/Profile/UserEducationPage\";\nimport UserSkillsPage from \"./Pages/Profile/UserSkillsPage\";\nimport UserFeed from \"./Pages/Profile/UserFeed\";\nimport UserExperiencePage from \"./Pages/Profile/UserExperiencePage\";\nimport ConnectionsPage from \"./Pages/ConnectionsPage\";\nimport SearchResults from \"./Pages/SearchResults\";\nimport firebase from \"./firebase\";\nimport BlockedContacts from \"./Pages/BlockedContacts\";\nimport { isIOS } from \"react-device-detect\";\n\nexport default class App extends React.Component {\n  componentDidMount() {\n    if (!isIOS) {\n      const messaging = firebase.messaging();\n      if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker\n          .register(\"./firebase-messaging-sw.js\")\n          .then(function (registration) {\n            console.log(\n              \"Registration successful, scope is:\",\n              registration.scope\n            );\n            Notification.requestPermission().then(() => {\n              messaging\n                .getToken({\n                  vapidKey:\n                    \"BPeIeKcMyJbJ6ag2MRhpHdSLOUvNvhPsJp6KXIrPFXllE8LcGx3Mfsm54SwXiir8YsmY_8wWjrOwmJadR-g10l4\",\n                  serviceWorkerRegistration: registration,\n                })\n                .then((currentToken) => {\n                  if (currentToken) {\n                    console.log(\"current token for client: \", currentToken);\n                    localStorage.setItem(\"device_token\", currentToken);\n                  } else {\n                    console.log(\n                      \"No registration token available. Request permission to generate one.\"\n                    );\n                  }\n                })\n                .catch((err) => {\n                  console.log(\n                    \"An error occurred while retrieving token. \",\n                    err\n                  );\n                });\n            });\n          })\n          .catch(function (err) {\n            console.log(\"Service worker registration failed, error:\", err);\n          });\n      }\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Switch>\n          {/* Routes for personal profile */}\n          <Route path=\"/\" exact>\n            <LoginPage />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterPage />\n          </Route>\n          <Route path=\"/user-feed\">\n            <MainPage />\n          </Route>\n          <Route path=\"/connections\">\n            <ConnectionsPage />\n          </Route>\n          <Route path=\"/blocked\">\n            <BlockedContacts />\n          </Route>\n          <Route path=\"/messages\">\n            <MessagesPage />\n          </Route>\n          <Route path=\"/notifications\">\n            <NotificationsPage />\n          </Route>\n          <Route path=\"/projects\">\n            <ProjectsPage />\n          </Route>\n          <Route path=\"/user-skills\">\n            <SkillsPage />\n          </Route>\n          <Route path=\"/user-education\">\n            <EducationPage />\n          </Route>\n          <Route path=\"/user-experience\">\n            <ExperiencePage />\n          </Route>\n          <Route path=\"/search\">\n            <SearchResults />\n          </Route>\n\n          {/* Routes for showing any user profile */}\n          <Route path=\"/feed\">\n            <UserFeed />\n          </Route>\n          <Route path=\"/education\">\n            <UserEducationPage />\n          </Route>\n          <Route path=\"/skills\">\n            <UserSkillsPage />\n          </Route>\n          <Route path=\"/experience\">\n            <UserExperiencePage />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}