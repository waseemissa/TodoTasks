{"version":3,"sources":["Components/Suggestion.js","Components/Pending.js","Components/UserCard.js","Components/Layout/MainNavigation.js","Pages/MainPage.js","Components/UserComment.js","Pages/MessagesPage.js","Components/Notification.js","Pages/NotificationsPage.js","Components/Project.js","Pages/ProjectsPage.js","Components/UserSkill.js","Pages/SkillsPage.js","Components/UserEducation.js","Pages/EducationPage.js","Components/UserExperience.js","Pages/ExperiencePage.js","images/bg.jpg","Pages/LoginPage.js","Pages/RegisterPage.js","Components/ProfileComponents/UserCard.js","Components/ProfileComponents/UserEducation.js","Pages/Profile/UserEducationPage.js","Components/ProfileComponents/UserSkill.js","Pages/Profile/UserSkillsPage.js","Pages/Profile/UserFeed.js","Components/ProfileComponents/UserExperience.js","Pages/Profile/UserExperiencePage.js","Components/Connection.js","Pages/ConnectionsPage.js","Pages/SearchResults.js","firebase.js","Components/Blocked.js","Pages/BlockedContacts.js","App.js","index.js"],"names":["Suggestion","props","history","useHistory","a","authorization","localStorage","getItem","fetch","method","headers","body","URLSearchParams","id","response","ok","Error","json","add_response","Card","sx","display","flexDirection","paddingTop","CardHeader","onClick","setItem","name","profession","picture","bio","email","phone_number","push","username","window","location","reload","flex","style","fontFamily","avatar","Avatar","src","bgcolor","red","title","IconButton","color","component","sendFollowRequestAPI","then","console","log","catch","error","message","document","getElementById","Pending","user2_id","value","accepts","Authorization","accept_response","delete_response","hidden","Stack","direction","acceptFollowRequestAPI","deleteFollowRequestAPI","Input","styled","UserCard","useState","user_picture","setUserPicture","setSelectedImage","width","CssBaseline","Container","maxWidth","lg","marginLeft","marginRight","Box","height","bottom","position","htmlFor","paddingLeft","accept","type","onChange","e","target","files","event","fd","FormData","append","axios","post","res","data","picture_url","fileUploadHandler","textAlign","marginTop","List","ListItem","disablePadding","ListItemButton","RouterLink","to","ListItemIcon","ListItemText","primary","Search","theme","borderRadius","shape","backgroundColor","alpha","palette","common","white","spacing","breakpoints","up","SearchIconWrapper","padding","pointerEvents","alignItems","justifyContent","StyledInputBase","InputBase","transition","transitions","create","MainNavigation","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","count","setCount","useEffect","getNotificationsCountAPI","count_response","addEventListener","keyCode","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","clear","onpopstate","go","mobileMenuId","renderMobileMenu","size","Badge","badgeContent","flexGrow","AppBar","Toolbar","Typography","variant","noWrap","textDecoration","xs","sm","placeholder","inputProps","md","edge","top","left","transform","border","boxShadow","p","MainPage","setOpen","handleClose","setProfession","setBio","setPhoneNumber","pendingRequests","setPendingRequests","suggestions","setSuggestions","edit_response","pending_response","suggestions_response","getPendingRequestsAPI","pending_connections","getSuggestionsAPI","Grid","container","item","paddingBottom","marginBottom","mt","mb","alignSelf","Modal","noValidate","autoComplete","TextField","label","innerHTML","Button","editProfileAPI","map","pendingRequest","info","first_name","last_name","suggestion","UserComment","fontSize","CardContent","text","MessagesPage","messages","setMessages","setMessage","allMessages","Pusher","logToConsole","cluster","subscribe","bind","submit","overflow","background","inlineSize","gap","endIcon","right","Notification","deleteNotificationAPI","NotificationsPage","notifications","setNotifications","notifications_response","getUserNotificationsAPI","notification","Project","comments","setComments","getProjectComments","project_id","markAsDone_response","getProjectCommentsAPI","comments_response","comment_text","due_date","amount","markAsDoneAPI","comment","user","addCommentAPI","ProjectsPage","projects","setProjects","freelancers","setFreelancers","freelancerId","setFreelancerId","freelancers_response","freelancer_user_id","description","price","getProjects","getProjectsAPI","projects_response","getFreelancersAPI","InputLabel","Select","labelId","freelancer","createProjectAPI","project","UserSkill","setTitle","update_response","deleteSkillAPI","skills_response","updateSkillAPI","SkillsPage","skills","setSkills","getUserSkills","getUserSkillsAPI","user_id","addSkill","addSkillAPI","skill_title","skill","UserEducation","degree","setDegree","university","setUniversity","major","setMajor","year","setYear","education_id","deleteEducationAPI","updateEducationAPI","EducationPage","educations","setEducations","getUserEdcuation","getUserEdcuationAPI","education_response","education","addEducation","addEducationAPI","UserExperience","setPosition","company","setCompany","start_date","setStartDate","end_date","setEndDate","deleteExperienceAPI","updateExperienceAPI","ExperiencePage","experiences","setExperiences","getUserExperience","getUserExperienceAPI","experience_response","jobs","addExperience","addExperienceAPI","experience","Paper","typography","body2","secondary","LoginPage","login","loginAPI","login_response","access_token","alert","password","token","handleLogin","preventDefault","backgroundImage","float","margin","paddingRight","m","required","Link","RegisterPage","is_freelancer","setIsFreelancer","register","registerAPI","register_response","password_confirmation","handleRegistration","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","setId","setName","setPicture","UserEducationPage","UserSkillsPage","UserFeed","UserExperiencePage","Connection","unfollow_response","block_response","unfollowAPI","blockAPI","ConnectionsPage","connections","setConnections","connections_response","getConnectionsAPI","connection","SearchResults","searchResults","setSearchResults","search_value","search_response","getSearchResultsAPI","search_results","result","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Blocked","unblockAPI","unblock_response","BlockedContacts","blockedContacts","setBlockedContacts","blocked_response","getBlockedContactsAPI","blocked_contacts","contact","App","messaging","navigator","serviceWorker","registration","scope","requestPermission","getToken","vapidKey","serviceWorkerRegistration","currentToken","err","path","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.e0c59512.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport { red } from '@mui/material/colors';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Suggestion(props) {\r\n  const history = new useHistory();\r\n\r\n\r\n\r\n  const handleSendRequest = () =>{\r\n    sendFollowRequest();\r\n    document.getElementById('suggestion_'+props.id).style.display= \"none\";\r\n  }\r\n\r\n  const handleClick = () => {\r\n    localStorage.setItem('todo_tasks_user_id', props.id);\r\n    localStorage.setItem('todo_tasks_user_name', props.name);\r\n    localStorage.setItem('todo_tasks_user_profession', props.profession);\r\n    localStorage.setItem('todo_tasks_user_picture', props.picture);\r\n    localStorage.setItem('todo_tasks_user_bio', props.bio);\r\n    localStorage.setItem('todo_tasks_user_email', props.email);\r\n    localStorage.setItem('todo_tasks_user_phone_number', props.phone_number);\r\n    localStorage.setItem('is_friend', 'false');\r\n    history.push('/feed/'+props.username);\r\n    window.location.reload();\r\n  }\r\n\r\n\r\nfunction sendFollowRequest(){\r\n  sendFollowRequestAPI().then(add_response=>{\r\n    console.log(add_response);\r\n\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function sendFollowRequestAPI(){\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/send-follow-request\", {\r\n      method: 'POST',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n      body: new URLSearchParams({\r\n        'user2_id': props.id,\r\n      })\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst add_response = await response.json();\r\nreturn add_response;\r\n}\r\n\r\n\r\n    return (\r\n        <Card id={'suggestion_'+props.id} sx={{display:'flex', flexDirection:'row', paddingTop:'5px'}}>\r\n        <CardHeader \r\n        onClick={handleClick}\r\n        sx={{flex:'5'}}\r\n        style={{fontFamily:'Roboto'}}\r\n        avatar={\r\n          <Avatar src={props.picture} sx={{ bgcolor: red[500] }} aria-label=\"Profile Picture\">\r\n            \r\n          </Avatar>\r\n        }\r\n        title={props.name}\r\n        />\r\n        <IconButton style={{color:'#1976d2'}} aria-label=\"Follow\" component=\"span\" sx={{flex:'1'}} onClick={handleSendRequest}>\r\n        <AddCircleIcon />\r\n        </IconButton>\r\n\r\n\r\n        </Card>\r\n    );\r\n  }\r\n  ","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { red } from \"@mui/material/colors\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Pending(props) {\r\n  const history = new useHistory();\r\n\r\n\r\n  const handleApproval = () => {\r\n    acceptFollowRequest();\r\n    document.getElementById(\"pending_\" + props.id).style.display = \"none\";\r\n  };\r\n\r\n  const handleRejection = () => {\r\n    deleteFollowRequest();\r\n    document.getElementById(\"pending_\" + props.id).style.display = \"none\";\r\n  };\r\n\r\n\r\n  function acceptFollowRequest() {\r\n    acceptFollowRequestAPI()\r\n      .then((accept_response) => {\r\n        console.log(accept_response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function acceptFollowRequestAPI() {\r\n    const user1_id = localStorage.getItem(\"id\");\r\n    const user2_id = document.getElementById(\"user2_id\").value;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/accept-follow-request\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user2_id: user2_id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const accept_response = await response.json();\r\n    return accept_response;\r\n  }\r\n\r\n  function deleteFollowRequest() {\r\n    deleteFollowRequestAPI()\r\n      .then((delete_response) => {\r\n        console.log(delete_response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function deleteFollowRequestAPI() {\r\n    const user1_id = localStorage.getItem(\"id\");\r\n    const user2_id = document.getElementById(\"user2_id\").value;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/delete-follow-request\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user2_id: user2_id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const delete_response = await response.json();\r\n    return delete_response;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      id={\"pending_\" + props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"10\" }}\r\n        style={{fontFamily:'Roboto'}}\r\n        avatar={\r\n          <Avatar\r\n            sx={{ bgcolor: red[500] }}\r\n            aria-label=\"profile_pic\"\r\n            src={props.picture}\r\n          ></Avatar>\r\n        }\r\n        title={props.name}\r\n      />\r\n      <button hidden id=\"user2_id\" value={props.id}></button>\r\n      <Stack direction=\"row\" sx={{ flex: \"1\" }}>\r\n        <IconButton\r\n          style={{color:'#1976d2'}}\r\n          aria-label=\"Approve\"\r\n          onClick={handleApproval}\r\n        >\r\n          <CheckIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"error\"\r\n          aria-label=\"Decline\"\r\n          onClick={handleRejection}\r\n        >\r\n          <CancelIcon />\r\n        </IconButton>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Divider from '@mui/material/Divider';\r\nimport Button from '@mui/material/Button';\r\nimport InboxIcon from '@mui/icons-material/Inbox';\r\nimport DraftsIcon from '@mui/icons-material/Drafts';\r\nimport AccountTreeIcon from '@mui/icons-material/AccountTree';\r\nimport FeedIcon from '@mui/icons-material/Feed';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport SchoolIcon from '@mui/icons-material/School';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport PersonOffIcon from '@mui/icons-material/PersonOff';\r\nimport { Link as RouterLink, MemoryRouter as Router } from 'react-router-dom';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst Input = styled('input')({\r\n  display: 'none',\r\n});\r\n\r\nexport default function UserCard() {\r\n\r\n\r\n  const name = localStorage.getItem('full_name');\r\n  const email = localStorage.getItem('email');\r\n  const profession = localStorage.getItem('profession');\r\n  const [user_picture, setUserPicture] = useState(localStorage.getItem('profile_picture'));\r\n  const [selectedImage, setSelectedImage] = useState([]);\r\n\r\n\r\n  const fileUploadHandler = (event) => {\r\n      let picture = event.target.files[0];\r\n      let fd = new FormData();\r\n      fd.append('picture', picture)\r\n      const authorization = localStorage.getItem('token');\r\n      console.log(picture);\r\n      axios.post('https://todotasks.tk/api/auth/upload-profile-picture',fd,\r\n       {\r\n         headers: {\r\n           Authorization: authorization,\r\n           accepts: 'application/json'\r\n         }\r\n       })\r\n      .then(res=>{\r\n       \r\n          document.getElementById('user_image').src = res.data.picture.picture_url;\r\n          localStorage.setItem('profile_picture', res.data.picture.picture_url );\r\n          setUserPicture(res.data.picture.picture_url);\r\n  })\r\n  }\r\n\r\n\r\n\r\n  \r\n  \r\n  \r\n\r\n\r\n  return (\r\n    <React.Fragment style={{width:'80%'}}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"sm\" lg={{marginLeft:'20px', marginRight:'20px'}}>\r\n        <Box sx={{ bgcolor: \"#1976d2\", height: \"100px\"}}>\r\n        <center><Avatar id=\"user_image\" src={user_picture} sx={{ width: '100px', height:'100px', bottom:'-50px', position:'relative'}}></Avatar></center>\r\n        <label htmlFor=\"profile_image\" style={{paddingLeft:'65%'}}>\r\n        <Input accept=\"image/*\" id=\"profile_image\" type=\"file\" \r\n        onChange={e => {\r\n          console.log(e.target.files[0]);\r\n          setSelectedImage(e.target.files[0]);\r\n          fileUploadHandler(e);\r\n        }} />\r\n        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n        <PhotoCamera />\r\n        </IconButton>\r\n        </label>\r\n        </Box>\r\n        <Box sx={{paddingTop: '40px', textAlign:'center'}}>\r\n        <h3 style={{fontFamily:'Roboto'}}>{name}</h3>\r\n        <p id=\"profession_p_card\" style={{marginTop: '-20px', fontFamily:'Roboto' }}>{profession}</p>\r\n        </Box>\r\n        <Box>\r\n        <List style={{fontFamily:'Roboto'}} >\r\n        <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/user-feed\">\r\n              <ListItemIcon>\r\n                <FeedIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Contact Info\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/projects\">\r\n              <ListItemIcon>\r\n                <AccountTreeIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Projects\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/connections\">\r\n              <ListItemIcon>\r\n                <PersonIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Connections\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/blocked\">\r\n              <ListItemIcon>\r\n                <PersonOffIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Blocked Contacts\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/user-experience\">\r\n              <ListItemIcon>\r\n                <WorkIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Experience\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/user-education\">\r\n              <ListItemIcon>\r\n                <SchoolIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Education\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/user-skills\">\r\n              <ListItemIcon>\r\n                <StarIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Skills\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        </List>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Badge from '@mui/material/Badge';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport MoreIcon from '@mui/icons-material/MoreVert';\r\nimport { Link as RouterLink, MemoryRouter as Router } from 'react-router-dom';\r\nimport Link from '@mui/material/Link';\r\nimport { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: '100%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: 'auto',\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: '100%',\r\n  position: 'absolute',\r\n  pointerEvents: 'none',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: 'inherit',\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function MainNavigation() {\r\n  const history = new useHistory();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const [count, setCount] = React.useState('');\r\n\r\n  useEffect(() => {\r\n    getNotificationsCount();\r\n    const input = document.getElementById(\"search_value\");\r\n    input.addEventListener(\"keyup\", function(event) {\r\n    if (event.keyCode === 13) {\r\n      localStorage.setItem('search_value', document.getElementById('search_value').value);\r\n      history.push('/search');\r\n    }\r\n  });\r\n  }, [])\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  \r\n\r\n\r\n  const handleLogout = () => {\r\n    handleMenuClose();\r\n    localStorage.clear();\r\n    history.push('/');\r\n    //prevent going back\r\n    window.onpopstate = function(event) {\r\n    history.go(1);\r\n  };\r\n  }\r\n\r\n  function getNotificationsCount(){\r\n    getNotificationsCountAPI().then(count_response=>{\r\n      setCount(count_response);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getNotificationsCountAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-notifications-count\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const count_response = await response.json();\r\n  return count_response;\r\n  }\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleLogout} style={{fontFamily:'Roboto'}}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem component={RouterLink} to=\"/messages\">    \r\n      <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge>\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n    \r\n        \r\n      <MenuItem component={RouterLink} to=\"/notifications\">\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label={\"show \" +count+ \" new notifications\"}\r\n          color=\"inherit\"\r\n        >\r\n          <Badge badgeContent={count} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            color=\"white\"\r\n            component={RouterLink} to=\"/user-feed\"\r\n            style={{textDecoration: 'none', maxWidth:'900px', fontFamily:'Roboto'}}\r\n            sx={{ display: { xs: 'none', sm: 'block' }, }}\r\n          >\r\n            Todo Tasks\r\n          </Typography>\r\n          <Search style={{width:'300px'}} id=\"search_area\">\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Search By Profession...\"\r\n              id = \"search_value\"\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </Search>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n            <IconButton size=\"large\" color=\"inherit\" component={RouterLink} to=\"/messages\">\r\n              <Badge>\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label={\"show \"+count+ \" new notifications\" }\r\n              color=\"inherit\"\r\n              component={RouterLink} to=\"/notifications\"\r\n            >\r\n              <Badge badgeContent={count} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </Box>\r\n          <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport MainNavigation from '../Components/Layout/MainNavigation';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport ClassIcon from '@mui/icons-material/Class';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport Modal from '@mui/material/Modal';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #1976d2',\r\n  borderRadius: '35px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\n\r\n\r\nfunction MainPage(){\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [profession, setProfession] = useState(localStorage.getItem('profession'));\r\n  const [bio, setBio] = useState(localStorage.getItem('bio'));\r\n  const [phone_number, setPhoneNumber] = useState(localStorage.getItem('phone_number'));\r\n  const email = localStorage.getItem('email');\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  const handleEditBio = () => {\r\n    setBio(document.getElementById('bio').value);\r\n    document.getElementById('bio_p').innerHTML = document.getElementById('bio').value;\r\n    localStorage.setItem('bio', bio);\r\n  }\r\n\r\n  const handleEditProfession = () => {\r\n    setProfession(document.getElementById('profession').value);\r\n    document.getElementById('profession_p').innerHTML = document.getElementById('profession').value;\r\n    document.getElementById('profession_p_card').innerHTML = document.getElementById('profession').value;\r\n    localStorage.setItem('profession', profession);\r\n  }\r\n\r\n  const handleEditPhoneNumber = () => {\r\n    setPhoneNumber(document.getElementById('phone_number').value);\r\n    document.getElementById('phone_p').innerHTML = document.getElementById('phone_number').value;\r\n    localStorage.setItem('phone_number', phone_number);\r\n  }\r\n\r\n  const handleEdit = ()=>{\r\n    handleClose();\r\n    editProfile();\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function editProfile(){\r\n    editProfileAPI().then(edit_response=>{\r\n      console.log(edit_response);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function editProfileAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/edit-profile\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'bio': bio,\r\n          'profession': profession,\r\n          'phone_number' : phone_number\r\n        })\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const edit_response = await response.json();\r\n  return edit_response;\r\n  }\r\n\r\n    //pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n        <MainNavigation />\r\n  <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n  <Grid item xs>\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} lg={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Contact Info\r\n          </Typography>\r\n          <IconButton onClick={handleOpen} color=\"primary\" aria-label=\"Edit\" component=\"span\" sx={{alignSelf:'center'}}><EditIcon /></IconButton>\r\n          </Box>\r\n          <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"title\"\r\n        >\r\n            <Box\r\n            component=\"form\"\r\n            sx={style}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            >\r\n            <Typography id=\"title\" variant=\"h6\">Edit Info</Typography>\r\n            <Box sx={{display:'flex', flexDirection:'column'}}>\r\n            <TextField sx={{marginTop:'15px'}} id=\"profession\"  label=\"Profession\" variant=\"outlined\" value={profession} onChange={handleEditProfession}></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"phone_number\"  label=\"Phone Number\" variant=\"outlined\" value={phone_number} onChange={handleEditPhoneNumber}></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"bio\"  label=\"Bio\" variant=\"outlined\" value={bio} onChange={handleEditBio}></TextField>\r\n            <Button sx={{marginTop:'15px'}} variant=\"contained\" onClick={handleEdit}>Save</Button>\r\n            </Box>\r\n            </Box>\r\n        </Modal>\r\n          <Stack direction=\"column\" spacing={2}>\r\n        <Card sx={{display:'flex', flexDirection:'row', marginTop:'10px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <InfoIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <h3>\r\n            Bio\r\n          </h3>\r\n          <p id=\"bio_p\" style={{marginTop:'-20px', fontFamily:'roboto'}}>\r\n          {bio}\r\n          </p>\r\n        </Typography>}\r\n        />\r\n        </Card>\r\n        <Card sx={{display:'flex', flexDirection:'row', marginTop:'10px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <ClassIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <h3>\r\n            Profession\r\n          </h3>\r\n          <p id=\"profession_p\" style={{marginTop:'-20px', fontFamily:'Roboto'}}>\r\n          {profession}\r\n          </p>\r\n        </Typography>}\r\n        />\r\n        </Card>\r\n        <Card sx={{display:'flex', flexDirection:'row', marginTop:'10px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <EmailIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <h3>\r\n            E-mail Address\r\n          </h3>\r\n          <p style={{marginTop:'-20px', fontFamily:'roboto'}}>\r\n          {email}\r\n          </p>\r\n        </Typography>}\r\n        />\r\n        </Card>\r\n        <Card sx={{display:'flex', flexDirection:'row', marginTop:'10px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <LocalPhoneIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <h3>\r\n            Phone Number\r\n          </h3>\r\n          <p id=\"phone_p\" style={{marginTop:'-20px', fontFamily:'roboto'}}>\r\n          {phone_number}\r\n          </p>\r\n        </Typography>}\r\n        />\r\n        </Card>\r\n        \r\n\r\n          </Stack>\r\n\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs>\r\n  <Grid item >\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} username={pendingRequest.info.username} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url} profession={pendingRequest.info.profession} email={pendingRequest.info.email} bio={pendingRequest.info.bio} phone_number={pendingRequest.info.phone_number}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default MainPage;","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport { red } from '@mui/material/colors';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\n\r\n\r\nexport default function UserComment(props) {\r\n    return (\r\n        <Card id={props.id} sx={{marginTop:'10px', fontFamily:'Roboto', fontSize:'15pt'}}>\r\n        <CardHeader\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\" src={props.picture}>\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography style={{fontFamily:'Roboto', fontSize:'16pt', marginTop:'-35px'}}>\r\n          {props.name}\r\n          </Typography>\r\n        }\r\n        />\r\n        <CardContent>\r\n        <Typography style={{paddingLeft:'60px', marginTop:'-40px', fontFamily:'Roboto', fontSize:'12pt'}}>\r\n            {props.text}\r\n        </Typography>\r\n        </CardContent>\r\n\r\n        </Card>\r\n    );\r\n  }\r\n  ","import * as React from 'react';\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport Grid from '@mui/material/Grid';\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Button from '@mui/material/Button';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Pusher from 'pusher-js';\r\nimport UserComment from '../Components/UserComment';\r\n\r\n\r\nfunction MessagesPage(){\r\n\r\n  const username = localStorage.getItem('full_name');\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  let allMessages = [];\r\n\r\n  useEffect(() => {\r\n\r\n    Pusher.logToConsole = true;\r\n\r\n    const pusher = new Pusher('88b8b9f2f7269cc451cd', {\r\n      cluster: 'ap2'\r\n    });\r\n\r\n    const channel = pusher.subscribe('my-channel');\r\n    channel.bind('message', function(data) {\r\n      allMessages.push(data);\r\n      setMessages(allMessages);\r\n    });\r\n  },[])\r\n\r\n  const submit = async e =>{\r\n    const authorization = localStorage.getItem('token');\r\n    console.log(username);\r\n    console.log(message);\r\n    await fetch('https://todotasks.tk/api/auth/message',{\r\n      method : 'POST',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n      body : new URLSearchParams({\r\n        'username' : username,\r\n        'message' : message\r\n      })\r\n\r\n    })\r\n    setMessage('');\r\n  }\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n            <MainNavigation />\r\n            <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n  <Grid item xs>\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} lg={9} style={{position: 'relative',height:'680px'}}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Chit Chat\r\n          </Typography>\r\n          </Box>\r\n          <div id=\"messages_div\" style={{height:'580px',overflow:'auto',background:'#fff'}}>\r\n            {messages.map(message => {\r\n              return(\r\n                <div style={{backgroundColor:'#1976d2', inlineSize: '70%', height:'wrap-content' , borderRadius:'5px', marginTop:'10px', marginLeft:'30px', color:'white', fontFamily:'Roboto'}}>\r\n                  <h4 style={{paddingLeft:'10px', paddingTop:'5px', color:'#000'}}>{message.username}</h4>\r\n                  <p style={{paddingLeft:'15px'}}>{message.message}</p>\r\n                </div>\r\n                \r\n                );\r\n            })}\r\n          \r\n            \r\n            \r\n            </div>\r\n            <div style={{position: 'absolute', bottom: '0px' , paddingBottom:'15px', display:'flex', flexDirection:'row', width:'95%',alignItems:'center', gap:'10px', height:'60px',}}>\r\n            <TextField\r\n          id=\"outlined-multiline-flexible\"\r\n          label=\"Send a message\"\r\n          variant=\"standard\"\r\n          value={message}\r\n          onChange={e=> setMessage(e.target.value)}\r\n          style={{ width:'89%', marginRight:'120px', left:'10px'}}\r\n        />\r\n                \r\n            \r\n            <Button onClick={submit} variant=\"contained\" endIcon={<SendIcon />} style={{flex:'1',height:'40px', position:'absolute', right:'25px', width:'10%', marginLeft:'5px'}}>\r\n                 Send\r\n                </Button>\r\n            </div>\r\n            \r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n\r\n</Grid>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MessagesPage;","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport { red } from '@mui/material/colors';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useState } from 'react';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\n\r\nexport default function Notification(props) {\r\n\r\n   const handleDelete = () => {\r\n     deleteNotification();\r\n     document.getElementById(props.id).style.display= \"none\";\r\n    }\r\n\r\n    function deleteNotification(){\r\n      deleteNotificationAPI().then(delete_response=>{\r\n        console.log(delete_response);\r\n        \r\n    }).catch(error => {\r\n      console.log(error.message);\r\n    });\r\n    \r\n    }\r\n    \r\n    \r\n    async function deleteNotificationAPI(){\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem('token');\r\n    \r\n    \r\n      const response = await fetch(\"https://todotasks.tk/api/auth/delete-notification\", {\r\n          method: 'POST',\r\n          headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n          body: new URLSearchParams({\r\n            'notification_id' : id,\r\n          })\r\n      });\r\n    \r\n      if(!response.ok){\r\n        const message = \"ERROR OCCURED\";\r\n        throw new Error(message);\r\n    }\r\n    \r\n    const delete_response = await response.json();\r\n    return delete_response;\r\n    }\r\n\r\n  return (\r\n      <Card id={props.id} sx={{display:'flex', flexDirection:'row', paddingTop:'5px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"notification\">\r\n            <NotificationsIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <p>{props.text}</p>\r\n        </Typography>}\r\n        />\r\n        <Stack sx={{display:'flex', flexDirection:'row'}}>\r\n        <IconButton color=\"error\" onClick={handleDelete} aria-label=\"Delete\" component=\"span\" sx={{flex:'1'}}>\r\n        <DeleteIcon  />\r\n        </IconButton>\r\n        </Stack>\r\n        </Card>\r\n\r\n\r\n\r\n        \r\n  );\r\n}","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Notification from \"../Components/Notification\";\r\nimport MainNavigation from '../Components/Layout/MainNavigation';\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction NotificationsPage() {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  useEffect(()=>{\r\n      getUserNotifications();\r\n      getPendingRequests();\r\n      getSuggestions();\r\n  },[]);\r\n\r\n  function getUserNotifications(){\r\n    getUserNotificationsAPI().then(notifications_response=>{\r\n      console.log(notifications_response);\r\n      setNotifications(notifications_response);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n//pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n\r\nasync function getUserNotificationsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-notifications\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization}\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const notifications_response = await response.json();\r\n  return notifications_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n  return (\r\n    <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n      <MainNavigation />\r\n      <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n      <Grid item xs>\r\n        <UserCard></UserCard>\r\n      </Grid>\r\n      <Grid item xs={12} lg={6}>\r\n        <React.Fragment>\r\n          <CssBaseline />\r\n          <Container>\r\n          <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n                Notifications\r\n              </Typography>\r\n            </Box>\r\n            <Stack direction=\"column\" spacing={2}>\r\n            {notifications.map((notification) => (\r\n            <Notification id={notification.id} text={notification.text}></Notification>\r\n          ))}\r\n            </Stack>\r\n          </Container>\r\n        </React.Fragment>\r\n      </Grid>\r\n\r\n      <Grid item xs>\r\n  <Grid item >\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} username={pendingRequest.info.username} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url} profession={pendingRequest.info.profession} email={pendingRequest.info.email} bio={pendingRequest.info.bio} phone_number={pendingRequest.info.phone_number}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n      </Grid>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotificationsPage;\r\n","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport AccountTreeIcon from '@mui/icons-material/AccountTree';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport UserComment from './UserComment';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #1976d2',\r\n  borderRadius: '35px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function Project(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    const [comments, setComments] = useState([]);\r\n\r\n    useEffect(() => {\r\n      getProjectComments();\r\n    },[])\r\n\r\n    const handleAddComment = () => {\r\n      addComment();\r\n      document.getElementById('comment_text').value = '';\r\n    }\r\n\r\n    const handleMarkAsDone = () => {\r\n      markAsDone();\r\n    }\r\n\r\n    //mark as done\r\n    function markAsDone(){\r\n      markAsDoneAPI().then(markAsDone_response=>{\r\n        document.getElementById('project_'+props.id).style.display = \"none\";\r\n        \r\n    }).catch(error => {\r\n      console.log(error.message);\r\n    });\r\n    \r\n    }\r\n    \r\n    \r\n    async function markAsDoneAPI(){\r\n    const project_id = props.id;\r\n    const authorization = localStorage.getItem('token');\r\n    \r\n      const response = await fetch(\"https://todotasks.tk/api/auth/mark-done\", {\r\n          method: 'POST',\r\n          headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n          body: new URLSearchParams({\r\n            'project_id': project_id,\r\n          })\r\n      });\r\n    \r\n      if(!response.ok){\r\n        const message = \"ERROR OCCURED\";\r\n        throw new Error(message);\r\n    }\r\n    \r\n    const markAsDone_response = await response.json();\r\n    return markAsDone_response;\r\n    }\r\n\r\n    //get project comments\r\n    function getProjectComments(){\r\n      getProjectCommentsAPI().then(comments_response=>{\r\n        console.log(comments_response);\r\n        setComments(comments_response.comments);\r\n        \r\n    }).catch(error => {\r\n      console.log(error.message);\r\n    });\r\n    \r\n    }\r\n    \r\n    \r\n    async function getProjectCommentsAPI(){\r\n    const project_id = props.id;\r\n    const authorization = localStorage.getItem('token');\r\n    \r\n      const response = await fetch(\"https://todotasks.tk/api/auth/get-project-comments\", {\r\n          method: 'POST',\r\n          headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n          body: new URLSearchParams({\r\n            'project_id': project_id\r\n          })\r\n      });\r\n    \r\n      if(!response.ok){\r\n        const message = \"ERROR OCCURED\";\r\n        throw new Error(message);\r\n    }\r\n    \r\n    const comments_response = await response.json();\r\n    return comments_response;\r\n    }\r\n\r\n    //add a comments\r\n    function addComment(){\r\n      addCommentAPI().then(add_response=>{\r\n        console.log(add_response);\r\n        getProjectComments();\r\n        \r\n    }).catch(error => {\r\n      console.log(error.message);\r\n    });\r\n    \r\n    }\r\n    \r\n    \r\n    async function addCommentAPI(){\r\n    const project_id = props.id;\r\n    const comment_text = document.getElementById('comment_text').value;\r\n    const authorization = localStorage.getItem('token');\r\n    \r\n      const response = await fetch(\"https://todotasks.tk/api/auth/add-project-comment\", {\r\n          method: 'POST',\r\n          headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n          body: new URLSearchParams({\r\n            'project_id': project_id,\r\n            'comment_text': comment_text\r\n          })\r\n      });\r\n    \r\n      if(!response.ok){\r\n        const message = \"ERROR OCCURED\";\r\n        throw new Error(message);\r\n    }\r\n    \r\n    const add_response = await response.json();\r\n    return add_response;\r\n    }\r\n\r\n\r\n\r\n  return (\r\n      <Card id={\"project_\" + props.id} sx={{display:'flex', flexDirection:'row', paddingTop:'5px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <AccountTreeIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <p>{props.title}</p>\r\n          <p>Due on {props.due_date} for {props.amount} USD</p>\r\n        </Typography>}\r\n        />\r\n        <Stack sx={{display:'flex', flexDirection:'row'}}>\r\n        <IconButton onClick={handleOpen} style={{color:\"#1976d2\"}} aria-label=\"Show details\" component=\"span\" sx={{flex:'1'}}>\r\n        <InfoIcon />\r\n        </IconButton>\r\n        <IconButton onClick={handleMarkAsDone} style={{color:\"#1976d2\"}} aria-label=\"Mark as done\" component=\"span\" sx={{flex:'1'}}>\r\n        <CheckIcon />\r\n        </IconButton>\r\n        </Stack>\r\n        <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"title\"\r\n        >\r\n            <Box\r\n            component=\"form\"\r\n            sx={style}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            >\r\n            <Typography id=\"title\" variant=\"h6\">Project Details</Typography>\r\n            <Box sx={{display:'flex', flexDirection:'column'}}>\r\n            <Typography>\r\n              <p style={{fontFamily:'Roboto'}}>{props.title}</p>\r\n              <p style={{fontFamily:'Roboto'}}>Due on {props.due_date} for {props.amount} USD</p>\r\n              </Typography>\r\n            </Box>\r\n            <Typography id=\"title\" variant=\"h6\">Discussion</Typography>\r\n            <div style={{ overflow: 'scroll', height:'300px', fontFamily:'Roboto'}}>\r\n            {comments.map((comment) => (\r\n            <UserComment picture={comment.picture[0].picture_url} name={comment.user.first_name+\" \"+comment.user.last_name} text={comment.comment}></UserComment>\r\n              ))}\r\n            </div>\r\n            <Box sx={{ display: 'flex', direction: 'row', paddingTop:'5px'}}>\r\n            <TextField id=\"standard-basic\" id=\"comment_text\" label=\"Type your comment\" variant=\"standard\" sx={{flex: '3'}}/>\r\n            <Button variant=\"contained\" onClick={handleAddComment} >Post</Button>\r\n            </Box>\r\n            </Box>\r\n        </Modal>\r\n        </Card>\r\n\r\n  );\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Project from '../Components/Project';\r\nimport MainNavigation from '../Components/Layout/MainNavigation';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Modal from '@mui/material/Modal';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\n\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #1976d2',\r\n  borderRadius: '35px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nfunction ProjectsPage(){\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n  const [projects, setProjects]  = useState([]);\r\n  const [freelancers, setFreelancers] = useState([]);\r\n  const [freelancerId, setFreelancerId] = useState('');\r\n\r\n  useEffect(() => {\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getFreelancers();\r\n    getProjects();\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    setFreelancerId(event.target.value);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    handleClose();\r\n    createProject();\r\n  }\r\n\r\n  //get freelancers\r\n\r\n  function getFreelancers(){\r\n    getFreelancersAPI().then(freelancers_response=>{\r\n      console.log(freelancers_response);\r\n      setFreelancers(freelancers_response.freelancers);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getFreelancersAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-followed-freelancers\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const freelancers_response = await response.json();\r\n  return freelancers_response;\r\n  }\r\n\r\n  //Create Project \r\n\r\n  function createProject(){\r\n    createProjectAPI().then(add_response=>{\r\n      console.log(add_response);\r\n      getProjects();\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function createProjectAPI(){\r\n  const freelancer_user_id = freelancerId;\r\n  const description = document.getElementById('description').value;\r\n  const price = document.getElementById('price').value;\r\n  const due_date = document.getElementById('due_date').value;\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/create-project\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'freelancer_user_id': freelancer_user_id,\r\n          'description': description,\r\n          'price': price,\r\n          'due_date': due_date  \r\n        })\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const add_response = await response.json();\r\n  return add_response;\r\n  }\r\n\r\n  //get Projects\r\n  function getProjects(){\r\n    getProjectsAPI().then(projects_response=>{\r\n      setProjects(projects_response);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getProjectsAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-projects\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const projects_response = await response.json();\r\n  return projects_response;\r\n  }\r\n\r\n\r\n  //pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n        <MainNavigation />\r\n      \r\n  <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n  <Grid item xs>\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} lg={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Projects\r\n          </Typography>\r\n          <IconButton onClick={handleOpen} color=\"primary\" aria-label=\"Edit\" component=\"span\" ><AddCircleIcon/></IconButton>\r\n          </Box>\r\n          <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"title\"\r\n        >\r\n            <Box\r\n            component=\"form\"\r\n            sx={style}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            >\r\n            <Typography id=\"title\" variant=\"h6\">Start Project</Typography>\r\n            <Box sx={{display:'flex', flexDirection:'column'}}>\r\n            <InputLabel id=\"demo-simple-select-label\" sx={{marginTop:'15px'}}>Freelancer</InputLabel>\r\n            <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={freelancerId}\r\n            onChange={handleChange}\r\n              >\r\n                {freelancers.map((freelancer) => (\r\n            <MenuItem value={freelancer.info.id}>{freelancer.info.first_name+\" \"+ freelancer.info.last_name}</MenuItem>\r\n                ))}\r\n            </Select>\r\n            <InputLabel id=\"demo-simple-select-label\" sx={{marginTop:'15px'}}>Description</InputLabel>\r\n            <TextField  id=\"description\" variant=\"outlined\" placeholder=\"What is your project?\"></TextField>\r\n            <InputLabel id=\"demo-simple-select-label\" sx={{marginTop:'15px'}}>Price</InputLabel>\r\n            <TextField  id=\"price\" variant=\"outlined\" placeholder=\"Amount in USD\"></TextField>\r\n            <InputLabel id=\"demo-simple-select-label\" sx={{marginTop:'15px'}}>Due Date</InputLabel>\r\n            <TextField id=\"due_date\" variant=\"outlined\" placeholder=\"Deadline\"></TextField>\r\n            <Button sx={{marginTop:'15px'}} variant=\"contained\"  onClick={handleSave}>Save</Button>\r\n            </Box>\r\n            </Box>\r\n        </Modal>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {projects.map((project) => (\r\n            <Project id={project.id} amount={project.price} title={project.description} due_date={project.due_date}></Project>\r\n                ))}\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs>\r\n  <Grid item >\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} username={pendingRequest.info.username} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url} profession={pendingRequest.info.profession} email={pendingRequest.info.email} bio={pendingRequest.info.bio} phone_number={pendingRequest.info.phone_number}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2 }} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProjectsPage;","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport { red } from '@mui/material/colors';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useState } from 'react';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #1976d2',\r\n  borderRadius: '35px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function UserSkill(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [title, setTitle] = useState(props.title);\r\n\r\n  const handleEditTitle = () =>setTitle(document.getElementById('skill_title').value);\r\n  const handleDelete = () => {\r\n    deleteSkill();\r\n    document.getElementById(props.id).style.display = \"none\";\r\n  }\r\n\r\n  const handleUpdate = () => {\r\n    updateSkill();\r\n    handleClose();\r\n  }\r\n\r\n\r\n\r\n  function updateSkill(){\r\n    updateSkillAPI().then(skills_response=>{\r\n      console.log(skills_response);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function updateSkillAPI(){\r\n  const id = props.id;\r\n  const authorization = localStorage.getItem('token');\r\n  console.log(id);\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/update-skill\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'skill_id' : id,\r\n          'title': title\r\n\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const update_response = await response.json();\r\n  return update_response;\r\n}\r\n\r\nfunction deleteSkill(){\r\n  deleteSkillAPI().then(skills_response=>{\r\n    console.log(skills_response);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function deleteSkillAPI(){\r\nconst id = props.id;\r\nconst authorization = localStorage.getItem('token');\r\n\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/delete-skill\", {\r\n      method: 'POST',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n      body: new URLSearchParams({\r\n        'skill_id' : id,\r\n      })\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst delete_response = await response.json();\r\nreturn delete_response;\r\n}\r\n\r\n  return (\r\n    <Card id={props.id} sx={{display:'flex', flexDirection:'row', paddingTop:'5px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <StarIcon />\r\n          </Avatar>\r\n        }\r\n        title={title}\r\n        />\r\n        <Stack sx={{display:'flex', flexDirection:'row'}}>\r\n        <IconButton onClick={handleOpen} style={{color:'#1976d2'}} aria-label=\"Edit\" component=\"span\" sx={{flex:'1'}}>\r\n        <EditIcon />\r\n        </IconButton>\r\n        <IconButton onClick={handleDelete} color=\"error\"aria-label=\"Edit\" component=\"span\" sx={{flex:'1'}}>\r\n        <DeleteIcon  />\r\n        </IconButton>\r\n        </Stack>\r\n        <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"title\"\r\n        >\r\n            <Box\r\n            component=\"form\"\r\n            sx={style}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            >\r\n            <Typography id=\"title\" variant=\"h6\">Edit Skill</Typography>\r\n            <Box sx={{display:'flex', flexDirection:'column'}}>\r\n            <TextField sx={{marginTop:'15px'}} id=\"skill_title\"  label=\"Title\" variant=\"outlined\" value={title} onChange={handleEditTitle}></TextField>\r\n            <Button sx={{marginTop:'15px'}} variant=\"contained\" onClick={handleUpdate}>Save</Button>\r\n            </Box>\r\n            </Box>\r\n        </Modal>\r\n\r\n\r\n        </Card>\r\n  );\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport UserSkill from '../Components/UserSkill';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Modal from '@mui/material/Modal';\r\nimport Button from '@mui/material/Button';\r\nimport { useState } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport MainNavigation from '../Components/Layout/MainNavigation';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #1976d2',\r\n  borderRadius: '35px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\n\r\nfunction SkillsPage(){\r\n\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [skills, setSkills]  = useState([]);\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n    getUserSkills();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserSkills(){\r\n    getUserSkillsAPI().then(skills_response=>{\r\n      setSkills(skills_response.skills);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getUserSkillsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-user-skills\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user_id' : user_id,\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const skills_response = await response.json();\r\n  return skills_response;\r\n}\r\n\r\nfunction addSkill(){\r\n  addSkillAPI().then(add_response=>{\r\n    console.log(add_response);\r\n    getUserSkills();\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function addSkillAPI(){\r\nconst skill_title = document.getElementById('skill_title').value;\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/add-skill\", {\r\n      method: 'POST',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n      body: new URLSearchParams({\r\n        'title': skill_title\r\n\r\n      })\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst update_response = await response.json();\r\nreturn update_response;\r\n}\r\n\r\n//pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n\r\n\r\n  const handleSave = () => {\r\n    addSkill();\r\n    handleClose();\r\n  }\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n      <MainNavigation />\r\n      <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n  <Grid item xs >\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} lg={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Skills\r\n          </Typography>\r\n          <IconButton onClick={handleOpen} color=\"primary\" aria-label=\"Edit\" component=\"span\" sx={{alignSelf:'center'}}><AddCircleIcon/></IconButton>\r\n          </Box>\r\n          <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"title\"\r\n        >\r\n            <Box\r\n            component=\"form\"\r\n            sx={style}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            >\r\n            <Typography id=\"title\" variant=\"h6\">Add Skill</Typography>\r\n            <Box sx={{display:'flex', flexDirection:'column'}}>\r\n            <TextField sx={{marginTop:'15px'}} id=\"skill_title\"  label=\"Title\" variant=\"outlined\" placeholder=\"What is your skill?\"></TextField>\r\n            <Button sx={{marginTop:'15px'}} variant=\"contained\" onClick={handleSave}>Save</Button>\r\n            </Box>\r\n            </Box>\r\n        </Modal>\r\n          <Stack id=\"skills\" direction=\"column\" spacing={2}>\r\n          {skills.map((skill) => (\r\n        <UserSkill id={skill.id} title={skill.title}></UserSkill>\r\n          ))}\r\n            \r\n\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs>\r\n  <Grid item>\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default SkillsPage;","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { useState } from \"react\";\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #1976d2',\r\n  borderRadius: '35px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function UserEducation(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [degree, setDegree] = useState(props.degree);\r\n  const [university, setUniversity] = useState(props.university);\r\n  const [major, setMajor] = useState(props.major);\r\n  const [year, setYear] = useState(props.year);\r\n\r\n  const handleEditDegree = () =>\r\n    setDegree(document.getElementById(\"degree\").value);\r\n  const handleEditMajor = () =>\r\n    setMajor(document.getElementById(\"major\").value);\r\n  const handleEditUniversity = () =>\r\n    setUniversity(document.getElementById(\"university\").value);\r\n  const handleEditYear = () => setYear(document.getElementById(\"year\").value);\r\n\r\n  const handleDelete = () => {\r\n    deleteEducation();\r\n    document.getElementById(props.id).style.display = \"none\";\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    updateEducation();\r\n    handleClose();\r\n  };\r\n\r\n  function updateEducation() {\r\n    updateEducationAPI()\r\n      .then((update_response) => {\r\n        console.log(update_response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function updateEducationAPI() {\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n    console.log(id);\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/update-education\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          education_id: id,\r\n          degree: degree,\r\n          major: major,\r\n          university: university,\r\n          year: year,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const update_response = await response.json();\r\n    return update_response;\r\n  }\r\n\r\n  function deleteEducation() {\r\n    deleteEducationAPI()\r\n      .then((delete_response) => {\r\n        console.log(delete_response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function deleteEducationAPI() {\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/delete-education\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          education_id: id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const delete_response = await response.json();\r\n    return delete_response;\r\n  }\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        style={{fontFamily:'Roboto'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"recipe\">\r\n            <StarIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <p>\r\n              {degree} in {major}\r\n            </p>\r\n            <p>\r\n              {university} ({year})\r\n            </p>\r\n          </Typography>\r\n        }\r\n      />\r\n      <Stack sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <IconButton\r\n          style={{color:'#1976d2'}}\r\n          onClick={handleOpen}\r\n          aria-label=\"Edit\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"error\"\r\n          onClick={handleDelete}\r\n          aria-label=\"Delete\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Stack>\r\n      <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n        <Box component=\"form\" sx={style} noValidate autoComplete=\"off\">\r\n          <Typography id=\"title\" variant=\"h6\">\r\n            Edit Education\r\n          </Typography>\r\n          <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <TextField\r\n              sx={{ marginTop: \"15px\" }}\r\n              id=\"degree\"\r\n              label=\"Degree\"\r\n              variant=\"outlined\"\r\n              value={degree}\r\n              onChange={handleEditDegree}\r\n            ></TextField>\r\n            <TextField\r\n              sx={{ marginTop: \"15px\" }}\r\n              id=\"major\"\r\n              label=\"Major\"\r\n              variant=\"outlined\"\r\n              value={major}\r\n              onChange={handleEditMajor}\r\n            ></TextField>\r\n            <TextField\r\n              sx={{ marginTop: \"15px\" }}\r\n              id=\"university\"\r\n              label=\"University\"\r\n              variant=\"outlined\"\r\n              value={university}\r\n              onChange={handleEditUniversity}\r\n            ></TextField>\r\n            <TextField\r\n              sx={{ marginTop: \"15px\" }}\r\n              id=\"year\"\r\n              label=\"Year\"\r\n              variant=\"outlined\"\r\n              value={year}\r\n              onChange={handleEditYear}\r\n            ></TextField>\r\n            <Button\r\n              sx={{ marginTop: \"15px\" }}\r\n              variant=\"contained\"\r\n              onClick={handleUpdate}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport UserEducation from '../Components/UserEducation';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Modal from '@mui/material/Modal';\r\nimport Button from '@mui/material/Button';\r\nimport { useState } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport MainNavigation from '../Components/Layout/MainNavigation';\r\nimport { useEffect } from 'react';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #1976d2',\r\n  borderRadius: '35px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\n\r\nfunction EducationPage(){\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const [educations, setEducations]  = useState([]);\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n    getUserEdcuation();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserEdcuation(){\r\n    getUserEdcuationAPI().then(education_response=>{\r\n      console.log(education_response);\r\n      setEducations(education_response.education);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\n\r\n\r\nasync function getUserEdcuationAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/user-education\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user_id' : user_id,\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const education_response = await response.json();\r\n  return education_response;\r\n}\r\n\r\nfunction addEducation(){\r\n  addEducationAPI().then(add_response=>{\r\n    console.log(add_response);\r\n    getUserEdcuation();\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function addEducationAPI(){\r\nconst degree = document.getElementById('degree').value;\r\nconst major = document.getElementById('major').value;\r\nconst university = document.getElementById('university').value;\r\nconst year = document.getElementById('year').value;\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/add-education\", {\r\n      method: 'POST',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n      body: new URLSearchParams({\r\n        'degree': degree,\r\n        'major': major,\r\n        'university': university,\r\n        'year': year\r\n      })\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst add_response = await response.json();\r\nreturn add_response;\r\n}\r\n\r\n//pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n\r\n\r\n  const handleSave = () => {\r\n    addEducation();\r\n    handleClose();\r\n  }\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n        <MainNavigation />\r\n        <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n    \r\n  <Grid item xs>\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} lg={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Education\r\n          </Typography>\r\n          <IconButton onClick={handleOpen} color=\"primary\" aria-label=\"Add\" component=\"span\" sx={{alignSelf:'center'}}><AddCircleIcon/></IconButton>\r\n          </Box>\r\n          <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"title\"\r\n        >\r\n            <Box\r\n            component=\"form\"\r\n            sx={style}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            >\r\n            <Typography id=\"title\" variant=\"h6\">Add Education</Typography>\r\n            <Box sx={{display:'flex', flexDirection:'column'}}>\r\n            <TextField sx={{marginTop:'15px'}} id=\"degree\"  label=\"Degree\" variant=\"outlined\"></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"major\"  label=\"Major\" variant=\"outlined\"></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"university\"  label=\"University\" variant=\"outlined\"></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"year\"  label=\"Year\" variant=\"outlined\"></TextField>\r\n            <Button sx={{marginTop:'15px'}} variant=\"contained\" onClick={handleSave}>Save</Button>\r\n            </Box>\r\n            </Box>\r\n        </Modal>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {educations.map((education) => (\r\n        <UserEducation id={education.id} degree={education.degree} major={education.major} university={education.university} year={education.year}></UserEducation>\r\n          ))}\r\n          \r\n\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs>\r\n  <Grid item >\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} username={pendingRequest.info.username} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url} profession={pendingRequest.info.profession} email={pendingRequest.info.email} bio={pendingRequest.info.bio} phone_number={pendingRequest.info.phone_number}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default EducationPage;","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport { red } from '@mui/material/colors';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useState } from 'react';\r\nimport { display } from '@mui/system';\r\nimport { PinDropRounded } from '@mui/icons-material';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #1976d2',\r\n  borderRadius: '35px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function UserExperience(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n     const [position, setPosition] = useState(props.position);\r\n     const [company, setCompany] = useState(props.company);\r\n     const [start_date, setStartDate] = useState(props.start_date);\r\n     const [end_date, setEndDate] = useState(props.end_date);\r\n\r\n     const handleEditPosition = () =>setPosition(document.getElementById('position').value);\r\n     const handleEditCompany = () =>setCompany(document.getElementById('company').value);\r\n     const handleEditStartDate = () =>setStartDate(document.getElementById('start_date').value);\r\n     const handleEditEndDate = () =>setEndDate(document.getElementById('end_date').value);\r\n\r\n     const handleDelete = () => {\r\n       deleteExperience();\r\n       document.getElementById(props.id).style.display = \"none\";\r\n     }\r\n   \r\n     const handleUpdate = () => {\r\n       updateExperience();\r\n       handleClose();\r\n     }\r\n   \r\n   \r\n   \r\n     function updateExperience(){\r\n       updateExperienceAPI().then(update_response=>{\r\n         console.log(update_response);\r\n         \r\n   }).catch(error => {\r\n       console.log(error.message);\r\n   });\r\n   \r\n   }\r\n   \r\n   \r\n   async function updateExperienceAPI(){\r\n     const id = props.id;\r\n     const authorization = localStorage.getItem('token');\r\n     console.log(id);\r\n   \r\n       const response = await fetch(\"https://todotasks.tk/api/auth/update-job\", {\r\n           method: 'POST',\r\n           headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n           body: new URLSearchParams({\r\n             'job_id' : id,\r\n             'position': position,\r\n             'company': company,\r\n             'start_date': start_date,\r\n             'end_date': end_date\r\n   \r\n           })\r\n       });\r\n   \r\n       if(!response.ok){\r\n         const message = \"ERROR OCCURED\";\r\n         throw new Error(message);\r\n     }\r\n     \r\n     const update_response = await response.json();\r\n     return update_response;\r\n   }\r\n   \r\n   function deleteExperience(){\r\n     deleteExperienceAPI().then(delete_response=>{\r\n       console.log(delete_response);\r\n       \r\n   }).catch(error => {\r\n     console.log(error.message);\r\n   });\r\n   \r\n   }\r\n   \r\n   \r\n   async function deleteExperienceAPI(){\r\n   const id = props.id;\r\n   const authorization = localStorage.getItem('token');\r\n   \r\n   \r\n     const response = await fetch(\"https://todotasks.tk/api/auth/delete-job\", {\r\n         method: 'POST',\r\n         headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n         body: new URLSearchParams({\r\n           'job_id' : id,\r\n         })\r\n     });\r\n   \r\n     if(!response.ok){\r\n       const message = \"ERROR OCCURED\";\r\n       throw new Error(message);\r\n   }\r\n   \r\n   const delete_response = await response.json();\r\n   return delete_response;\r\n   }\r\n\r\n\r\n\r\n\r\n  return (\r\n      <Card id={props.id} sx={{display:'flex', flexDirection:'row', paddingTop:'5px'}}>\r\n        <CardHeader \r\n        style={{fontFamily:'Roboto'}}\r\n        sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <WorkIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <p>{position} at {company}</p>\r\n          <p>From {start_date} till {end_date}</p>\r\n        </Typography>}\r\n        />\r\n        <Stack sx={{display:'flex', flexDirection:'row'}}>\r\n        <IconButton onClick={handleOpen} style={{color:'#1976d2'}} aria-label=\"Edit\" component=\"span\" sx={{flex:'1'}}>\r\n        <EditIcon />\r\n        </IconButton>\r\n        <IconButton onClick={handleDelete} color=\"error\"aria-label=\"Edit\" component=\"span\" sx={{flex:'1'}}>\r\n        <DeleteIcon  />\r\n        </IconButton>\r\n        </Stack>\r\n        <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"title\"\r\n        >\r\n            <Box\r\n            component=\"form\"\r\n            sx={style}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            >\r\n            <Typography id=\"title\" variant=\"h6\">Edit Experience</Typography>\r\n            <Box sx={{display:'flex', flexDirection:'column'}}>\r\n            <TextField sx={{marginTop:'15px'}} id=\"position\"  label=\"Position\" variant=\"outlined\" value={position} onChange={handleEditPosition}></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"company\" label=\"Company\" variant=\"outlined\" value={company} onChange={handleEditCompany} ></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"start_date\" label=\"Start Date\" variant=\"outlined\" value={start_date} onChange={handleEditStartDate} ></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"end_date\" label=\"End Date\" variant=\"outlined\" value={end_date} onChange={handleEditEndDate} ></TextField>\r\n            <Button sx={{marginTop:'15px'}} variant=\"contained\" onClick={handleUpdate}>Save</Button>\r\n            </Box>\r\n            </Box>\r\n        </Modal>\r\n        </Card>\r\n\r\n  );\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport UserExperience from '../Components/UserExperience';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Modal from '@mui/material/Modal';\r\nimport Button from '@mui/material/Button';\r\nimport { useState } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport MainNavigation from '../Components/Layout/MainNavigation';\r\nimport { useEffect } from 'react';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #1976d2',\r\n  borderRadius: '35px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\n\r\nfunction ExperiencePage(){\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [experiences, setExperiences]  = useState([]);\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n    getUserExperience();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserExperience(){\r\n    getUserExperienceAPI().then(experience_response=>{\r\n      console.log(experience_response);\r\n      setExperiences(experience_response.jobs);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getUserExperienceAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/user-jobs\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user_id' : user_id,\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const experience_response = await response.json();\r\n  return experience_response;\r\n}\r\n\r\nfunction addExperience(){\r\n  addExperienceAPI().then(add_response=>{\r\n    console.log(add_response);\r\n    getUserExperience();\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function addExperienceAPI(){\r\nconst position = document.getElementById('position').value;\r\nconst company = document.getElementById('company').value;\r\nconst start_date = document.getElementById('start_date').value;\r\nconst end_date = document.getElementById('end_date').value;\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/add-job\", {\r\n      method: 'POST',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n      body: new URLSearchParams({\r\n        'position': position,\r\n        'company': company,\r\n        'start_date': start_date,\r\n        'end_date': end_date\r\n      })\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst add_response = await response.json();\r\nreturn add_response;\r\n}\r\n\r\n//pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n\r\n\r\n\r\n  const handleSave = () => {\r\n    addExperience();\r\n    handleClose();\r\n  }\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n        <MainNavigation />\r\n        <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n  <Grid item xs>\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} lg={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Experience\r\n          </Typography>\r\n          <IconButton onClick={handleOpen} color=\"primary\" aria-label=\"Add\" component=\"span\" sx={{alignSelf:'center'}}><AddCircleIcon/></IconButton>\r\n          </Box>\r\n          <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"title\"\r\n        >\r\n            <Box\r\n            component=\"form\"\r\n            sx={style}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            >\r\n            <Typography id=\"title\" variant=\"h6\">Add Experience</Typography>\r\n            <Box sx={{display:'flex', flexDirection:'column'}}>\r\n            <TextField sx={{marginTop:'15px'}} id=\"position\"  label=\"Position\" variant=\"outlined\"></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"company\"  label=\"Company\" variant=\"outlined\"></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"start_date\"  label=\"Start Date\" variant=\"outlined\"></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"end_date\"  label=\"End Date\" variant=\"outlined\"></TextField>\r\n            <Button sx={{marginTop:'15px'}} variant=\"contained\" onClick={handleSave}>Save</Button>\r\n            </Box>\r\n            </Box>\r\n        </Modal>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {experiences.map((experience) => (\r\n        <UserExperience id={experience.id} company={experience.company} position={experience.position} start_date={experience.start_date} end_date={experience.end_date}></UserExperience>\r\n          ))}\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs>\r\n  <Grid item >\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} username={pendingRequest.info.username} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url} profession={pendingRequest.info.profession} email={pendingRequest.info.email} bio={pendingRequest.info.bio} phone_number={pendingRequest.info.phone_number}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default ExperiencePage;","export default __webpack_public_path__ + \"static/media/bg.01705941.jpg\";","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport background from '../images/bg.jpg';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport Button from '@mui/material/Button';\r\nimport Link from '@mui/material/Link';\r\nimport { Link as RouterLink, MemoryRouter as Router } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nexport default function LoginPage() {\r\n  const history = useHistory();\r\n\r\n\r\n\r\n  function login(){\r\n    loginAPI().then(login_response=>{\r\n      localStorage.setItem('token', 'bearer '+login_response.access_token);\r\n      localStorage.setItem('id', login_response.user.id);\r\n      localStorage.setItem('full_name', login_response.user.first_name+' '+login_response.user.last_name);\r\n      localStorage.setItem('username', login_response.user.username);\r\n      localStorage.setItem('email', login_response.user.email);\r\n      localStorage.setItem('phone_number', login_response.user.phone_number);\r\n      localStorage.setItem('profile_picture', login_response.picture[0].picture_url);\r\n      localStorage.setItem('profession', login_response.user.profession);\r\n      localStorage.setItem('bio', login_response.user.bio);\r\n      history.push('/projects');\r\n}).catch(error => {\r\n    alert(\"Please Check If you're entering the correct email and password!\");\r\n    console.log(error);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function loginAPI(){\r\n  const email = document.getElementById('email').value;\r\n  const password = document.getElementById('password').value;\r\n  const token = localStorage.getItem('device_token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/login\", {\r\n        method: 'POST',\r\n        body: new URLSearchParams({\r\n          'email' : email,\r\n          'password' : password,\r\n          'token' : token\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const login_response = await response.json();\r\n  return login_response;\r\n}\r\n\r\n  const handleLogin = async e => {\r\n    e.preventDefault();\r\n    login();\r\n  }\r\n  return (\r\n    <Box sx={{ flexGrow: 1}}>\r\n      <Grid container spacing={3} style={{backgroundColor:'#f5f5f5'}}>\r\n        <Grid item xs={12} lg={6} sx={{textAlign:'center', color:'white'}} style={{position: 'relative',height:'680px',backgroundImage:`url(${background})`}}>\r\n            <h1 style={{color:'#1976d2'}}>Todo Tasks</h1>\r\n            <div style={{marginTop:'35px', backgroundColor:\"#1976d2\", borderRadius:'20px', marginLeft:'10px', maxWidth:'50%',float:'left', marginRight:'10px', padding:'3px'}}>\r\n            <p style={{fontSize:'13pt', fontFamily:'Roboto'}}>\r\n                What is the perfect platform for freelancing?\r\n            </p>\r\n            </div>\r\n            <div style={{marginTop:'35px', backgroundColor:\"#1976d2\", borderRadius:'20px', maxWidth:'50%',float:'right', marginRight:'10px', padding:'3px'}}>\r\n            <p style={{fontSize:'13pt', fontFamily:'Roboto'}}>\r\n            Todo Tasks is a map for you if you're searching for a freelancer.\r\n            </p>\r\n            </div>\r\n            <div style={{marginTop:'10px', maxWidth:'50%',backgroundColor:\"#1976d2\", borderRadius:'20px',float:'right',marginRight:'10px', padding:'3px'}}>\r\n            <p style={{fontSize:'13pt',fontFamily:'Roboto'}}>\r\n            And your home if you are a freelancer and you want to work comfortably.\r\n            </p>\r\n            </div>\r\n            <div style={{position: 'absolute', bottom: '0px' , display:'flex', flexDirection:'row', width:'100%'}}>\r\n            <div style={{flex:'4', backgroundColor:'white', border:'1px solid #1976d2', borderRadius:'20px', textAlign: 'left', margin:'10px', paddingLeft:'10px', height:'40px'}}>\r\n                <p style={{color:'black', fontFamily:'Roboto'}}>By Waseem Issa on Behalf of SE Factory</p>\r\n            </div>\r\n            <div style={{flex:'1', marginLeft:'-20px'}}>\r\n                <p style={{color:'#1976d2', fontSize:'10pt', marginBottom:'5px', paddingRight:'15px'}}><SendIcon sx={{width:'35px', height:'35px'}} /></p>\r\n            </div>\r\n            </div>\r\n        </Grid>\r\n        <Grid item xs={12} lg={6} sx={{textAlign: 'center'}}>\r\n          \r\n          <Box\r\n      component=\"form\"\r\n      sx={{\r\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >\r\n     <center><div style={{border:'1px solid #1976d2', backgroundColor:'white', borderRadius:'35px', marginTop:'100px', width:'80%', fontFamily:'Roboto'}}>\r\n      <h1 style={{fontFamily:'Roboto'}}>User Login</h1>\r\n        <TextField\r\n          required\r\n          type=\"email\"\r\n          id=\"email\"\r\n          label=\"Email Address\"\r\n          placeholder=\"someone@example.com \"\r\n          style={{width:'80%'}}\r\n        />\r\n        <TextField\r\n          required\r\n          type=\"password\"\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          placeholder=\"your password\"\r\n          style={{width:'80%'}}\r\n        />\r\n        <Button variant=\"contained\" style={{width:'80%'}} onClick={handleLogin}>Login</Button>\r\n        <p>New to Todo Tasks? <Link component={RouterLink} to=\"/register\">Register.</Link> </p>\r\n        \r\n      </div>\r\n      </center>\r\n    </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport background from '../images/bg.jpg';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport Button from '@mui/material/Button';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport Link from '@mui/material/Link';\r\nimport { Link as RouterLink, MemoryRouter as Router } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nexport default function RegisterPage() {\r\n  const history = useHistory();\r\n\r\n  const [is_freelancer, setIsFreelancer] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setIsFreelancer(event.target.value);\r\n  };\r\n\r\n  function register(){\r\n    registerAPI().then(register_response=>{\r\n      history.push('/');\r\n}).catch(error => {\r\n    alert(\"Registration fail, you should:\\nFill all the fields \\nBe at least 18 years old\\nHave a unique email and username\\nProvide a confirmed password of at least 6 characters\");\r\n});\r\n\r\n}\r\n\r\n\r\nasync function registerAPI(){\r\n  const first_name = document.getElementById('first_name').value;\r\n  const last_name = document.getElementById('last_name').value;\r\n  const username = document.getElementById('username').value;\r\n  const email = document.getElementById('email').value;\r\n  const password = document.getElementById('password').value;\r\n  const password_confirmation = document.getElementById('password_confirmation').value;\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/register\", {\r\n        method: 'POST',\r\n        body: new URLSearchParams({\r\n          'first_name': first_name,\r\n          'last_name' : last_name,\r\n          'username' : username,\r\n          'email' : email,\r\n          'password' : password,\r\n          'password_confirmation' : password_confirmation,\r\n          'is_freelancer' : is_freelancer\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const register_response = await response.json();\r\n  return register_response;\r\n}\r\n\r\n  const handleRegistration = async e => {\r\n    e.preventDefault();\r\n    register();\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1}}>\r\n      <Grid container spacing={3} style={{backgroundColor:'#f5f5f5'}}>\r\n        <Grid item xs={12} lg={6} sx={{textAlign:'center', color:'white'}} style={{position: 'relative',height:'680px',backgroundImage:`url(${background})`}}>\r\n            <h1 style={{color:'#1976d2', fontFamily:'Roboto'}}>Todo Tasks</h1>\r\n            <div style={{marginTop:'35px', backgroundColor:\"#1976d2\", borderRadius:'20px', maxWidth:'50%',float:'left', marginLeft:'10px', padding:'3px'}}>\r\n            <p style={{fontSize:'13pt', fontFamily:'Roboto'}}>\r\n                What is the perfect platform for freelancing?\r\n            </p>\r\n            </div>\r\n            <div style={{marginTop:'35px', backgroundColor:\"#1976d2\", borderRadius:'20px', maxWidth:'50%',float:'right', marginRight:'10px', padding:'3px'}}>\r\n            <p style={{fontSize:'13pt', fontFamily:'Roboto'}}>\r\n            Todo Tasks is a map for you if you're searching for a freelancer.\r\n            </p>\r\n            </div>\r\n            <div style={{marginTop:'10px', maxWidth:'50%',backgroundColor:\"#1976d2\", borderRadius:'20px',float:'right',marginRight:'10px', padding:'3px'}}>\r\n            <p style={{fontSize:'13pt',fontFamily:'Roboto'}}>\r\n            And your home if you are a freelancer and you want to work comfortably.\r\n            </p>\r\n            </div>\r\n            <div style={{position: 'absolute', bottom: '0px' , display:'flex', flexDirection:'row', width:'100%'}}>\r\n            <div style={{flex:'4', backgroundColor:'white', border:'1px solid #1976d2', borderRadius:'20px', textAlign: 'left', margin:'10px', paddingLeft:'10px', height:'40px'}}>\r\n                <p style={{color:'black', fontFamily:'Roboto'}}>By Waseem Issa on Behalf of SE Factory</p>\r\n            </div>\r\n            <div style={{flex:'1', marginLeft:'-20px'}}>\r\n                <p style={{color:'#1976d2', fontSize:'10pt', marginBottom:'5px'}}><SendIcon sx={{width:'35px', height:'35px', paddingRight:'15px'}} /></p>\r\n            </div>\r\n            </div>\r\n        </Grid>\r\n        <Grid item xs={12} lg={6} sx={{textAlign: 'center'}}>\r\n          \r\n          <Box\r\n      component=\"form\"\r\n      sx={{\r\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >\r\n     <center><div style={{marginTop:'2px', marginBottom:'2px',border:'1px solid #1976d2',backgroundColor:'white', borderRadius:'35px', width:'80%', fontFamily:'Roboto'}}>\r\n      <h1 style={{fontFamily:'Roboto'}}>User Registration</h1>\r\n      <TextField\r\n          required\r\n          id=\"first_name\"\r\n          type=\"text\"\r\n          label=\"First Name\"\r\n          placeholder=\"John\"\r\n          sx={{fontFamily:'Roboto'}}\r\n          style={{width:'80%'}}\r\n        />\r\n        <TextField\r\n          required\r\n          id=\"last_name\"\r\n          type=\"text\"\r\n          label=\"Last Name\"\r\n          placeholder=\"Smith\"\r\n          style={{width:'80%'}}\r\n        />\r\n        <TextField\r\n          required\r\n          id=\"username\"\r\n          type=\"text\"\r\n          label=\"Username\"\r\n          placeholder=\"john.smith\"\r\n          style={{width:'80%'}}\r\n        />\r\n        <TextField\r\n          required\r\n          id=\"email\"\r\n          type=\"email\"\r\n          label=\"Email Address\"\r\n          placeholder=\"someone@example.com \"\r\n          style={{width:'80%'}}\r\n        />\r\n        <TextField\r\n          required\r\n          type=\"password\"\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          placeholder=\"At least 6 characters\"\r\n          style={{width:'80%'}}\r\n        />\r\n        <TextField\r\n          required\r\n          type=\"password\"\r\n          id=\"password_confirmation\"\r\n          label=\"Confirm Password\"\r\n          placeholder=\"Should match password\"\r\n          style={{width:'80%'}}\r\n        />\r\n      <FormControl component=\"fieldset\" sx={{width:'80%'}}>\r\n      <FormLabel component=\"legend\">Are you a freelancer?</FormLabel>\r\n      <RadioGroup\r\n        required\r\n        aria-label=\"is_freelancer\"\r\n        name=\"radio-buttons-group\"\r\n        id = \"is_freelancer\"\r\n        value={is_freelancer}\r\n        onChange={handleChange}\r\n        sx={{display:'flex', flexDirection:'row'}}\r\n      >\r\n        <FormControlLabel value=\"1\" control={<Radio />} label=\"Yes\" />\r\n        <FormControlLabel value=\"0\" control={<Radio />} label=\"No\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n        <Button variant=\"contained\" style={{width:'80%'}} type=\"submit\" onClick={handleRegistration}>Sign Up</Button>\r\n        <p>Already on Todo Tasks? <Link component={RouterLink} to=\"/\">Login.</Link> </p>\r\n      </div>\r\n      </center>\r\n    </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}","import * as React from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport FeedIcon from '@mui/icons-material/Feed';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport SchoolIcon from '@mui/icons-material/School';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport { Link as RouterLink, MemoryRouter as Router } from 'react-router-dom';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function UserCard() {\r\n  const [id, setId] = useState(localStorage.getItem('todo_tasks_user_id'));\r\n  const [name, setName] = useState(localStorage.getItem('todo_tasks_user_name'));\r\n  const [profession, setProfession] = useState(localStorage.getItem('todo_tasks_user_profession'));\r\n  const [picture, setPicture] = useState(localStorage.getItem('todo_tasks_user_picture'));\r\n\r\n\r\n  useEffect(() => {\r\n      setId(localStorage.getItem('todo_tasks_user_id'));\r\n      setName(localStorage.getItem('todo_tasks_user_name'));\r\n      setProfession(localStorage.getItem('todo_tasks_user_profession'));\r\n      setPicture(localStorage.getItem('todo_tasks_user_picture'));\r\n\r\n      const isFriend = localStorage.getItem('is_friend');\r\n      if(isFriend == \"true\"){\r\n        document.getElementById('follow_label').style.display = \"none\";\r\n      }\r\n\r\n  },[]);\r\n\r\n  const handleFollow = () =>{\r\n      sendFollowRequest();\r\n  }\r\n\r\n  function sendFollowRequest(){\r\n    sendFollowRequestAPI().then(add_response=>{\r\n      document.getElementById('follow_label').style.display = \"none\";\r\n\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function sendFollowRequestAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/send-follow-request\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user2_id': id,\r\n        })\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const add_response = await response.json();\r\n  return add_response;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment style={{width:'80%'}}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"sm\" lg={{marginLeft:'20px', marginRight:'20px'}}>\r\n        <Box sx={{ bgcolor: \"#1976d2\", height: \"100px\" }}>\r\n        <center><Avatar src={picture} sx={{ width: '100px', height:'100px', bottom:'-50px', position:'relative'}}>A</Avatar></center>\r\n        <label id=\"follow_label\" htmlFor=\"follow\" style={{paddingLeft:'65%'}}>\r\n        <IconButton onClick={handleFollow} color=\"primary\" id=\"follow\" aria-label=\"Follow\" component=\"span\">\r\n        <AddCircleOutlineIcon />\r\n        </IconButton>\r\n        </label>\r\n        </Box>\r\n        <Box sx={{paddingTop: '40px', textAlign:'center'}}>\r\n            <h3>{name}</h3>\r\n            <p style={{marginTop: '-20px' }}>{profession}</p>\r\n        </Box>\r\n        <Box>\r\n        <List>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/feed\">\r\n              <ListItemIcon>\r\n                <FeedIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Contact Info\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/experience\">\r\n              <ListItemIcon>\r\n                <WorkIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Experience\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/education\">\r\n              <ListItemIcon>\r\n                <SchoolIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Education\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/skills\">\r\n              <ListItemIcon>\r\n                <StarIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Skills\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        </List>\r\n\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nexport default function UserEducation(props) {\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"education\">\r\n            <StarIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <p>\r\n              {props.degree} in {props.major}\r\n            </p>\r\n            <p>\r\n              {props.university} ({props.year})\r\n            </p>\r\n          </Typography>\r\n        }\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../../Components/Suggestion\";\r\nimport Pending from \"../../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../../Components/ProfileComponents/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport UserEducation from '../../Components/ProfileComponents/UserEducation';\r\nimport MainNavigation from '../../Components/Layout/MainNavigation';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\n\r\n\r\n\r\nfunction UserEducationPage(){\r\n  const [educations, setEducations]  = useState([]);\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n    getUserEdcuation()\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserEdcuation(){\r\n    getUserEdcuationAPI().then(education_response=>{\r\n      console.log(education_response);\r\n      setEducations(education_response.education);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\n\r\n\r\nasync function getUserEdcuationAPI(){\r\n  const user_id = localStorage.getItem('todo_tasks_user_id');\r\n  const authorization = localStorage.getItem('token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/user-education\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user_id' : user_id,\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const education_response = await response.json();\r\n  return education_response;\r\n}\r\n\r\n    //pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n        <MainNavigation />\r\n        <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n    \r\n  <Grid item xs>\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} lg={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Education\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {educations.map((education) => (\r\n        <UserEducation id={education.id} degree={education.degree} major={education.major} university={education.university} year={education.year}></UserEducation>\r\n          ))}\r\n          \r\n\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs>\r\n  <Grid item >\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} username={pendingRequest.info.username} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url} profession={pendingRequest.info.profession} email={pendingRequest.info.email} bio={pendingRequest.info.bio} phone_number={pendingRequest.info.phone_number}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserEducationPage;","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport { red } from '@mui/material/colors';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport StarIcon from '@mui/icons-material/Star';\r\n\r\n\r\n\r\nexport default function UserSkill(props) {\r\n\r\n\r\n  return (\r\n    <Card id={props.id} sx={{display:'flex', flexDirection:'row', paddingTop:'5px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <StarIcon />\r\n          </Avatar>\r\n        }\r\n        title={props.title}\r\n        />\r\n        </Card>\r\n  );\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../../Components/Suggestion\";\r\nimport Pending from \"../../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../../Components/ProfileComponents/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport UserSkill from '../../Components/ProfileComponents/UserSkill';\r\nimport MainNavigation from '../../Components/Layout/MainNavigation';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\n\r\n\r\n\r\nfunction UserSkillsPage(){\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n    const [skills, setSkills]  = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    getUserSkills();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserSkills(){\r\n    getUserSkillsAPI().then(skills_response=>{\r\n      setSkills(skills_response.skills);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getUserSkillsAPI(){\r\n  const user_id = localStorage.getItem('todo_tasks_user_id');\r\n  const authorization = localStorage.getItem('token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-user-skills\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user_id' : user_id,\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const skills_response = await response.json();\r\n  return skills_response;\r\n}\r\n\r\n    //pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n        <MainNavigation />\r\n        <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n  <Grid item xs >\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} lg={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Skills\r\n          </Typography>\r\n          </Box>\r\n          <Stack id=\"skills\" direction=\"column\" spacing={2}>\r\n          {skills.map((skill) => (\r\n          <UserSkill id={skill.id} title={skill.title}></UserSkill>\r\n          ))}\r\n            \r\n\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs>\r\n  <Grid item >\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} username={pendingRequest.info.username} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url} profession={pendingRequest.info.profession} email={pendingRequest.info.email} bio={pendingRequest.info.bio} phone_number={pendingRequest.info.phone_number}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserSkillsPage;","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../../Components/Suggestion\";\r\nimport Pending from \"../../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../../Components/ProfileComponents/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport MainNavigation from '../../Components/Layout/MainNavigation';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\n\r\nfunction UserFeed(){\r\n  const bio = localStorage.getItem('todo_tasks_user_bio');\r\n  const email = localStorage.getItem('todo_tasks_user_email');\r\n  const phone_number = localStorage.getItem('todo_tasks_user_phone_number');\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n    //pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n      <MainNavigation />\r\n      <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n  <Grid item xs>\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} lg={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Contact Info\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n        <Card sx={{display:'flex', flexDirection:'row', marginTop:'10px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <InfoIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <h3>\r\n            Bio\r\n          </h3>\r\n          <p style={{marginTop:'-20px', fontFamily:'roboto'}}>\r\n          {bio}\r\n          </p>\r\n        </Typography>}\r\n        />\r\n        </Card>\r\n        <Card sx={{display:'flex', flexDirection:'row', marginTop:'10px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <EmailIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <h3>\r\n            E-mail Address\r\n          </h3>\r\n          <p style={{marginTop:'-20px', fontFamily:'roboto'}}>\r\n          {email}\r\n          </p>\r\n        </Typography>}\r\n        />\r\n        </Card>\r\n        <Card sx={{display:'flex', flexDirection:'row', marginTop:'10px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <LocalPhoneIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <h3>\r\n            Phone Number\r\n          </h3>\r\n          <p style={{marginTop:'-20px', fontFamily:'roboto'}}>\r\n          {phone_number}\r\n          </p>\r\n        </Typography>}\r\n        />\r\n        </Card>\r\n\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs>\r\n  <Grid item >\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} username={pendingRequest.info.username} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url} profession={pendingRequest.info.profession} email={pendingRequest.info.email} bio={pendingRequest.info.bio} phone_number={pendingRequest.info.phone_number}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n       <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserFeed;","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport WorkIcon from \"@mui/icons-material/Work\";\r\n\r\nexport default function UserExperience(props) {\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"recipe\">\r\n            <WorkIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <p>\r\n              {props.position} at {props.company}\r\n            </p>\r\n            <p>\r\n              From {props.start_date} till {props.end_date}\r\n            </p>\r\n          </Typography>\r\n        }\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../../Components/Suggestion\";\r\nimport Pending from \"../../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../../Components/ProfileComponents/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport UserExperience from \"../../Components/ProfileComponents/UserExperience\";\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nimport MainNavigation from \"../../Components/Layout/MainNavigation\";\r\n\r\nfunction UserExperiencePage() {\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n  const [experiences, setExperiences]  = useState([]);\r\n  \r\n  useEffect(() => {\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getUserExperience();\r\n  }, []);\r\n\r\n  function getUserExperience(){\r\n    getUserExperienceAPI().then(experience_response=>{\r\n      console.log(experience_response);\r\n      setExperiences(experience_response.jobs);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getUserExperienceAPI(){\r\n  const user_id = localStorage.getItem('todo_tasks_user_id');\r\n  const authorization = localStorage.getItem('token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/user-jobs\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user_id' : user_id,\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const experience_response = await response.json();\r\n  return experience_response;\r\n}\r\n\r\n    //pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n  return (\r\n    <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n    <MainNavigation />\r\n    <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n        <Grid item xs>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} lg={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n            <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n              <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n                  Experience\r\n                </Typography>\r\n              </Box>\r\n              <Stack direction=\"column\" spacing={2}>\r\n              {experiences.map((experience) => (\r\n        <UserExperience id={experience.id} company={experience.company} position={experience.position} start_date={experience.start_date} end_date={experience.end_date}></UserExperience>\r\n          ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs>\r\n  <Grid item >\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} username={pendingRequest.info.username} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url} profession={pendingRequest.info.profession} email={pendingRequest.info.email} bio={pendingRequest.info.bio} phone_number={pendingRequest.info.phone_number}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserExperiencePage;\r\n","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport { red } from '@mui/material/colors';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\r\nimport BlockIcon from '@mui/icons-material/Block';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Connection(props) {\r\n  const history = new useHistory();\r\n\r\n  const handleUnfollow = () =>{\r\n    unfollow();\r\n    document.getElementById('connection_'+props.id).style.display = \"none\";\r\n  }\r\n\r\n  const handleBlock = () => {\r\n    block();\r\n    document.getElementById('connection_'+props.id).style.display = \"none\";\r\n  }\r\n\r\n  //unfollow\r\n  function unfollow(){\r\n    unfollowAPI().then(unfollow_response=>{\r\n      console.log(unfollow_response);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function unfollowAPI(){\r\n  const user2_id = props.id;\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/unfollow\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user2_id': user2_id\r\n        })\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const unfollow_response = await response.json();\r\n  return unfollow_response;\r\n  }\r\n\r\n  //block\r\n  function block(){\r\n    blockAPI().then(block_response=>{\r\n      console.log(block_response);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function blockAPI(){\r\n  const user2_id = props.id;\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/block\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user2_id': user2_id\r\n        })\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const block_response = await response.json();\r\n  return block_response;\r\n  }\r\n\r\n  const handleClick = () => {\r\n    localStorage.setItem('todo_tasks_user_id', props.id);\r\n    localStorage.setItem('todo_tasks_user_name', props.name);\r\n    localStorage.setItem('todo_tasks_user_profession', props.profession);\r\n    localStorage.setItem('todo_tasks_user_picture', props.picture);\r\n    localStorage.setItem('todo_tasks_user_bio', props.bio);\r\n    localStorage.setItem('todo_tasks_user_email', props.email);\r\n    localStorage.setItem('todo_tasks_user_phone_number', props.phone_number);\r\n    localStorage.setItem('is_friend', 'true');\r\n    history.push('/feed/'+props.username);\r\n    window.location.reload();\r\n  }\r\n  \r\n\r\n  return (\r\n    <Card id={\"connection_\"+props.id} sx={{display:'flex', flexDirection:'row', paddingTop:'5px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        onClick={handleClick}\r\n        avatar={\r\n          <Avatar aria-label=\"profile pic\" src={props.picture}>\r\n          </Avatar>\r\n        }\r\n        title={props.name}\r\n        />\r\n        <Stack sx={{display:'flex', flexDirection:'row'}}>\r\n        <IconButton onClick={handleUnfollow} color=\"error\" aria-label=\"Edit\" component=\"span\" sx={{flex:'1'}}>\r\n        <PersonRemoveIcon  />\r\n        </IconButton>\r\n        <IconButton onClick={handleBlock} color=\"error\"aria-label=\"Edit\" component=\"span\" sx={{flex:'1'}}>\r\n        <BlockIcon />\r\n        </IconButton>\r\n        </Stack>\r\n        </Card>\r\n  );\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { useState } from 'react';\r\nimport MainNavigation from '../Components/Layout/MainNavigation';\r\nimport { useEffect } from 'react';\r\nimport Connection from '../Components/Connection';\r\n\r\n\r\n\r\n\r\nfunction ConnectionsPage(){\r\n\r\n  const [connections, setConnections]  = useState([]);\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getConnections();\r\n  }, []);\r\n\r\n  function getConnections(){\r\n    getConnectionsAPI().then(connections_response=>{\r\n      setConnections(connections_response.connections);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getConnectionsAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-connections\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization}\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const connections_response = await response.json();\r\n  return connections_response;\r\n}\r\n\r\n\r\n//pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n        <MainNavigation />\r\n        <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n  <Grid item xs >\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} lg={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Connections\r\n          </Typography>\r\n          </Box>\r\n          \r\n          <Stack id=\"connections\" direction=\"column\" spacing={2}>\r\n          {connections.map((connection) => (\r\n        <Connection id={connection.info.id} username={connection.info.username} name={connection.info.first_name+' '+connection.info.last_name} picture={connection.picture[0].picture_url} profession={connection.info.profession} email={connection.info.email} bio={connection.info.bio} phone_number={connection.info.phone_number}></Connection>\r\n          ))}\r\n            \r\n\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs>\r\n  <Grid item>\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default ConnectionsPage;","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { useState } from 'react';\r\nimport MainNavigation from '../Components/Layout/MainNavigation';\r\nimport { useEffect } from 'react';\r\nimport Connection from '../Components/Connection';\r\n\r\n\r\n\r\n\r\nfunction SearchResults(){\r\n\r\n  const [searchResults, setSearchResults]  = useState([]);\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getSearchResults();\r\n  }, []);\r\n\r\n  function getSearchResults(){\r\n    getSearchResultsAPI().then(search_response=>{\r\n      console.log(search_response);\r\n      setSearchResults(search_response.search_results);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getSearchResultsAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n  const search_value = localStorage.getItem('search_value');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/search\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n            'search_key': search_value\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const search_response = await response.json();\r\n  return search_response;\r\n}\r\n\r\n\r\n//pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n        <MainNavigation />\r\n        <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n  <Grid item xs >\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} lg={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Search Results\r\n          </Typography>\r\n          </Box>\r\n          \r\n          <Stack id=\"connections\" direction=\"column\" spacing={2}>\r\n          {searchResults.map((result) => (\r\n        <Suggestion id={result.info.id} username={result.info.username} name={result.info.first_name+' '+result.info.last_name} picture={result.picture[0].picture_url} profession={result.info.profession} email={result.info.email} bio={result.info.bio} phone_number={result.info.phone_number}></Suggestion>\r\n          ))}\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs>\r\n  <Grid item>\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default SearchResults;","import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCPq5sSe6IcMKCG6ocxKgw3SN0wfhn11pI\",\r\n    authDomain: \"todotasks-5c2a9.firebaseapp.com\",\r\n    projectId: \"todotasks-5c2a9\",\r\n    storageBucket: \"todotasks-5c2a9.appspot.com\",\r\n    messagingSenderId: \"813965289640\",\r\n    appId: \"1:813965289640:web:cb1401465f9479f40eba9d\",\r\n    measurementId: \"G-TEDBSBFEXQ\"\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Stack from '@mui/material/Stack';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\r\n\r\n\r\n\r\nexport default function Blocked(props) {\r\n  \r\n\r\n  const handleUnblock = () =>{\r\n    unblock();\r\n  }\r\n\r\n  //unblock\r\n  function unblock(){\r\n    unblockAPI().then(unblock_response=>{\r\n      document.getElementById('blocked_'+props.id).style.display = \"none\";\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function unblockAPI(){\r\n  const user2_id = props.id;\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/unblock\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user2_id': user2_id\r\n        })\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const block_response = await response.json();\r\n  return block_response;\r\n  }\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <Card id={\"blocked_\"+props.id} sx={{display:'flex', flexDirection:'row', paddingTop:'5px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar aria-label=\"profile pic\" src={props.picture}>\r\n          </Avatar>\r\n        }\r\n        title={props.name}\r\n        />\r\n        <Stack sx={{display:'flex', flexDirection:'row'}}>\r\n        <IconButton onClick={handleUnblock} style={{color:\"#1976d2\"}} aria-label=\"unblock\" component=\"span\" sx={{flex:'1'}}>\r\n        <PersonRemoveIcon  />\r\n        </IconButton>\r\n        </Stack>\r\n        </Card>\r\n  );\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { useState } from 'react';\r\nimport MainNavigation from '../Components/Layout/MainNavigation';\r\nimport { useEffect } from 'react';\r\nimport Connection from '../Components/Connection';\r\nimport Blocked from '../Components/Blocked';\r\n\r\n\r\n\r\n\r\nfunction BlockedContacts(){\r\n\r\n  const [blockedContacts, setBlockedContacts]  = useState([]);\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getBlockedContacts();\r\n  }, []);\r\n\r\n  function getBlockedContacts(){\r\n    getBlockedContactsAPI().then(blocked_response=>{\r\n      setBlockedContacts(blocked_response.blocked_contacts);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getBlockedContactsAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-blocked-contacts\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization}\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const blocked_response = await response.json();\r\n  return blocked_response;\r\n}\r\n\r\n\r\n//pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n        <MainNavigation />\r\n        <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n  <Grid item xs >\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} lg={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Blocked Contacts\r\n          </Typography>\r\n          </Box>\r\n          \r\n          <Stack id=\"connections\" direction=\"column\" spacing={2}>\r\n          {blockedContacts.map((contact) => (\r\n          <Blocked id={contact.info.id}  name={contact.info.first_name+' '+contact.info.last_name} picture={contact.picture[0].picture_url}></Blocked>\r\n          ))}\r\n            \r\n\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs>\r\n  <Grid item>\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default BlockedContacts;","import \"./App.css\";\nimport * as React from \"react\";\nimport {Route, Switch} from 'react-router-dom';\n\nimport MainPage from \"./Pages/MainPage\";\nimport MessagesPage from \"./Pages/MessagesPage\";\nimport NotificationsPage from \"./Pages/NotificationsPage\";\nimport ProjectsPage from \"./Pages/ProjectsPage\";\nimport SkillsPage from \"./Pages/SkillsPage\";\nimport EducationPage from \"./Pages/EducationPage\";\nimport ExperiencePage from \"./Pages/ExperiencePage\";\nimport LoginPage from \"./Pages/LoginPage\";\nimport RegisterPage from \"./Pages/RegisterPage\";\nimport UserEducationPage from \"./Pages/Profile/UserEducationPage\";\nimport UserSkillsPage from \"./Pages/Profile/UserSkillsPage\";\nimport UserFeed from \"./Pages/Profile/UserFeed\";\nimport UserExperiencePage from \"./Pages/Profile/UserExperiencePage\";\nimport ConnectionsPage from \"./Pages/ConnectionsPage\";\nimport SearchResults from \"./Pages/SearchResults\";\nimport firebase from './firebase';\nimport BlockedContacts from \"./Pages/BlockedContacts\";\n\nexport default class App extends React.Component {\n\n  componentDidMount(){\n\n    \n    const messaging = firebase.messaging();\n    if (\"serviceWorker\" in navigator) {\n      navigator.serviceWorker\n        .register(\"./firebase-messaging-sw.js\")\n        .then(function(registration) {\n          console.log(\"Registration successful, scope is:\", registration.scope);\n          Notification.requestPermission().then(()=>{\n            messaging.getToken({vapidKey: 'BPeIeKcMyJbJ6ag2MRhpHdSLOUvNvhPsJp6KXIrPFXllE8LcGx3Mfsm54SwXiir8YsmY_8wWjrOwmJadR-g10l4', serviceWorkerRegistration : registration })\n            .then((currentToken) => {\n              if (currentToken) {\n                console.log('current token for client: ', currentToken);\n                localStorage.setItem('device_token', currentToken);\n              } else {\n                console.log('No registration token available. Request permission to generate one.');\n              }\n            }).catch((err) => {\n              console.log('An error occurred while retrieving token. ', err);\n            }); \n          })\n           \n          })\n          .catch(function(err) {\n            console.log(\"Service worker registration failed, error:\"  , err );\n        }); \n      }\n\n\n  }\n  render(){\n    return (\n      <div>\n        <Switch>\n          <Route path=\"/\" exact>\n            <LoginPage />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterPage />\n          </Route>\n          <Route path=\"/user-feed\">\n            <MainPage />\n          </Route>\n          <Route path=\"/connections\">\n            <ConnectionsPage />\n          </Route>\n          <Route path=\"/blocked\">\n            <BlockedContacts />\n          </Route>\n          <Route path=\"/messages\">\n            <MessagesPage />\n          </Route>\n          <Route path=\"/notifications\">\n            <NotificationsPage />\n          </Route>\n          <Route path=\"/projects\">\n            <ProjectsPage />\n          </Route>\n          <Route path=\"/user-skills\">\n            <SkillsPage />\n          </Route>\n          <Route path=\"/user-education\">\n            <EducationPage />\n          </Route>\n          <Route path=\"/user-experience\">\n            <ExperiencePage />\n          </Route>\n          <Route path=\"/search\">\n            <SearchResults />\n          </Route>\n  \n          {/* Routes for a specific user */}\n          <Route path=\"/feed\">\n            <UserFeed />\n          </Route>\n          <Route path=\"/education\" >\n            <UserEducationPage />\n          </Route>\n          <Route path=\"/skills\">\n            <UserSkillsPage />\n          </Route>\n          <Route path=\"/experience\">\n            <UserExperiencePage />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n  \n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router><App /></Router>,document.getElementById('root'));\n\n"],"sourceRoot":""}