{"version":3,"sources":["Components/Suggestion.js","Components/Pending.js","Components/UserCard.js","Components/Layout/MainNavigation.js","Pages/MainPage.js","Pages/MessagesPage.js","Components/Notification.js","Pages/NotificationsPage.js","Components/UserComment.js","Components/Project.js","Pages/ProjectsPage.js","Components/UserSkill.js","Pages/SkillsPage.js","Components/UserEducation.js","Pages/EducationPage.js","Components/UserExperience.js","Pages/ExperiencePage.js","Images/bg.jpg","Pages/LoginPage.js","Pages/RegisterPage.js","Components/ProfileComponents/UserCard.js","Components/ProfileComponents/UserEducation.js","Pages/Profile/UserEducationPage.js","Components/ProfileComponents/UserSkill.js","Pages/Profile/UserSkillsPage.js","Pages/Profile/UserFeed.js","Components/ProfileComponents/UserExperience.js","Pages/Profile/UserExperiencePage.js","Components/Connection.js","Pages/ConnectionsPage.js","Pages/SearchResults.js","firebase.js","Components/Blocked.js","Pages/BlockedContacts.js","App.js","index.js"],"names":["Suggestion","props","history","useHistory","a","authorization","localStorage","getItem","fetch","method","headers","accepts","Authorization","body","URLSearchParams","user2_id","id","response","ok","Error","json","add_response","Card","sx","display","flexDirection","paddingTop","CardHeader","onClick","setItem","name","profession","picture","bio","email","phone_number","push","username","window","location","reload","flex","style","fontFamily","avatar","Avatar","src","title","Typography","IconButton","color","component","sendFollowRequestAPI","then","catch","error","console","log","message","document","getElementById","Pending","value","accept_response","delete_response","hidden","Stack","direction","acceptFollowRequestAPI","deleteFollowRequestAPI","Input","styled","UserCard","useState","user_picture","setUserPicture","width","CssBaseline","Container","maxWidth","lg","marginLeft","marginRight","Box","bgcolor","height","bottom","position","htmlFor","paddingLeft","accept","type","onChange","e","event","target","files","fd","FormData","append","axios","post","res","data","picture_url","fileUploadHandler","textAlign","marginTop","List","ListItem","disablePadding","ListItemButton","RouterLink","to","ListItemIcon","ListItemText","primary","Search","theme","borderRadius","shape","backgroundColor","alpha","palette","common","white","spacing","breakpoints","up","SearchIconWrapper","padding","pointerEvents","alignItems","justifyContent","StyledInputBase","InputBase","transition","transitions","create","MainNavigation","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","count","setCount","useEffect","getNotificationsCountAPI","count_response","addEventListener","keyCode","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","clear","onpopstate","go","mobileMenuId","renderMobileMenu","size","Badge","badgeContent","flexGrow","AppBar","Toolbar","variant","noWrap","textDecoration","xs","sm","placeholder","inputProps","md","edge","top","left","transform","border","boxShadow","p","MainPage","setOpen","handleClose","setProfession","setBio","setPhoneNumber","pendingRequests","setPendingRequests","suggestions","setSuggestions","edit_response","pending_response","suggestions_response","getPendingRequestsAPI","pending_connections","getSuggestionsAPI","Grid","container","item","paddingBottom","marginBottom","mt","mb","alignSelf","Modal","noValidate","autoComplete","onSubmit","editProfileAPI","TextField","label","innerHTML","multiline","Button","map","pendingRequest","info","first_name","last_name","suggestion","MessagesPage","messages","setMessages","setMessage","allMessages","Pusher","logToConsole","cluster","subscribe","bind","submit","overflow","background","inlineSize","gap","endIcon","right","Notification","notification_id","text","deleteNotificationAPI","NotificationsPage","notifications","setNotifications","notifications_response","getUserNotificationsAPI","notification","UserComment","fontSize","CardContent","Project","comments","setComments","getProjectComments","project_id","markAsDone_response","getProjectCommentsAPI","comments_response","comment_text","due_date","amount","markAsDoneAPI","comment","user","addCommentAPI","ProjectsPage","projects","setProjects","freelancers","setFreelancers","freelancerId","setFreelancerId","formatDate","Date","date","setDate","d","month","getMonth","day","getDate","year","getFullYear","length","join","freelancers_response","freelancer_user_id","description","price","getProjects","getProjectsAPI","projects_response","getFreelancersAPI","createProjectAPI","LocalizationProvider","dateAdapter","DateAdapter","InputLabel","Select","labelId","required","freelancer","DesktopDatePicker","newValue","minDate","renderInput","params","project","UserSkill","setTitle","skill_id","update_response","deleteSkillAPI","updateSkillAPI","minLength","SkillsPage","skills","setSkills","getUserSkills","getUserSkillsAPI","skills_response","user_id","addSkill","addSkillAPI","skill_title","skill","UserEducation","degree","setDegree","university","setUniversity","major","setMajor","setYear","years","setYears","populateYears","max_year","years_select","i","education_id","deleteEducationAPI","updateEducationAPI","EducationPage","educations","setEducations","getUserEdcuation","getUserEdcuationAPI","education_response","education","addEducation","addEducationAPI","UserExperience","setPosition","company","setCompany","start_date","setStartDate","end_date","setEndDate","formatDisplayDate","formatNewDate","job_id","deleteExperienceAPI","updateExperienceAPI","maxDate","helperText","ExperiencePage","experiences","setExperiences","getUserExperience","getUserExperienceAPI","experience_response","jobs","addExperience","addExperienceAPI","experience","LoginPage","login","loginAPI","login_response","access_token","alert","password","token","handleLogin","preventDefault","backgroundImage","Link","RegisterPage","is_freelancer","setIsFreelancer","register","registerAPI","password_confirmation","register_response","handleRegistration","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","setId","setName","setPicture","UserEducationPage","UserSkillsPage","UserFeed","UserExperiencePage","Connection","unfollow_response","block_response","unfollowAPI","blockAPI","ConnectionsPage","connections","setConnections","connections_response","getConnectionsAPI","connection","SearchResults","searchResults","setSearchResults","search_value","search_key","search_response","getSearchResultsAPI","search_results","result","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Blocked","unblockAPI","BlockedContacts","blockedContacts","setBlockedContacts","blocked_response","getBlockedContactsAPI","blocked_contacts","contact","App","isIOS","messaging","navigator","serviceWorker","registration","scope","requestPermission","getToken","vapidKey","serviceWorkerRegistration","currentToken","err","path","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.1c712cfe.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Suggestion(props) {\r\n  const history = new useHistory();\r\n\r\n  const handleSendRequest = () => {\r\n    sendFollowRequest();\r\n    document.getElementById(\"suggestion_\" + props.id).style.display = \"none\";\r\n  };\r\n\r\n  const handleClick = () => {\r\n    localStorage.setItem(\"todo_tasks_user_id\", props.id);\r\n    localStorage.setItem(\"todo_tasks_user_name\", props.name);\r\n    localStorage.setItem(\"todo_tasks_user_profession\", props.profession);\r\n    localStorage.setItem(\"todo_tasks_user_picture\", props.picture);\r\n    localStorage.setItem(\"todo_tasks_user_bio\", props.bio);\r\n    localStorage.setItem(\"todo_tasks_user_email\", props.email);\r\n    localStorage.setItem(\"todo_tasks_user_phone_number\", props.phone_number);\r\n    localStorage.setItem(\"is_friend\", \"false\");\r\n    history.push(\"/feed/\" + props.username);\r\n    window.location.reload();\r\n  };\r\n\r\n  function sendFollowRequest() {\r\n    sendFollowRequestAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function sendFollowRequestAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/send-follow-request\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user2_id: props.id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const add_response = await response.json();\r\n    return add_response;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      id={\"suggestion_\" + props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        onClick={handleClick}\r\n        sx={{ flex: \"5\" }}\r\n        style={{ fontFamily: \"Roboto\" }}\r\n        avatar={\r\n          <Avatar src={props.picture} aria-label=\"Profile Picture\"></Avatar>\r\n        }\r\n        title={\r\n        <Typography>\r\n        <h4>{props.name}</h4>\r\n        </Typography>}\r\n      />\r\n      <IconButton\r\n        style={{ color: \"#1976d2\" }}\r\n        aria-label=\"Follow\"\r\n        component=\"span\"\r\n        sx={{ flex: \"1\" }}\r\n        onClick={handleSendRequest}\r\n      >\r\n        <AddCircleIcon />\r\n      </IconButton>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nexport default function Pending(props) {\r\n  const handleApproval = () => {\r\n    acceptFollowRequest();\r\n    document.getElementById(\"pending_\" + props.id).style.display = \"none\";\r\n  };\r\n\r\n  const handleRejection = () => {\r\n    deleteFollowRequest();\r\n    document.getElementById(\"pending_\" + props.id).style.display = \"none\";\r\n  };\r\n\r\n  function acceptFollowRequest() {\r\n    acceptFollowRequestAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function acceptFollowRequestAPI() {\r\n    const user2_id = document.getElementById(\"user2_id\").value;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/accept-follow-request\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user2_id: user2_id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const accept_response = await response.json();\r\n    return accept_response;\r\n  }\r\n\r\n  function deleteFollowRequest() {\r\n    deleteFollowRequestAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function deleteFollowRequestAPI() {\r\n    const user2_id = document.getElementById(\"user2_id\").value;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/delete-follow-request\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user2_id: user2_id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const delete_response = await response.json();\r\n    return delete_response;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      id={\"pending_\" + props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"10\" }}\r\n        style={{ fontFamily: \"Roboto\" }}\r\n        avatar={\r\n          <Avatar\r\n            aria-label=\"profile picture\"\r\n            src={props.picture}\r\n          ></Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <h4>\r\n            {props.name}\r\n            </h4>\r\n          </Typography>\r\n        }\r\n      />\r\n      <button hidden id=\"user2_id\" value={props.id}></button>\r\n      <Stack direction=\"row\" sx={{ flex: \"1\" }}>\r\n        <IconButton\r\n          style={{ color: \"#1976d2\" }}\r\n          aria-label=\"Approve\"\r\n          onClick={handleApproval}\r\n        >\r\n          <CheckIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"error\"\r\n          aria-label=\"Decline\"\r\n          onClick={handleRejection}\r\n        >\r\n          <CancelIcon />\r\n        </IconButton>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport AccountTreeIcon from \"@mui/icons-material/AccountTree\";\r\nimport FeedIcon from \"@mui/icons-material/Feed\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport WorkIcon from \"@mui/icons-material/Work\";\r\nimport SchoolIcon from \"@mui/icons-material/School\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport PersonOffIcon from \"@mui/icons-material/PersonOff\";\r\nimport { Link as RouterLink, MemoryRouter as Router } from \"react-router-dom\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport PhotoCamera from \"@mui/icons-material/PhotoCamera\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Input = styled(\"input\")({\r\n  display: \"none\",\r\n});\r\n\r\nexport default function UserCard() {\r\n  const name = localStorage.getItem(\"full_name\");\r\n  const profession = localStorage.getItem(\"profession\");\r\n  const [user_picture, setUserPicture] = useState(\r\n    localStorage.getItem(\"profile_picture\")\r\n  );\r\n\r\n  const fileUploadHandler = (event) => {\r\n    let picture = event.target.files[0];\r\n    let fd = new FormData();\r\n    fd.append(\"picture\", picture);\r\n    const authorization = localStorage.getItem(\"token\");\r\n    console.log(picture);\r\n    axios\r\n      .post(\"https://todotasks.tk/api/auth/upload-profile-picture\", fd, {\r\n        headers: {\r\n          Authorization: authorization,\r\n          accepts: \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        document.getElementById(\"user_image\").src = res.data.picture.picture_url;\r\n        localStorage.setItem(\"profile_picture\", res.data.picture.picture_url);\r\n        setUserPicture(res.data.picture.picture_url);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment style={{ width: \"80%\" }}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"sm\" lg={{ marginLeft: \"20px\", marginRight: \"20px\" }}>\r\n        <Box sx={{ bgcolor: \"#1976d2\", height: \"100px\" }}>\r\n          <center>\r\n            <Avatar\r\n              id=\"user_image\"\r\n              src={user_picture}\r\n              sx={{\r\n                width: \"100px\",\r\n                height: \"100px\",\r\n                bottom: \"-50px\",\r\n                position: \"relative\",\r\n              }}\r\n            ></Avatar>\r\n          </center>\r\n          <label htmlFor=\"profile_image\" style={{ paddingLeft: \"65%\" }}>\r\n            <Input\r\n              accept=\"image/*\"\r\n              id=\"profile_image\"\r\n              type=\"file\"\r\n              onChange={(e) => {\r\n                fileUploadHandler(e);\r\n              }}\r\n            />\r\n            <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n            >\r\n              <PhotoCamera />\r\n            </IconButton>\r\n          </label>\r\n        </Box>\r\n        <Box sx={{ paddingTop: \"40px\", textAlign: \"center\" }}>\r\n          <h3 style={{ fontFamily: \"Roboto\" }}>{name}</h3>\r\n          <p\r\n            id=\"profession_p_card\"\r\n            style={{ marginTop: \"-20px\", fontFamily: \"Roboto\" }}\r\n          >\r\n            {profession}\r\n          </p>\r\n        </Box>\r\n        <Box>\r\n          <List style={{ fontFamily: \"Roboto\" }}>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/user-feed\">\r\n                <ListItemIcon>\r\n                  <FeedIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Contact Info\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/projects\">\r\n                <ListItemIcon>\r\n                  <AccountTreeIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Projects\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/connections\">\r\n                <ListItemIcon>\r\n                  <PersonIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Connections\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/blocked\">\r\n                <ListItemIcon>\r\n                  <PersonOffIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Blocked Contacts\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/user-experience\">\r\n                <ListItemIcon>\r\n                  <WorkIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Experience\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/user-education\">\r\n                <ListItemIcon>\r\n                  <SchoolIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Education\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/user-skills\">\r\n                <ListItemIcon>\r\n                  <StarIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Skills\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          </List>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport ForumIcon from \"@mui/icons-material/Forum\";\r\nimport { Link as RouterLink, MemoryRouter as Router } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function MainNavigation() {\r\n  const history = new useHistory();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const [count, setCount] = React.useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getNotificationsCount();\r\n    const input = document.getElementById(\"search_value\");\r\n    input.addEventListener(\"keyup\", function (event) {\r\n      if (event.keyCode === 13) {\r\n        localStorage.setItem(\r\n          \"search_value\",\r\n          document.getElementById(\"search_value\").value\r\n        );\r\n        history.push(\"/search\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    handleMenuClose();\r\n    localStorage.clear();\r\n    localStorage.setItem(\"is_authenticated\", \"false\");\r\n    history.push(\"/\");\r\n    //prevent going back\r\n    window.onpopstate = function (event) {\r\n      history.go(1);\r\n    };\r\n  };\r\n\r\n  function getNotificationsCount() {\r\n    getNotificationsCountAPI()\r\n      .then((count_response) => {\r\n        setCount(count_response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getNotificationsCountAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-notifications-count\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const count_response = await response.json();\r\n    return count_response;\r\n  }\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleLogout} style={{ fontFamily: \"Roboto\" }}>\r\n        Logout\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem component={RouterLink} to=\"/messages\">\r\n        <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge>\r\n            <ForumIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n\r\n      <MenuItem component={RouterLink} to=\"/notifications\">\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label={\"show \" + count + \" new notifications\"}\r\n          color=\"inherit\"\r\n        >\r\n          <Badge badgeContent={count} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            color=\"white\"\r\n            component={RouterLink}\r\n            to=\"/user-feed\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n              maxWidth: \"900px\",\r\n              fontFamily: \"Roboto\",\r\n            }}\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            Todo Tasks\r\n          </Typography>\r\n          <Search style={{ width: \"300px\" }} id=\"search_area\">\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Search By Profession...\"\r\n              id=\"search_value\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </Search>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              color=\"inherit\"\r\n              component={RouterLink}\r\n              to=\"/messages\"\r\n            >\r\n              <Badge>\r\n                <ForumIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label={\"show \" + count + \" new notifications\"}\r\n              color=\"inherit\"\r\n              component={RouterLink}\r\n              to=\"/notifications\"\r\n            >\r\n              <Badge badgeContent={count} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\nimport ClassIcon from \"@mui/icons-material/Class\";\r\nimport LocalPhoneIcon from \"@mui/icons-material/LocalPhone\";\r\nimport EmailIcon from \"@mui/icons-material/Email\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport Avatar from \"@mui/material/Avatar\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"1px solid #1976d2\",\r\n  borderRadius: \"35px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nfunction MainPage() {\r\n  const history = new useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [profession, setProfession] = useState(\r\n    localStorage.getItem(\"profession\")\r\n  );\r\n  const [bio, setBio] = useState(localStorage.getItem(\"bio\"));\r\n  const [phone_number, setPhoneNumber] = useState(\r\n    localStorage.getItem(\"phone_number\")\r\n  );\r\n  const email = localStorage.getItem(\"email\");\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  const handleEditBio = (e) => {\r\n    if(e.target.value==\"\" || e.target.value==\"Tell the world about yourself\" ){\r\n      setBio(\"\");\r\n      localStorage.setItem(\"bio\", \"Tell the world about yourself\");\r\n      document.getElementById(\"bio_p\").innerHTML = \"Tell the world about yourself\";\r\n    }\r\n    else{\r\n    setBio(e.target.value);\r\n    document.getElementById(\"bio_p\").innerHTML =\r\n      e.target.value;\r\n    localStorage.setItem(\"bio\", e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleEditProfession = (e) => {\r\n    if(e.target.value==\"\" || e.target.value==\"Add your profession\" ){\r\n      setProfession(\"\");\r\n      localStorage.setItem(\"profession\", \"\");\r\n      document.getElementById(\"profession_p\").innerHTML =\"Add your profession\";\r\n    }\r\n    else{\r\n      setProfession(e.target.value);\r\n      document.getElementById(\"profession_p\").innerHTML =\r\n        e.target.value;\r\n      document.getElementById(\"profession_p_card\").innerHTML =\r\n        e.target.value;\r\n      localStorage.setItem(\"profession\", e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleEditPhoneNumber = (e) => {\r\n    if(e.target.value==\"\" || e.target.value==\"Add your phone number\" ){\r\n      setPhoneNumber(\"\");\r\n      localStorage.setItem(\"phone_number\", \"Add your phone number\");\r\n      document.getElementById(\"phone_p\").innerHTML = \"Add your phone number\";\r\n    }\r\n    else{\r\n      setPhoneNumber(e.target.value);\r\n      document.getElementById(\"phone_p\").innerHTML =\r\n      e.target.value;\r\n      localStorage.setItem(\"phone_number\", e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    handleClose();\r\n    editProfile();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    if(localStorage.getItem(\"bio\")==\"null\"){\r\n      setBio(\"Tell The world about yourself\");\r\n    }\r\n    else{\r\n      setBio(localStorage.getItem(\"bio\"));\r\n    }\r\n    if(localStorage.getItem(\"phone_number\")==\"null\"){\r\n      setPhoneNumber(\"Add your phone number\");\r\n    }\r\n    else{\r\n      setPhoneNumber(localStorage.getItem(\"phone_number\"))\r\n    }\r\n    if(localStorage.getItem(\"bio\")==\"null\"){\r\n      setProfession(\"Add your profession\");\r\n    }\r\n    else{\r\n      setProfession(localStorage.getItem(\"profession\"));\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function editProfile() {\r\n    editProfileAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function editProfileAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/edit-profile\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        'bio': bio,\r\n        'profession': profession,\r\n        'phone_number': phone_number,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const edit_response = await response.json();\r\n    return edit_response;\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Contact Info\r\n                </Typography>\r\n                <IconButton\r\n                  onClick={handleOpen}\r\n                  color=\"primary\"\r\n                  aria-label=\"Edit\"\r\n                  component=\"span\"\r\n                  sx={{ alignSelf: \"center\" }}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n              </Box>\r\n              <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n                <Box sx={style} noValidate autoComplete=\"off\">\r\n                  <form onSubmit={handleEdit}>\r\n                  <Typography id=\"title\" variant=\"h6\">\r\n                    Edit Info\r\n                  </Typography>\r\n                  <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                    <TextField\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      id=\"profession\"\r\n                      label=\"Profession\"\r\n                      variant=\"outlined\"\r\n                      value={profession}\r\n                      onChange={handleEditProfession}\r\n                    ></TextField>\r\n                    <TextField\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      id=\"phone_number\"\r\n                      label=\"Phone Number\"\r\n                      variant=\"outlined\"\r\n                      value={phone_number}\r\n                      onChange={handleEditPhoneNumber}\r\n                    ></TextField>\r\n                    <TextField\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      id=\"bio\"\r\n                      label=\"Bio\"\r\n                      variant=\"outlined\"\r\n                      value={bio}\r\n                      multiline\r\n                      onChange={handleEditBio}\r\n                    ></TextField>\r\n                    <Button\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      variant=\"contained\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Box>\r\n                  </form>\r\n                </Box>\r\n              </Modal>\r\n              <Stack direction=\"column\" spacing={2}>\r\n                <Card\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <CardHeader\r\n                    sx={{ flex: \"5\" }}\r\n                    avatar={\r\n                      <Avatar\r\n                        sx={{ bgcolor: \"primary.dark\" }}\r\n                        aria-label=\"Bio\"\r\n                      >\r\n                        <InfoIcon />\r\n                      </Avatar>\r\n                    }\r\n                    title={\r\n                      <Typography>\r\n                        <h3>Bio</h3>\r\n                        <p\r\n                          id=\"bio_p\"\r\n                          style={{ marginTop: \"-20px\", fontFamily: \"roboto\" }}\r\n                        >\r\n                          {bio}\r\n                        </p>\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </Card>\r\n                <Card\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <CardHeader\r\n                    sx={{ flex: \"5\" }}\r\n                    avatar={\r\n                      <Avatar\r\n                        sx={{ bgcolor: \"primary.dark\" }}\r\n                        aria-label=\"Profession\"\r\n                      >\r\n                        <ClassIcon />\r\n                      </Avatar>\r\n                    }\r\n                    title={\r\n                      <Typography>\r\n                        <h3>Profession</h3>\r\n                        <p\r\n                          id=\"profession_p\"\r\n                          style={{ marginTop: \"-20px\", fontFamily: \"Roboto\" }}\r\n                        >\r\n                          {profession}\r\n                        </p>\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </Card>\r\n                <Card\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <CardHeader\r\n                    sx={{ flex: \"5\" }}\r\n                    avatar={\r\n                      <Avatar\r\n                        sx={{ bgcolor: \"primary.dark\" }}\r\n                        aria-label=\"E-mail Address\"\r\n                      >\r\n                        <EmailIcon />\r\n                      </Avatar>\r\n                    }\r\n                    title={\r\n                      <Typography>\r\n                        <h3>E-mail Address</h3>\r\n                        <p style={{ marginTop: \"-20px\", fontFamily: \"roboto\" }}>\r\n                          {email}\r\n                        </p>\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </Card>\r\n                <Card\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <CardHeader\r\n                    sx={{ flex: \"5\" }}\r\n                    avatar={\r\n                      <Avatar\r\n                        sx={{ bgcolor: \"primary.dark\" }}\r\n                        aria-label=\"Phone Number\"\r\n                      >\r\n                        <LocalPhoneIcon />\r\n                      </Avatar>\r\n                    }\r\n                    title={\r\n                      <Typography>\r\n                        <h3>Phone Number</h3>\r\n                        <p\r\n                          id=\"phone_p\"\r\n                          style={{ marginTop: \"-20px\", fontFamily: \"roboto\" }}\r\n                        >\r\n                          {phone_number}\r\n                        </p>\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </Card>\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      username={pendingRequest.info.username}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                      profession={pendingRequest.info.profession}\r\n                      email={pendingRequest.info.email}\r\n                      bio={pendingRequest.info.bio}\r\n                      phone_number={pendingRequest.info.phone_number}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import * as React from \"react\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Button from \"@mui/material/Button\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Pusher from \"pusher-js\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction MessagesPage() {\r\n  const history = new useHistory();\r\n  const username = localStorage.getItem(\"full_name\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  let allMessages = [];\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n\r\n    Pusher.logToConsole = true;\r\n\r\n    const pusher = new Pusher(\"88b8b9f2f7269cc451cd\", {\r\n      cluster: \"ap2\",\r\n    });\r\n\r\n    const channel = pusher.subscribe(\"my-channel\");\r\n    channel.bind(\"message\", function (data) {\r\n      allMessages.push(data);\r\n      setMessages(allMessages);\r\n    });\r\n  }, []);\r\n\r\n  const submit = async (e) => {\r\n    const authorization = localStorage.getItem(\"token\");\r\n    console.log(username);\r\n    console.log(message);\r\n    await fetch(\"https://todotasks.tk/api/auth/message\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        username: username,\r\n        message: message,\r\n      }),\r\n    });\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          lg={9}\r\n          style={{ position: \"relative\", height: \"680px\" }}\r\n        >\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Chit Chat\r\n                </Typography>\r\n              </Box>\r\n              <div\r\n                id=\"messages_div\"\r\n                style={{\r\n                  height: \"580px\",\r\n                  overflow: \"auto\",\r\n                  background: \"#fff\",\r\n                }}\r\n              >\r\n                {messages.map((message) => {\r\n                  return (\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: \"#1976d2\",\r\n                        inlineSize: \"70%\",\r\n                        height: \"wrap-content\",\r\n                        borderRadius: \"5px\",\r\n                        marginTop: \"10px\",\r\n                        marginLeft: \"30px\",\r\n                        color: \"white\",\r\n                        fontFamily: \"Roboto\",\r\n                      }}\r\n                    >\r\n                      <h4\r\n                        style={{\r\n                          paddingLeft: \"10px\",\r\n                          paddingTop: \"5px\",\r\n                          color: \"#000\",\r\n                        }}\r\n                      >\r\n                        {message.username}\r\n                      </h4>\r\n                      <p style={{ paddingLeft: \"15px\" }}>{message.message}</p>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  bottom: \"0px\",\r\n                  paddingBottom: \"15px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  width: \"95%\",\r\n                  alignItems: \"center\",\r\n                  gap: \"10px\",\r\n                  height: \"60px\",\r\n                  backgroundColor: \"#ffffff\",\r\n                }}\r\n              >\r\n                <TextField\r\n                  id=\"outlined-multiline-flexible\"\r\n                  label=\"Send a message\"\r\n                  variant=\"standard\"\r\n                  value={message}\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                  style={{ width: \"89%\", marginRight: \"120px\", left: \"10px\" }}\r\n                />\r\n\r\n                <Button\r\n                  onClick={submit}\r\n                  variant=\"contained\"\r\n                  endIcon={<SendIcon />}\r\n                  style={{\r\n                    flex: \"1\",\r\n                    height: \"40px\",\r\n                    position: \"absolute\",\r\n                    right: \"25px\",\r\n                    width: \"10%\",\r\n                    marginLeft: \"5px\",\r\n                  }}\r\n                >\r\n                  Send\r\n                </Button>\r\n              </div>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessagesPage;\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\n\r\nexport default function Notification(props) {\r\n  const handleDelete = () => {\r\n    deleteNotification();\r\n    document.getElementById(props.id).style.display = \"none\";\r\n  };\r\n\r\n  function deleteNotification() {\r\n    deleteNotificationAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function deleteNotificationAPI() {\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/delete-notification\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          notification_id: id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const delete_response = await response.json();\r\n    return delete_response;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"notification\">\r\n            <NotificationsIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <p>{props.text}</p>\r\n          </Typography>\r\n        }\r\n      />\r\n      <Stack sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <IconButton\r\n          color=\"error\"\r\n          onClick={handleDelete}\r\n          aria-label=\"Delete\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Notification from \"../Components/Notification\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction NotificationsPage() {\r\n  const history = new useHistory();\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getUserNotifications();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserNotifications() {\r\n    getUserNotificationsAPI()\r\n      .then((notifications_response) => {\r\n        setNotifications(notifications_response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  async function getUserNotificationsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-notifications\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const notifications_response = await response.json();\r\n    return notifications_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container>\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Notifications\r\n                </Typography>\r\n              </Box>\r\n              <Stack direction=\"column\" spacing={2}>\r\n                {notifications.map((notification) => (\r\n                  <Notification\r\n                    id={notification.id}\r\n                    text={notification.text}\r\n                  ></Notification>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      username={pendingRequest.info.username}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                      profession={pendingRequest.info.profession}\r\n                      email={pendingRequest.info.email}\r\n                      bio={pendingRequest.info.bio}\r\n                      phone_number={pendingRequest.info.phone_number}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotificationsPage;\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\n\r\nexport default function UserComment(props) {\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ marginTop: \"10px\", fontFamily: \"Roboto\", fontSize: \"15pt\" }}\r\n    >\r\n      <CardHeader\r\n        avatar={<Avatar aria-label=\"profile picture\" src={props.picture}></Avatar>}\r\n        title={\r\n          <Typography\r\n            style={{\r\n              fontFamily: \"Roboto\",\r\n              fontSize: \"16pt\",\r\n              marginTop: \"-35px\",\r\n            }}\r\n          >\r\n            {props.name}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardContent>\r\n        <Typography\r\n          style={{\r\n            paddingLeft: \"60px\",\r\n            marginTop: \"-40px\",\r\n            fontFamily: \"Roboto\",\r\n            fontSize: \"12pt\",\r\n          }}\r\n        >\r\n          {props.text}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport AccountTreeIcon from \"@mui/icons-material/AccountTree\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\nimport UserComment from \"./UserComment\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -45%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"1px solid #1976d2\",\r\n  borderRadius: \"35px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function Project(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProjectComments();\r\n  }, []);\r\n\r\n  const handleAddComment = () => {\r\n    addComment();\r\n    document.getElementById(\"comment_text\").value = \"\";\r\n  };\r\n\r\n  const handleMarkAsDone = () => {\r\n    markAsDone();\r\n  };\r\n\r\n  //mark as done\r\n  function markAsDone() {\r\n    markAsDoneAPI()\r\n      .then(() => {\r\n        document.getElementById(\"project_\" + props.id).style.display = \"none\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function markAsDoneAPI() {\r\n    const project_id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/mark-done\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        project_id: project_id,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const markAsDone_response = await response.json();\r\n    return markAsDone_response;\r\n  }\r\n\r\n  //get project comments\r\n  function getProjectComments() {\r\n    getProjectCommentsAPI()\r\n      .then((comments_response) => {\r\n        setComments(comments_response.comments);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getProjectCommentsAPI() {\r\n    const project_id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-project-comments\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          project_id: project_id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const comments_response = await response.json();\r\n    return comments_response;\r\n  }\r\n\r\n  //add a comment\r\n  function addComment() {\r\n    addCommentAPI()\r\n      .then(() => {\r\n        getProjectComments();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function addCommentAPI() {\r\n    const project_id = props.id;\r\n    const comment_text = document.getElementById(\"comment_text\").value;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/add-project-comment\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          project_id: project_id,\r\n          comment_text: comment_text,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const add_response = await response.json();\r\n    return add_response;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      id={\"project_\" + props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"Project\">\r\n            <AccountTreeIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <p>{props.title}</p>\r\n            <p>\r\n              Due on {props.due_date} for {props.amount} USD\r\n            </p>\r\n          </Typography>\r\n        }\r\n      />\r\n      <Stack sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <IconButton\r\n          onClick={handleOpen}\r\n          style={{ color: \"#1976d2\" }}\r\n          aria-label=\"Show details\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <InfoIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleMarkAsDone}\r\n          style={{ color: \"#1976d2\" }}\r\n          aria-label=\"Mark as done\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <CheckIcon />\r\n        </IconButton>\r\n      </Stack>\r\n      <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n        <Box component=\"form\" sx={style} noValidate autoComplete=\"off\">\r\n          <Typography id=\"title\" variant=\"h6\">\r\n            Project Details\r\n          </Typography>\r\n          <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <Typography>\r\n              <p style={{ fontFamily: \"Roboto\" }}>{props.title}</p>\r\n              <p style={{ fontFamily: \"Roboto\" }}>\r\n                Due on {props.due_date} for {props.amount} USD\r\n              </p>\r\n            </Typography>\r\n          </Box>\r\n          <Typography id=\"title\" variant=\"h6\">\r\n            Discussion\r\n          </Typography>\r\n          <div\r\n            style={{\r\n              overflow: \"scroll\",\r\n              height: \"300px\",\r\n              fontFamily: \"Roboto\",\r\n            }}\r\n          >\r\n            {comments.map((comment) => (\r\n              <UserComment\r\n                picture={comment.picture[0].picture_url}\r\n                name={comment.user.first_name + \" \" + comment.user.last_name}\r\n                text={comment.comment}\r\n              ></UserComment>\r\n            ))}\r\n          </div>\r\n          <Box sx={{ display: \"flex\", direction: \"row\", paddingTop: \"5px\" }}>\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              id=\"comment_text\"\r\n              label=\"Type your comment\"\r\n              variant=\"standard\"\r\n              sx={{ flex: \"3\" }}\r\n            />\r\n            <Button variant=\"contained\" onClick={handleAddComment}>\r\n              Post\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Project from \"../Components/Project\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport { useHistory } from \"react-router\";\r\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\r\nimport DateAdapter from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"1px solid #1976d2\",\r\n  borderRadius: \"35px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nfunction ProjectsPage() {\r\n  const history = new useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [freelancers, setFreelancers] = useState([]);\r\n  const [freelancerId, setFreelancerId] = useState(\"\");\r\n  const [date, setDate] = useState(formatDate(new Date()));\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getFreelancers();\r\n    getProjects();\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    setFreelancerId(event.target.value);\r\n  };\r\n\r\n  function formatDate(date) {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\n\r\n  const handleDateChange = (newValue)=>{\r\n    setDate(formatDate(newValue));\r\n    console.log(date);\r\n  }\r\n\r\n  const handleSave = () => {\r\n    createProject();\r\n    getProjects();\r\n    handleClose();\r\n  };\r\n\r\n  //get freelancers\r\n  function getFreelancers() {\r\n    getFreelancersAPI()\r\n      .then((freelancers_response) => {\r\n        setFreelancers(freelancers_response.freelancers);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getFreelancersAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-followed-freelancers\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const freelancers_response = await response.json();\r\n    return freelancers_response;\r\n  }\r\n\r\n  //Create Project\r\n\r\n  function createProject() {\r\n    createProjectAPI()\r\n      .then(() => {\r\n        getProjects();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function createProjectAPI() {\r\n    const freelancer_user_id = freelancerId;\r\n    const description = document.getElementById(\"description\").value;\r\n    const price = document.getElementById(\"price\").value;\r\n    const due_date = date;\r\n    const authorization = localStorage.getItem(\"token\");\r\n    console.log(\"hello\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/create-project\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          'freelancer_user_id': freelancer_user_id,\r\n          'description': description,\r\n          'price': price,\r\n          'due_date': due_date,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const add_response = await response.json();\r\n    return add_response;\r\n  }\r\n\r\n  //get Projects\r\n  function getProjects() {\r\n    getProjectsAPI()\r\n      .then((projects_response) => {\r\n        setProjects(projects_response.projects);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getProjectsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-projects\", {\r\n      method: \"GET\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const projects_response = await response.json();\r\n    return projects_response;\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Projects\r\n                </Typography>\r\n                <IconButton\r\n                  onClick={handleOpen}\r\n                  color=\"primary\"\r\n                  aria-label=\"Edit\"\r\n                  component=\"span\"\r\n                >\r\n                  <AddCircleIcon />\r\n                </IconButton>\r\n              </Box>\r\n              <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n                <Box sx={style} noValidate autoComplete=\"off\">\r\n                  <form onSubmit={handleSave}>\r\n                  <Typography id=\"title\" variant=\"h6\">\r\n                    Start Project\r\n                  </Typography>\r\n                  <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                  <LocalizationProvider dateAdapter={DateAdapter}>\r\n                    <InputLabel\r\n                      id=\"demo-simple-select-label\"\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Select a Followed Freelancer\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      required\r\n                      value={freelancerId}\r\n                      onChange={handleChange}\r\n                    >\r\n                      {freelancers.map((freelancer) => (\r\n                        <MenuItem value={freelancer.info.id}>\r\n                          {freelancer.info.first_name +\r\n                            \" \" +\r\n                            freelancer.info.last_name}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                    <InputLabel\r\n                      id=\"demo-simple-select-label\"\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Description\r\n                    </InputLabel>\r\n                    <TextField\r\n                      id=\"description\"\r\n                      required\r\n                      multiline\r\n                      variant=\"outlined\"\r\n                      placeholder=\"Describe your project here\"\r\n                    ></TextField>\r\n                    <InputLabel\r\n                      id=\"demo-simple-select-label\"\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Price\r\n                    </InputLabel>\r\n                    <TextField\r\n                      id=\"price\"\r\n                      variant=\"outlined\"\r\n                      required\r\n                      placeholder=\"Amount in USD\"\r\n                    ></TextField>\r\n                    <InputLabel\r\n                      id=\"demo-simple-select-label\"\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Due Date\r\n                    </InputLabel>\r\n                    \r\n                    <DesktopDatePicker\r\n                    id=\"due_date\"\r\n                    value={date}\r\n                    onChange={handleDateChange}\r\n                    minDate={new Date()}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                    />\r\n                    <Button\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      variant=\"contained\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    </LocalizationProvider>\r\n                  </Box>\r\n                  </form>\r\n                </Box>\r\n              </Modal>\r\n              <Stack direction=\"column\" spacing={2}>\r\n                {projects.map((project) => (\r\n                  <Project\r\n                    id={project.id}\r\n                    amount={project.price}\r\n                    title={project.description}\r\n                    due_date={project.due_date}\r\n                  ></Project>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      username={pendingRequest.info.username}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                      profession={pendingRequest.info.profession}\r\n                      email={pendingRequest.info.email}\r\n                      bio={pendingRequest.info.bio}\r\n                      phone_number={pendingRequest.info.phone_number}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    sx={{ mt: 4, mb: 2 }}\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectsPage;\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { useState } from \"react\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"1px solid #1976d2\",\r\n  borderRadius: \"35px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function UserSkill(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [title, setTitle] = useState(props.title);\r\n\r\n  const handleEditTitle = () =>\r\n    setTitle(document.getElementById(\"skill_title\").value);\r\n  const handleDelete = () => {\r\n    deleteSkill();\r\n    document.getElementById(props.id).style.display = \"none\";\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    updateSkill();\r\n    handleClose();\r\n  };\r\n\r\n  function updateSkill() {\r\n    updateSkillAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function updateSkillAPI() {\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n    \r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/update-skill\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        skill_id: id,\r\n        title: title,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const update_response = await response.json();\r\n    return update_response;\r\n  }\r\n\r\n  function deleteSkill() {\r\n    deleteSkillAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function deleteSkillAPI() {\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/delete-skill\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        skill_id: id,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const delete_response = await response.json();\r\n    return delete_response;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"Skill\">\r\n            <StarIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <h4>\r\n            {title}\r\n            </h4>\r\n          </Typography>\r\n        }\r\n      />\r\n      <Stack sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <IconButton\r\n          onClick={handleOpen}\r\n          style={{ color: \"#1976d2\" }}\r\n          aria-label=\"Edit\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleDelete}\r\n          color=\"error\"\r\n          aria-label=\"Delete\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Stack>\r\n      <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n        <Box sx={style} noValidate autoComplete=\"off\">\r\n          <form onSubmit={handleUpdate}>\r\n          <Typography id=\"title\" variant=\"h6\">\r\n            Edit Skill\r\n          </Typography>\r\n          <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <TextField\r\n              sx={{ marginTop: \"15px\" }}\r\n              id=\"skill_title\"\r\n              label=\"Skill\"\r\n              required\r\n              variant=\"outlined\"\r\n              placeholder=\"Write your skill\"\r\n              value={title}\r\n              onChange={handleEditTitle}\r\n              inputProps = {{ minLength: \"3\"}}\r\n            ></TextField>\r\n            <Button\r\n              sx={{ marginTop: \"15px\" }}\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n          </Box>\r\n          </form>\r\n        </Box>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport UserSkill from \"../Components/UserSkill\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"1px solid #1976d2\",\r\n  borderRadius: \"35px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nfunction SkillsPage() {\r\n  const history = new useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [skills, setSkills] = useState([]);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getUserSkills();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserSkills() {\r\n    getUserSkillsAPI()\r\n      .then((skills_response) => {\r\n        setSkills(skills_response.skills);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getUserSkillsAPI() {\r\n    const user_id = localStorage.getItem(\"id\");\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-user-skills\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user_id: user_id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const skills_response = await response.json();\r\n    return skills_response;\r\n  }\r\n\r\n  function addSkill() {\r\n    addSkillAPI()\r\n      .then(() => {\r\n        getUserSkills();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function addSkillAPI() {\r\n    const skill_title = document.getElementById(\"skill_title\").value;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/add-skill\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        title: skill_title,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const update_response = await response.json();\r\n    return update_response;\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  const handleSave = () => {\r\n    addSkill();\r\n    getUserSkills();\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Skills\r\n                </Typography>\r\n                <IconButton\r\n                  onClick={handleOpen}\r\n                  color=\"primary\"\r\n                  aria-label=\"Edit\"\r\n                  component=\"span\"\r\n                  sx={{ alignSelf: \"center\" }}\r\n                >\r\n                  <AddCircleIcon />\r\n                </IconButton>\r\n              </Box>\r\n              <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n                <Box sx={style} noValidate autoComplete=\"off\">\r\n                  <form onSubmit={handleSave}>\r\n                  <Typography id=\"title\" variant=\"h6\">\r\n                    Add Skill\r\n                  </Typography>\r\n                  <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                    <TextField\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      id=\"skill_title\"\r\n                      required\r\n                      label=\"Skill\"\r\n                      variant=\"outlined\"\r\n                      placeholder=\"Write your skill\"\r\n                      inputProps = {{ minLength: \"3\"}}\r\n                    ></TextField>\r\n                    <Button\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      variant=\"contained\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Box>\r\n                  </form>\r\n                </Box>\r\n              </Modal>\r\n              <Stack id=\"skills\" direction=\"column\" spacing={2}>\r\n                {skills.map((skill) => (\r\n                  <UserSkill id={skill.id} title={skill.title}></UserSkill>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SkillsPage;\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"1px solid #1976d2\",\r\n  borderRadius: \"35px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function UserEducation(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [degree, setDegree] = useState(props.degree);\r\n  const [university, setUniversity] = useState(props.university);\r\n  const [major, setMajor] = useState(props.major);\r\n  const [year, setYear] = useState(props.year);\r\n  const [years, setYears] = useState([]);\r\n\r\n  const handleEditDegree = (e) => {\r\n    setDegree(e.target.value);\r\n  }\r\n  const handleEditMajor = (e) => {\r\n    setMajor(e.target.value);\r\n  }\r\n  const handleEditUniversity = (e) => {\r\n    setUniversity(e.target.value);\r\n  }\r\n  const handleEditYear = (e) => {\r\n    setYear(e.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    populateYears();\r\n  },[]);\r\n\r\n  const handleDelete = () => {\r\n    deleteEducation();\r\n    document.getElementById(props.id).style.display = \"none\";\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    updateEducation();\r\n    handleClose();\r\n  };\r\n\r\n  function updateEducation() {\r\n    updateEducationAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  const populateYears = () => {\r\n    const today = new Date();\r\n    const max_year = today.getFullYear();\r\n\r\n    const years_select = [];\r\n\r\n\r\n    for (var i = 1990 ; i <= max_year; i++){\r\n       years_select[i] = i;\r\n    }\r\n    setYears(years_select);\r\n\r\n  }\r\n\r\n  async function updateEducationAPI() {\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/update-education\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          education_id: id,\r\n          degree: degree,\r\n          major: major,\r\n          university: university,\r\n          year: year,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const update_response = await response.json();\r\n    return update_response;\r\n  }\r\n\r\n  function deleteEducation() {\r\n    deleteEducationAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function deleteEducationAPI() {\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/delete-education\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          education_id: id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const delete_response = await response.json();\r\n    return delete_response;\r\n  }\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        style={{ fontFamily: \"Roboto\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"Education\">\r\n            <StarIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <h4>\r\n              {degree} in {major}\r\n            </h4>\r\n            <p>\r\n              {university} ({year})\r\n            </p>\r\n          </Typography>\r\n        }\r\n      />\r\n      <Stack sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <IconButton\r\n          style={{ color: \"#1976d2\" }}\r\n          onClick={handleOpen}\r\n          aria-label=\"Edit\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"error\"\r\n          onClick={handleDelete}\r\n          aria-label=\"Delete\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Stack>\r\n      <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n                <Box sx={style} noValidate autoComplete=\"off\">\r\n                  <form onSubmit={handleUpdate}>\r\n                  <Typography id=\"title\" variant=\"h6\">\r\n                    Edit Education\r\n                  </Typography>\r\n                  <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                    <InputLabel\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Degree\r\n                    </InputLabel>\r\n                    <Select\r\n                      id=\"degree\"\r\n                      required\r\n                      value={degree}\r\n                      onChange={handleEditDegree}\r\n                    >                      \r\n                        <MenuItem value=\"Associate Degree\">\r\n                          Associate Degree\r\n                        </MenuItem>\r\n                        <MenuItem value=\"Bachelor's Degree\">\r\n                          Bachelor's Degree\r\n                        </MenuItem>\r\n                        <MenuItem value=\"Master's Degree\">\r\n                          Master's Degree\r\n                        </MenuItem>\r\n                        <MenuItem value=\"Doctoral Degree\">\r\n                          Doctoral Degree\r\n                        </MenuItem>\r\n                    </Select>\r\n                    <InputLabel\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Major\r\n                    </InputLabel>\r\n                    <TextField\r\n                      id=\"major\"\r\n                      required\r\n                      value={major}\r\n                      onChange={handleEditMajor}\r\n                      variant=\"outlined\"\r\n                    ></TextField>\r\n                    <InputLabel\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      University\r\n                    </InputLabel>\r\n                    <TextField\r\n                      id=\"university\"\r\n                      required\r\n                      value={university}\r\n                      onChange={handleEditUniversity}\r\n                      variant=\"outlined\"\r\n                    ></TextField>\r\n                    <InputLabel\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Graduation Year\r\n                    </InputLabel>\r\n                    <Select\r\n                      id=\"year\"\r\n                      required\r\n                      value={year}\r\n                      onChange={handleEditYear}\r\n                    >\r\n                      {years.map((year) => (\r\n                        <MenuItem value={year}\r\n                        >{year}</MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                    <Button\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      variant=\"contained\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Box>\r\n                  </form>\r\n                </Box>\r\n              </Modal>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport UserEducation from \"../Components/UserEducation\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -45%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"1px solid #1976d2\",\r\n  borderRadius: \"35px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function EducationPage() {\r\n  const history = new useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [degree, setDegree] = useState(\"\");\r\n  const [years, setYears] = useState([]);\r\n  const [year, setYear] = useState(\"\");\r\n\r\n  const [educations, setEducations] = useState([]);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getUserEdcuation();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    populateYears();\r\n  }, []);\r\n\r\n  const populateYears = () => {\r\n    const today = new Date();\r\n    const max_year = today.getFullYear();\r\n\r\n    const years_select = [];\r\n\r\n\r\n    for (var i = 1990 ; i <= max_year; i++){\r\n       years_select[i] = i;\r\n    }\r\n    setYears(years_select);\r\n\r\n  }\r\n\r\n  function getUserEdcuation() {\r\n    getUserEdcuationAPI()\r\n      .then((education_response) => {\r\n        setEducations(education_response.education);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getUserEdcuationAPI() {\r\n    const user_id = localStorage.getItem(\"id\");\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/user-education\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user_id: user_id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const education_response = await response.json();\r\n    return education_response;\r\n  }\r\n\r\n  function addEducation() {\r\n    addEducationAPI()\r\n      .then(() => {\r\n        getUserEdcuation();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function addEducationAPI() {\r\n    const major = document.getElementById(\"major\").value;\r\n    const university = document.getElementById(\"university\").value;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/add-education\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          'degree': degree,\r\n          'major': major,\r\n          'university': university,\r\n          'year': year,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const add_response = await response.json();\r\n    return add_response;\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  const handleDegreeChange = (event) => {\r\n    setDegree(event.target.value);\r\n  };\r\n\r\n  const handleYearChange = (event) => {\r\n    setYear(event.target.value);\r\n  }\r\n\r\n  const handleSave = () => {\r\n    addEducation();\r\n    getUserEdcuation();\r\n    handleClose();\r\n  };\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Education\r\n                </Typography>\r\n                <IconButton\r\n                  onClick={handleOpen}\r\n                  color=\"primary\"\r\n                  aria-label=\"Add\"\r\n                  component=\"span\"\r\n                  sx={{ alignSelf: \"center\" }}\r\n                >\r\n                  <AddCircleIcon />\r\n                </IconButton>\r\n              </Box>\r\n              <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n                <Box sx={style} noValidate autoComplete=\"off\">\r\n                  <form onSubmit={handleSave}>\r\n                  <Typography id=\"title\" variant=\"h6\">\r\n                    Add Education\r\n                  </Typography>\r\n                  <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                    <InputLabel\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Degree\r\n                    </InputLabel>\r\n                    <Select\r\n                      id=\"degree\"\r\n                      required\r\n                      value={degree}\r\n                      onChange={handleDegreeChange}\r\n                    >                      \r\n                        <MenuItem value=\"Associate Degree\">\r\n                          Associate Degree\r\n                        </MenuItem>\r\n                        <MenuItem value=\"Bachelor's Degree\">\r\n                          Bachelor's Degree\r\n                        </MenuItem>\r\n                        <MenuItem value=\"Master's Degree\">\r\n                          Master's Degree\r\n                        </MenuItem>\r\n                        <MenuItem value=\"Doctoral Degree\">\r\n                          Doctoral Degree\r\n                        </MenuItem>\r\n                    </Select>\r\n                    <InputLabel\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Major\r\n                    </InputLabel>\r\n                    <TextField\r\n                      id=\"major\"\r\n                      required\r\n                      variant=\"outlined\"\r\n                    ></TextField>\r\n                    <InputLabel\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      University\r\n                    </InputLabel>\r\n                    <TextField\r\n                      id=\"university\"\r\n                      required\r\n                      variant=\"outlined\"\r\n                    ></TextField>\r\n                    <InputLabel\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Graduation Year\r\n                    </InputLabel>\r\n                    <Select\r\n                      id=\"year\"\r\n                      required\r\n                      value={year}\r\n                      onChange={handleYearChange}\r\n                    >\r\n                      {years.map((year) => (\r\n                        <MenuItem value={year}\r\n                        >{year}</MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                    <Button\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      variant=\"contained\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Box>\r\n                  </form>\r\n                </Box>\r\n              </Modal>\r\n              <Stack direction=\"column\" spacing={2}>\r\n                {educations.map((education) => (\r\n                  <UserEducation\r\n                    id={education.id}\r\n                    degree={education.degree}\r\n                    major={education.major}\r\n                    university={education.university}\r\n                    year={education.year}\r\n                  ></UserEducation>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      username={pendingRequest.info.username}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                      profession={pendingRequest.info.profession}\r\n                      email={pendingRequest.info.email}\r\n                      bio={pendingRequest.info.bio}\r\n                      phone_number={pendingRequest.info.phone_number}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport WorkIcon from \"@mui/icons-material/Work\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { useState } from \"react\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\r\nimport DateAdapter from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -45%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"1px solid #1976d2\",\r\n  borderRadius: \"35px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function UserExperience(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [position, setPosition] = useState(props.position);\r\n  const [company, setCompany] = useState(props.company);\r\n  const [start_date, setStartDate] = useState(props.start_date);\r\n  const [end_date, setEndDate] = useState(props.end_date);\r\n\r\n  const handleEditPosition = () =>\r\n    setPosition(document.getElementById(\"position\").value);\r\n  const handleEditCompany = () =>\r\n    setCompany(document.getElementById(\"company\").value);\r\n  const handleEditStartDate = (newValue) =>\r\n    setStartDate(formatNewDate(newValue));\r\n  const handleEditEndDate = (newValue) =>\r\n    setEndDate(formatNewDate(newValue));\r\n\r\n  const handleDelete = () => {\r\n    deleteExperience();\r\n    document.getElementById(props.id).style.display = \"none\";\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    updateExperience();\r\n    handleClose();\r\n  };\r\n\r\n  function updateExperience() {\r\n    updateExperienceAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  function formatDisplayDate(date) {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return [day, month, year].join('-');\r\n  }\r\n\r\n  function formatNewDate(date) {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\n\r\n  async function updateExperienceAPI() {\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/update-job\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        job_id: id,\r\n        position: position,\r\n        company: company,\r\n        start_date: start_date,\r\n        end_date: end_date,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const update_response = await response.json();\r\n    return update_response;\r\n  }\r\n\r\n  function deleteExperience() {\r\n    deleteExperienceAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function deleteExperienceAPI() {\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/delete-job\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        job_id: id,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const delete_response = await response.json();\r\n    return delete_response;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        style={{ fontFamily: \"Roboto\" }}\r\n        sx={{ flex: \"5\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"Experience\">\r\n            <WorkIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <h4>\r\n              {position} at {company}\r\n            </h4>\r\n            <p>\r\n              From {formatDisplayDate(start_date)}\r\n            </p>\r\n            <p>\r\n              Till {formatDisplayDate(end_date)}\r\n            </p>\r\n          </Typography>\r\n        }\r\n      />\r\n      <Stack sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <IconButton\r\n          onClick={handleOpen}\r\n          style={{ color: \"#1976d2\" }}\r\n          aria-label=\"Edit\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleDelete}\r\n          color=\"error\"\r\n          aria-label=\"Delete\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Stack>\r\n      <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n                <Box  sx={style} noValidate autoComplete=\"off\">\r\n                  <form onSubmit={handleUpdate}>\r\n                  <Typography id=\"title\" variant=\"h6\">\r\n                    Edit Experience\r\n                  </Typography>\r\n                  <Box sx={{ display: \"flex\", flexDirection: \"column\"}}>\r\n                  <LocalizationProvider dateAdapter={DateAdapter}>\r\n                    <InputLabel\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Position\r\n                    </InputLabel>\r\n                    <TextField\r\n                      id=\"position\"\r\n                      variant=\"outlined\"\r\n                      value={position}\r\n                      onChange={handleEditPosition}\r\n                      required\r\n                    ></TextField>\r\n                    <InputLabel\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Company\r\n                    </InputLabel>\r\n                    <TextField\r\n                      id=\"company\"\r\n                      variant=\"outlined\"\r\n                      value={company}\r\n                      onChange={handleEditCompany}\r\n                      required\r\n                    ></TextField>\r\n                    <InputLabel\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Start Date\r\n                    </InputLabel>\r\n                    <DesktopDatePicker\r\n                    id=\"start_date\"\r\n                    required\r\n                    value={start_date}\r\n                    onChange={handleEditStartDate}\r\n                    maxDate={new Date()}\r\n                    helperText=\"Please enter start date\"\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                    />\r\n                    <InputLabel\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      End Date\r\n                    </InputLabel>\r\n                    <DesktopDatePicker\r\n                    required\r\n                    id=\"end_date\"\r\n                    value={end_date}\r\n                    onChange={handleEditEndDate}\r\n                    maxDate={new Date()}\r\n                    helperText=\"Please enter end date\"\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                    />\r\n                    <Button\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      variant=\"contained\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    </LocalizationProvider>\r\n                  </Box>\r\n                  </form>\r\n                </Box>\r\n              </Modal>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport UserExperience from \"../Components/UserExperience\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useState } from \"react\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\r\nimport DateAdapter from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -45%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"1px solid #1976d2\",\r\n  borderRadius: \"35px\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nfunction ExperiencePage() {\r\n  const history = new useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [experiences, setExperiences] = useState([]);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [start_date, setStartDate] = useState(formatDate(new Date(\"11-02-2012\")));\r\n  const [end_date, setEndDate] = useState(formatDate(new Date()));\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getUserExperience();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserExperience() {\r\n    getUserExperienceAPI()\r\n      .then((experience_response) => {\r\n        setExperiences(experience_response.jobs);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getUserExperienceAPI() {\r\n    const user_id = localStorage.getItem(\"id\");\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/user-jobs\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        user_id: user_id,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const experience_response = await response.json();\r\n    return experience_response;\r\n  }\r\n\r\n  function addExperience() {\r\n    addExperienceAPI()\r\n      .then(()=>{\r\n        getUserExperience();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function addExperienceAPI() {\r\n    const position = document.getElementById(\"position\").value;\r\n    const company = document.getElementById(\"company\").value;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/add-job\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        'position': position,\r\n        'company': company,\r\n        'start_date': start_date,\r\n        'end_date': end_date,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const add_response = await response.json();\r\n    return add_response;\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  function formatDate(date) {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\n\r\n  const handleStartDateChange = (newValue)=>{\r\n    setStartDate(formatDate(newValue));\r\n  }\r\n\r\n  const handleEndDateChange = (newValue)=>{\r\n    setEndDate(formatDate(newValue));\r\n  }\r\n\r\n  const handleSave = () => {\r\n    addExperience();\r\n    getUserExperience();\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Experience\r\n                </Typography>\r\n                <IconButton\r\n                  onClick={handleOpen}\r\n                  color=\"primary\"\r\n                  aria-label=\"Add\"\r\n                  component=\"span\"\r\n                  sx={{ alignSelf: \"center\" }}\r\n                >\r\n                  <AddCircleIcon />\r\n                </IconButton>\r\n              </Box>\r\n              <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n                <Box  sx={style} noValidate autoComplete=\"off\">\r\n                  <form onSubmit={handleSave}>\r\n                  <Typography id=\"title\" variant=\"h6\">\r\n                    Add Experience\r\n                  </Typography>\r\n                  <Box sx={{ display: \"flex\", flexDirection: \"column\"}}>\r\n                  <LocalizationProvider dateAdapter={DateAdapter}>\r\n                    <InputLabel\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Position\r\n                    </InputLabel>\r\n                    <TextField\r\n                      id=\"position\"\r\n                      variant=\"outlined\"\r\n                      required\r\n                    ></TextField>\r\n                    <InputLabel\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Company\r\n                    </InputLabel>\r\n                    <TextField\r\n                      id=\"company\"\r\n                      variant=\"outlined\"\r\n                      required\r\n                    ></TextField>\r\n                    <InputLabel\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      Start Date\r\n                    </InputLabel>\r\n                    <DesktopDatePicker\r\n                    id=\"start_date\"\r\n                    required\r\n                    value={start_date}\r\n                    onChange={handleStartDateChange}\r\n                    maxDate={new Date()}\r\n                    helperText=\"Please enter start date\"\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                    />\r\n                    <InputLabel\r\n                      sx={{ marginTop: \"15px\" }}\r\n                    >\r\n                      End Date\r\n                    </InputLabel>\r\n                    <DesktopDatePicker\r\n                    required\r\n                    id=\"end_date\"\r\n                    value={end_date}\r\n                    onChange={handleEndDateChange}\r\n                    maxDate={new Date()}\r\n                    helperText=\"Please enter end date\"\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                    />\r\n                    <Button\r\n                      sx={{ marginTop: \"15px\" }}\r\n                      variant=\"contained\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    </LocalizationProvider>\r\n                  </Box>\r\n                  </form>\r\n                </Box>\r\n              </Modal>\r\n              <Stack direction=\"column\" spacing={2}>\r\n                {experiences.map((experience) => (\r\n                  <UserExperience\r\n                    id={experience.id}\r\n                    company={experience.company}\r\n                    position={experience.position}\r\n                    start_date={experience.start_date}\r\n                    end_date={experience.end_date}\r\n                  ></UserExperience>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      username={pendingRequest.info.username}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                      profession={pendingRequest.info.profession}\r\n                      email={pendingRequest.info.email}\r\n                      bio={pendingRequest.info.bio}\r\n                      phone_number={pendingRequest.info.phone_number}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExperiencePage;\r\n","export default __webpack_public_path__ + \"static/media/bg.01705941.jpg\";","import * as React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport background from \"../Images/bg.jpg\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nexport default function LoginPage() {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"true\") {\r\n      history.push(\"/projects\");\r\n    } else {\r\n      localStorage.setItem(\"is_authenticated\", \"false\");\r\n    }\r\n  }, []);\r\n\r\n  function login() {\r\n    loginAPI()\r\n      .then((login_response) => {\r\n        localStorage.setItem(\"token\", \"bearer \" + login_response.access_token);\r\n        localStorage.setItem(\"id\", login_response.user.id);\r\n        localStorage.setItem(\r\n          \"full_name\",\r\n          login_response.user.first_name + \" \" + login_response.user.last_name\r\n        );\r\n        localStorage.setItem(\"username\", login_response.user.username);\r\n        localStorage.setItem(\"email\", login_response.user.email);\r\n        localStorage.setItem(\"phone_number\", login_response.user.phone_number);\r\n        localStorage.setItem(\r\n          \"profile_picture\",\r\n          login_response.picture[0].picture_url\r\n        );\r\n        localStorage.setItem(\"profession\", login_response.user.profession);\r\n        localStorage.setItem(\"bio\", login_response.user.bio);\r\n        localStorage.setItem(\"is_authenticated\", \"true\");\r\n        history.push(\"/projects\");\r\n      })\r\n      .catch((error) => {\r\n        alert(\r\n          \"Please check your credentials!\"\r\n        );\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  async function loginAPI() {\r\n    const email = document.getElementById(\"email\").value;\r\n    const password = document.getElementById(\"password\").value;\r\n    const token = localStorage.getItem(\"device_token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/login\", {\r\n      method: \"POST\",\r\n      body: new URLSearchParams({\r\n        email: email,\r\n        password: password,\r\n        token: token,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const login_response = await response.json();\r\n    return login_response;\r\n  }\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    login();\r\n  };\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundImage: `url(${background})`, marginTop:'-20px'}}>\r\n    <center><h1 style={{fontFamily: \"Roboto\", color:'#1976d2' }}>Todo Tasks</h1></center>\r\n    <center>\r\n              <Grid item xs\r\n                md={5}\r\n                xs={12}\r\n                style={{\r\n                  border: \"1px solid #1976d2\",\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: \"35px\",\r\n                  marginTop: \"100px\",\r\n                  marginLeft: \"15px\",\r\n                  marginRight: \"15px\",\r\n                  fontFamily: \"Roboto\",\r\n                }}\r\n              >\r\n                <h1 style={{ fontFamily: \"Roboto\" }}>Login</h1>\r\n                <form onSubmit={handleLogin}>\r\n                <TextField\r\n                  required\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  placeholder=\"someone@example.com \"\r\n                  style={{ width: \"80%\", marginTop: '15px' }}\r\n                />\r\n                <TextField\r\n                  required\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  label=\"Password\"\r\n                  placeholder=\"your password\"\r\n                  style={{ width: \"80%\", marginTop: '15px' }}\r\n                  inputProps = {{ minLength: \"6\"}}\r\n                />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ width: \"80%\", marginTop: '15px' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Login\r\n                </Button>\r\n                </form>\r\n                <p>\r\n                  New to Todo Tasks?{\" \"}\r\n                  <Link component={RouterLink} to=\"/register\">\r\n                    Register\r\n                  </Link>{\" \"}\r\n                </p>\r\n              </Grid>\r\n        </center>\r\n        </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport background from \"../Images/bg.jpg\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { Link as RouterLink} from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport default function RegisterPage() {\r\n  const history = useHistory();\r\n\r\n  const [is_freelancer, setIsFreelancer] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setIsFreelancer(event.target.value);\r\n  };\r\n\r\n  function register() {\r\n    registerAPI()\r\n      .then(() => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n        alert(\r\n          \"Please choose an option in the 'Are you a freelancer?' area, if that doesn't work try another username and email\"\r\n        );\r\n      });\r\n  }\r\n\r\n  async function registerAPI() {\r\n    const first_name = document.getElementById(\"first_name\").value;\r\n    const last_name = document.getElementById(\"last_name\").value;\r\n    const username = document.getElementById(\"username\").value;\r\n    const email = document.getElementById(\"email\").value;\r\n    const password = document.getElementById(\"password\").value;\r\n    const password_confirmation = document.getElementById(\"password_confirmation\").value;\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/register\", {\r\n      method: \"POST\",\r\n      body: new URLSearchParams({\r\n        first_name: first_name,\r\n        last_name: last_name,\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n        password_confirmation: password_confirmation,\r\n        is_freelancer: is_freelancer,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const register_response = await response.json();\r\n    return register_response;\r\n  }\r\n\r\n  const handleRegistration = async (e) => {\r\n    e.preventDefault();\r\n    register();\r\n  };\r\n\r\n  return (\r\n<div style={{ height: \"120vh\", backgroundImage: `url(${background})`, marginTop:'-20px'}}>\r\n    <center><h1 style={{fontFamily: \"Roboto\", color:'#1976d2' }}>Todo Tasks</h1></center>\r\n    <center>\r\n              <Grid item xs\r\n                md={5}\r\n                xs={12}\r\n                style={{\r\n                  border: \"1px solid #1976d2\",\r\n                  backgroundColor: \"white\",\r\n                  borderRadius: \"35px\",\r\n                  marginTop: \"20px\",\r\n                  marginLeft: \"15px\",\r\n                  marginRight: \"15px\",\r\n                  marginBottom: \"20px\",\r\n                  fontFamily: \"Roboto\",\r\n                }}\r\n              >\r\n                <h1 style={{ fontFamily: \"Roboto\" }}>Registration</h1>\r\n                <form onSubmit={handleRegistration}>\r\n                <TextField\r\n                  required\r\n                  id=\"first_name\"\r\n                  type=\"text\"\r\n                  label=\"First Name\"\r\n                  placeholder=\"John\"\r\n                  sx={{ fontFamily: \"Roboto\" }}\r\n                  style={{ width: \"80%\", marginTop: '15px' }}\r\n                  inputProps = {{ minLength: \"3\"}}\r\n                />\r\n                <TextField\r\n                  required\r\n                  id=\"last_name\"\r\n                  type=\"text\"\r\n                  label=\"Last Name\"\r\n                  placeholder=\"Smith\"\r\n                  style={{ width: \"80%\", marginTop: '15px' }}\r\n                  inputProps = {{ minLength: \"3\"}}\r\n                />\r\n                <TextField\r\n                  required\r\n                  id=\"username\"\r\n                  type=\"text\"\r\n                  label=\"Username\"\r\n                  placeholder=\"john.smith\"\r\n                  style={{ width: \"80%\", marginTop: '15px' }}\r\n                  inputProps = {{ minLength: \"6\"}}\r\n                />\r\n                <TextField\r\n                  required\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  label=\"Email Address\"\r\n                  placeholder=\"someone@example.com \"\r\n                  style={{ width: \"80%\", marginTop: '15px' }}\r\n                />\r\n                <TextField\r\n                  required\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  label=\"Password\"\r\n                  placeholder=\"At least 6 characters\"\r\n                  style={{ width: \"80%\", marginTop: '15px' }}\r\n                  inputProps = {{ minLength: \"6\"}}\r\n                />\r\n                <TextField\r\n                  required\r\n                  type=\"password\"\r\n                  id=\"password_confirmation\"\r\n                  label=\"Confirm Password\"\r\n                  placeholder=\"Should match password\"\r\n                  style={{ width: \"80%\", marginTop: '15px' }}\r\n                  inputProps = {{ minLength: \"6\"}}\r\n                />\r\n                <FormControl component=\"fieldset\" style={{ width: \"80%\", marginTop: '15px' }}>\r\n                  <FormLabel component=\"legend\">\r\n                    Are you a freelancer?\r\n                  </FormLabel>\r\n                  <RadioGroup\r\n                    required\r\n                    aria-label=\"is_freelancer\"\r\n                    name=\"radio-buttons-group\"\r\n                    id=\"is_freelancer\"\r\n                    value={is_freelancer}\r\n                    onChange={handleChange}\r\n                    sx={{ display: \"flex\", flexDirection: \"row\" }}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"1\"\r\n                      control={<Radio />}\r\n                      label=\"Yes\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"0\"\r\n                      control={<Radio />}\r\n                      label=\"No\"\r\n                    />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ width: \"80%\", marginTop: '15px' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n                </form>\r\n                <p>\r\n                  Already on Todo Tasks?{\" \"}\r\n                  <Link component={RouterLink} to=\"/\">\r\n                    Login\r\n                  </Link>{\" \"}\r\n                </p>\r\n              </Grid>\r\n        </center>\r\n        </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport FeedIcon from \"@mui/icons-material/Feed\";\r\nimport WorkIcon from \"@mui/icons-material/Work\";\r\nimport SchoolIcon from \"@mui/icons-material/School\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport { Link as RouterLink, MemoryRouter as Router } from \"react-router-dom\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function UserCard() {\r\n  const [id, setId] = useState(localStorage.getItem(\"todo_tasks_user_id\"));\r\n  const [name, setName] = useState(\r\n    localStorage.getItem(\"todo_tasks_user_name\")\r\n  );\r\n  const [profession, setProfession] = useState(\r\n    localStorage.getItem(\"todo_tasks_user_profession\")\r\n  );\r\n  const [picture, setPicture] = useState(\r\n    localStorage.getItem(\"todo_tasks_user_picture\")\r\n  );\r\n\r\n  useEffect(() => {\r\n    setId(localStorage.getItem(\"todo_tasks_user_id\"));\r\n    setName(localStorage.getItem(\"todo_tasks_user_name\"));\r\n    setPicture(localStorage.getItem(\"todo_tasks_user_picture\"));\r\n    if(localStorage.getItem(\"todo_tasks_user_profession\")==\"null\"){\r\n      setProfession(\"\");\r\n    }\r\n    else{\r\n      setProfession(localStorage.getItem(\"todo_tasks_user_profession\"));\r\n    }\r\n\r\n    const isFriend = localStorage.getItem(\"is_friend\");\r\n    if (isFriend == \"true\") {\r\n      document.getElementById(\"follow_label\").style.display = \"none\";\r\n    }\r\n  }, []);\r\n\r\n  const handleFollow = () => {\r\n    sendFollowRequest();\r\n    document.getElementById(\"follow_label\").style.display = \"none\";\r\n  };\r\n\r\n  function sendFollowRequest() {\r\n    sendFollowRequestAPI()\r\n      .then()\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function sendFollowRequestAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/send-follow-request\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user2_id: id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const add_response = await response.json();\r\n    return add_response;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment style={{ width: \"80%\" }}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"sm\" lg={{ marginLeft: \"20px\", marginRight: \"20px\" }}>\r\n        <Box sx={{ bgcolor: \"#1976d2\", height: \"100px\" }}>\r\n          <center>\r\n            <Avatar\r\n              src={picture}\r\n              sx={{\r\n                width: \"100px\",\r\n                height: \"100px\",\r\n                bottom: \"-50px\",\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              A\r\n            </Avatar>\r\n          </center>\r\n          <label\r\n            id=\"follow_label\"\r\n            htmlFor=\"follow\"\r\n            style={{ paddingLeft: \"65%\" }}\r\n          >\r\n            <IconButton\r\n              onClick={handleFollow}\r\n              color=\"primary\"\r\n              id=\"follow\"\r\n              aria-label=\"Follow\"\r\n              component=\"span\"\r\n            >\r\n              <AddCircleOutlineIcon />\r\n            </IconButton>\r\n          </label>\r\n        </Box>\r\n        <Box sx={{ paddingTop: \"40px\", textAlign: \"center\" }}>\r\n          <h3>{name}</h3>\r\n          <p style={{ marginTop: \"-20px\" }}>{profession}</p>\r\n        </Box>\r\n        <Box>\r\n          <List>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/feed\">\r\n                <ListItemIcon>\r\n                  <FeedIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Contact Info\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/experience\">\r\n                <ListItemIcon>\r\n                  <WorkIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Experience\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/education\">\r\n                <ListItemIcon>\r\n                  <SchoolIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Education\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n            <ListItem disablePadding>\r\n              <ListItemButton component={RouterLink} to=\"/skills\">\r\n                <ListItemIcon>\r\n                  <StarIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Skills\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          </List>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\n\r\nexport default function UserEducation(props) {\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"education\">\r\n            <StarIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <h4>\r\n              {props.degree} in {props.major}\r\n            </h4>\r\n            <p>\r\n              {props.university} ({props.year})\r\n            </p>\r\n          </Typography>\r\n        }\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../../Components/Suggestion\";\r\nimport Pending from \"../../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../../Components/ProfileComponents/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport UserEducation from \"../../Components/ProfileComponents/UserEducation\";\r\nimport MainNavigation from \"../../Components/Layout/MainNavigation\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction UserEducationPage() {\r\n  const history = new useHistory();\r\n  const [educations, setEducations] = useState([]);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getUserEdcuation();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserEdcuation() {\r\n    getUserEdcuationAPI()\r\n      .then((education_response) => {\r\n        setEducations(education_response.education);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getUserEdcuationAPI() {\r\n    const user_id = localStorage.getItem(\"todo_tasks_user_id\");\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/user-education\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user_id: user_id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const education_response = await response.json();\r\n    return education_response;\r\n  }\r\n\r\n  //pending Requests\r\n\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Education\r\n                </Typography>\r\n              </Box>\r\n              <Stack direction=\"column\" spacing={2}>\r\n                {educations.map((education) => (\r\n                  <UserEducation\r\n                    id={education.id}\r\n                    degree={education.degree}\r\n                    major={education.major}\r\n                    university={education.university}\r\n                    year={education.year}\r\n                  ></UserEducation>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      username={pendingRequest.info.username}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                      profession={pendingRequest.info.profession}\r\n                      email={pendingRequest.info.email}\r\n                      bio={pendingRequest.info.bio}\r\n                      phone_number={pendingRequest.info.phone_number}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEducationPage;\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\n\r\nexport default function UserSkill(props) {\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"Skill\">\r\n            <StarIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <h4>\r\n            {props.title}\r\n            </h4>\r\n          </Typography>\r\n        }\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../../Components/Suggestion\";\r\nimport Pending from \"../../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../../Components/ProfileComponents/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport UserSkill from \"../../Components/ProfileComponents/UserSkill\";\r\nimport MainNavigation from \"../../Components/Layout/MainNavigation\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction UserSkillsPage() {\r\n  const history = new useHistory();\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [skills, setSkills] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getUserSkills();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserSkills() {\r\n    getUserSkillsAPI()\r\n      .then((skills_response) => {\r\n        setSkills(skills_response.skills);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getUserSkillsAPI() {\r\n    const user_id = localStorage.getItem(\"todo_tasks_user_id\");\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-user-skills\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user_id: user_id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const skills_response = await response.json();\r\n    return skills_response;\r\n  }\r\n\r\n  //pending Requests\r\n\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Skills\r\n                </Typography>\r\n              </Box>\r\n              <Stack id=\"skills\" direction=\"column\" spacing={2}>\r\n                {skills.map((skill) => (\r\n                  <UserSkill id={skill.id} title={skill.title}></UserSkill>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      username={pendingRequest.info.username}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                      profession={pendingRequest.info.profession}\r\n                      email={pendingRequest.info.email}\r\n                      bio={pendingRequest.info.bio}\r\n                      phone_number={pendingRequest.info.phone_number}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserSkillsPage;\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../../Components/Suggestion\";\r\nimport Pending from \"../../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../../Components/ProfileComponents/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport MainNavigation from \"../../Components/Layout/MainNavigation\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\nimport LocalPhoneIcon from \"@mui/icons-material/LocalPhone\";\r\nimport EmailIcon from \"@mui/icons-material/Email\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction UserFeed() {\r\n  const history = new useHistory();\r\n  const [bio, setBio] = useState('');\r\n  const email = localStorage.getItem(\"todo_tasks_user_email\");\r\n  const [phone_number, setPhoneNumber] = useState('');\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    if(localStorage.getItem(\"todo_tasks_user_bio\")==\"null\"){\r\n      setBio(\"Not added yet\")\r\n    }\r\n    else{\r\n      setBio(localStorage.getItem(\"todo_tasks_user_bio\"));\r\n    }\r\n    if(localStorage.getItem(\"todo_tasks_user_phone_number\")==\"null\"){\r\n      setPhoneNumber(\"Not added yet\");\r\n    }\r\n    else{\r\n      setPhoneNumber(localStorage.getItem(\"todo_tasks_user_phone_number\"));\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  //pending Requests\r\n\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Contact Info\r\n                </Typography>\r\n              </Box>\r\n              <Stack direction=\"column\" spacing={2}>\r\n                <Card\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <CardHeader\r\n                    sx={{ flex: \"5\" }}\r\n                    avatar={\r\n                      <Avatar\r\n                        sx={{ bgcolor: \"primary.dark\" }}\r\n                        aria-label=\"Bio\"\r\n                      >\r\n                        <InfoIcon />\r\n                      </Avatar>\r\n                    }\r\n                    title={\r\n                      <Typography>\r\n                        <h3>Bio</h3>\r\n                        <p style={{ marginTop: \"-20px\", fontFamily: \"roboto\" }}>\r\n                          {bio}\r\n                        </p>\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </Card>\r\n                <Card\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <CardHeader\r\n                    sx={{ flex: \"5\" }}\r\n                    avatar={\r\n                      <Avatar\r\n                        sx={{ bgcolor: \"primary.dark\" }}\r\n                        aria-label=\"E-mail Address\"\r\n                      >\r\n                        <EmailIcon />\r\n                      </Avatar>\r\n                    }\r\n                    title={\r\n                      <Typography>\r\n                        <h3>E-mail Address</h3>\r\n                        <p style={{ marginTop: \"-20px\", fontFamily: \"roboto\" }}>\r\n                          {email}\r\n                        </p>\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </Card>\r\n                <Card\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <CardHeader\r\n                    sx={{ flex: \"5\" }}\r\n                    avatar={\r\n                      <Avatar\r\n                        sx={{ bgcolor: \"primary.dark\" }}\r\n                        aria-label=\"Phone Number\"\r\n                      >\r\n                        <LocalPhoneIcon />\r\n                      </Avatar>\r\n                    }\r\n                    title={\r\n                      <Typography>\r\n                        <h3>Phone Number</h3>\r\n                        <p style={{ marginTop: \"-20px\", fontFamily: \"roboto\" }}>\r\n                          {phone_number}\r\n                        </p>\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </Card>\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      username={pendingRequest.info.username}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                      profession={pendingRequest.info.profession}\r\n                      email={pendingRequest.info.email}\r\n                      bio={pendingRequest.info.bio}\r\n                      phone_number={pendingRequest.info.phone_number}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserFeed;\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport WorkIcon from \"@mui/icons-material/Work\";\r\n\r\nexport default function UserExperience(props) {\r\n\r\n  function formatDate(date) {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return [day, month, year].join('-');\r\n}\r\n\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"Experience\">\r\n            <WorkIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <h4>\r\n              {props.position} at {props.company}\r\n            </h4>\r\n            <p>\r\n              From {formatDate(props.start_date)} till {formatDate(props.end_date)}\r\n            </p>\r\n          </Typography>\r\n        }\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../../Components/Suggestion\";\r\nimport Pending from \"../../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../../Components/ProfileComponents/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport UserExperience from \"../../Components/ProfileComponents/UserExperience\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport MainNavigation from \"../../Components/Layout/MainNavigation\";\r\n\r\nfunction UserExperiencePage() {\r\n  const history = new useHistory();\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [experiences, setExperiences] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getUserExperience();\r\n  }, []);\r\n\r\n  function getUserExperience() {\r\n    getUserExperienceAPI()\r\n      .then((experience_response) => {\r\n        setExperiences(experience_response.jobs);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getUserExperienceAPI() {\r\n    const user_id = localStorage.getItem(\"todo_tasks_user_id\");\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/user-jobs\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        user_id: user_id,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const experience_response = await response.json();\r\n    return experience_response;\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Experience\r\n                </Typography>\r\n              </Box>\r\n              <Stack direction=\"column\" spacing={2}>\r\n                {experiences.map((experience) => (\r\n                  <UserExperience\r\n                    id={experience.id}\r\n                    company={experience.company}\r\n                    position={experience.position}\r\n                    start_date={experience.start_date}\r\n                    end_date={experience.end_date}\r\n                  ></UserExperience>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      username={pendingRequest.info.username}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                      profession={pendingRequest.info.profession}\r\n                      email={pendingRequest.info.email}\r\n                      bio={pendingRequest.info.bio}\r\n                      phone_number={pendingRequest.info.phone_number}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserExperiencePage;\r\n","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Stack from '@mui/material/Stack';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\r\nimport BlockIcon from '@mui/icons-material/Block';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Connection(props) {\r\n  const history = new useHistory();\r\n\r\n  const handleUnfollow = () =>{\r\n    unfollow();\r\n    document.getElementById('connection_'+props.id).style.display = \"none\";\r\n  }\r\n\r\n  const handleBlock = () => {\r\n    block();\r\n    document.getElementById('connection_'+props.id).style.display = \"none\";\r\n  }\r\n\r\n  //unfollow\r\n  function unfollow(){\r\n    unfollowAPI().then()\r\n    .catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function unfollowAPI(){\r\n  const user2_id = props.id;\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/unfollow\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user2_id': user2_id\r\n        })\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const unfollow_response = await response.json();\r\n  return unfollow_response;\r\n  }\r\n\r\n  //block\r\n  function block(){\r\n    blockAPI().then()\r\n    .catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function blockAPI(){\r\n  const user2_id = props.id;\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/block\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user2_id': user2_id\r\n        })\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const block_response = await response.json();\r\n  return block_response;\r\n  }\r\n\r\n  const handleClick = () => {\r\n    localStorage.setItem('todo_tasks_user_id', props.id);\r\n    localStorage.setItem('todo_tasks_user_name', props.name);\r\n    localStorage.setItem('todo_tasks_user_profession', props.profession);\r\n    localStorage.setItem('todo_tasks_user_picture', props.picture);\r\n    localStorage.setItem('todo_tasks_user_bio', props.bio);\r\n    localStorage.setItem('todo_tasks_user_email', props.email);\r\n    localStorage.setItem('todo_tasks_user_phone_number', props.phone_number);\r\n    localStorage.setItem('is_friend', 'true');\r\n    history.push('/feed/'+props.username);\r\n    window.location.reload();\r\n  }\r\n  \r\n\r\n  return (\r\n    <Card id={\"connection_\"+props.id} sx={{display:'flex', flexDirection:'row', paddingTop:'5px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        onClick={handleClick}\r\n        avatar={\r\n          <Avatar aria-label=\"profile picture\" src={props.picture}>\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <h4>\r\n            {props.name}\r\n            </h4>\r\n          </Typography>\r\n        }\r\n        />\r\n        <Stack sx={{display:'flex', flexDirection:'row'}}>\r\n        <IconButton onClick={handleUnfollow} color=\"error\" aria-label=\"Unfollow\" component=\"span\" sx={{flex:'1'}}>\r\n        <PersonRemoveIcon  />\r\n        </IconButton>\r\n        <IconButton onClick={handleBlock} color=\"error\"aria-label=\"Block\" component=\"span\" sx={{flex:'1'}}>\r\n        <BlockIcon />\r\n        </IconButton>\r\n        </Stack>\r\n        </Card>\r\n  );\r\n}","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport { useState } from \"react\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport { useEffect } from \"react\";\r\nimport Connection from \"../Components/Connection\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction ConnectionsPage() {\r\n  const history = new useHistory();\r\n  const [connections, setConnections] = useState([]);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getConnections();\r\n  }, []);\r\n\r\n  function getConnections() {\r\n    getConnectionsAPI()\r\n      .then((connections_response) => {\r\n        setConnections(connections_response.connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getConnectionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-connections\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const connections_response = await response.json();\r\n    return connections_response;\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Connections\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Stack id=\"connections\" direction=\"column\" spacing={2}>\r\n                {connections.map((connection) => (\r\n                  <Connection\r\n                    id={connection.info.id}\r\n                    username={connection.info.username}\r\n                    name={\r\n                      connection.info.first_name +\r\n                      \" \" +\r\n                      connection.info.last_name\r\n                    }\r\n                    picture={connection.picture[0].picture_url}\r\n                    profession={connection.info.profession}\r\n                    email={connection.info.email}\r\n                    bio={connection.info.bio}\r\n                    phone_number={connection.info.phone_number}\r\n                  ></Connection>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConnectionsPage;\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport { useState } from \"react\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction SearchResults() {\r\n  const history = new useHistory();\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getSearchResults();\r\n  }, []);\r\n\r\n  function getSearchResults() {\r\n    getSearchResultsAPI()\r\n      .then((search_response) => {\r\n        setSearchResults(search_response.search_results);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSearchResultsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n    const search_value = localStorage.getItem(\"search_value\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/search\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        search_key: search_value,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const search_response = await response.json();\r\n    return search_response;\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Search Results\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Stack id=\"connections\" direction=\"column\" spacing={2}>\r\n                {searchResults.map((result) => (\r\n                  <Suggestion\r\n                    id={result.info.id}\r\n                    username={result.info.username}\r\n                    name={result.info.first_name + \" \" + result.info.last_name}\r\n                    picture={result.picture[0].picture_url}\r\n                    profession={result.info.profession}\r\n                    email={result.info.email}\r\n                    bio={result.info.bio}\r\n                    phone_number={result.info.phone_number}\r\n                  ></Suggestion>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResults;\r\n","import firebase from \"firebase\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyCPq5sSe6IcMKCG6ocxKgw3SN0wfhn11pI\",\r\n  authDomain: \"todotasks-5c2a9.firebaseapp.com\",\r\n  projectId: \"todotasks-5c2a9\",\r\n  storageBucket: \"todotasks-5c2a9.appspot.com\",\r\n  messagingSenderId: \"813965289640\",\r\n  appId: \"1:813965289640:web:cb1401465f9479f40eba9d\",\r\n  measurementId: \"G-TEDBSBFEXQ\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport PersonRemoveIcon from \"@mui/icons-material/PersonRemove\";\r\n\r\nexport default function Blocked(props) {\r\n  const handleUnblock = () => {\r\n    unblock();\r\n  };\r\n\r\n  //unblock\r\n  function unblock() {\r\n    unblockAPI()\r\n      .then(() => {\r\n        document.getElementById(\"blocked_\" + props.id).style.display = \"none\";\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function unblockAPI() {\r\n    const user2_id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/unblock\", {\r\n      method: \"POST\",\r\n      headers: { accepts: \"application/json\", Authorization: authorization },\r\n      body: new URLSearchParams({\r\n        user2_id: user2_id,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const block_response = await response.json();\r\n    return block_response;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      id={\"blocked_\" + props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        avatar={<Avatar aria-label=\"profile pic\" src={props.picture}></Avatar>}\r\n        title={\r\n          <Typography>\r\n            <h4>\r\n              {props.name}\r\n            </h4>\r\n          </Typography>\r\n        }\r\n      />\r\n      <Stack sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <IconButton\r\n          onClick={handleUnblock}\r\n          style={{ color: \"#1976d2\" }}\r\n          aria-label=\"unblock\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <PersonRemoveIcon />\r\n        </IconButton>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport { useState } from \"react\";\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport { useEffect } from \"react\";\r\nimport Blocked from \"../Components/Blocked\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction BlockedContacts() {\r\n  const history = new useHistory();\r\n  const [blockedContacts, setBlockedContacts] = useState([]);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem(\"is_authenticated\");\r\n    if (is_authenticated === \"false\") {\r\n      history.push(\"/\");\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getBlockedContacts();\r\n  }, []);\r\n\r\n  function getBlockedContacts() {\r\n    getBlockedContactsAPI()\r\n      .then((blocked_response) => {\r\n        setBlockedContacts(blocked_response.blocked_contacts);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getBlockedContactsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-blocked-contacts\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const blocked_response = await response.json();\r\n    return blocked_response;\r\n  }\r\n\r\n  //pending Requests\r\n  function getPendingRequests() {\r\n    getPendingRequestsAPI()\r\n      .then((pending_response) => {\r\n        setPendingRequests(pending_response.pending_connections);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getPendingRequestsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-pending-requests\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const pending_response = await response.json();\r\n    return pending_response;\r\n  }\r\n\r\n  //Suggestions\r\n  function getSuggestions() {\r\n    getSuggestionsAPI()\r\n      .then((suggestions_response) => {\r\n        setSuggestions(suggestions_response.suggestions);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function getSuggestionsAPI() {\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/get-suggestions\",\r\n      {\r\n        method: \"GET\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const suggestions_response = await response.json();\r\n    return suggestions_response;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", backgroundColor: \"#f5f5f5\" }}>\r\n      <MainNavigation />\r\n      <Grid container sx={{ paddingTop: \"20px\", backgroundColor: \"#f5f5f5\" }}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n              <Box\r\n                sx={{\r\n                  height: \"30px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingBottom: \"0px\",\r\n                  marginBottom: \"15px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{ mt: 4, mb: 2 }}\r\n                  variant=\"h5\"\r\n                  color=\"black\"\r\n                  sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                >\r\n                  Blocked Contacts\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Stack id=\"connections\" direction=\"column\" spacing={2}>\r\n                {blockedContacts.map((contact) => (\r\n                  <Blocked\r\n                    id={contact.info.id}\r\n                    name={\r\n                      contact.info.first_name + \" \" + contact.info.last_name\r\n                    }\r\n                    picture={contact.picture[0].picture_url}\r\n                  ></Blocked>\r\n                ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\">\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Pending Requests\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {pendingRequests.map((pendingRequest) => (\r\n                    <Pending\r\n                      id={pendingRequest.info.id}\r\n                      name={\r\n                        pendingRequest.info.first_name +\r\n                        \" \" +\r\n                        pendingRequest.info.last_name\r\n                      }\r\n                      picture={pendingRequest.picture[0].picture_url}\r\n                    ></Pending>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid item>\r\n            <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" sx={{ paddingTop: \"15px\" }}>\r\n                <Box sx={{ height: \"30px\", marginBottom: \"15px\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    color=\"black\"\r\n                    sx={{ maxWidth: \"900px\", fontFamily: \"Roboto\" }}\r\n                  >\r\n                    Suggestions\r\n                  </Typography>\r\n                </Box>\r\n                <Stack direction=\"column\" spacing={2}>\r\n                  {suggestions.map((suggestion) => (\r\n                    <Suggestion\r\n                      id={suggestion.info.id}\r\n                      username={suggestion.info.username}\r\n                      name={\r\n                        suggestion.info.first_name +\r\n                        \" \" +\r\n                        suggestion.info.last_name\r\n                      }\r\n                      picture={suggestion.picture[0].picture_url}\r\n                      profession={suggestion.info.profession}\r\n                      email={suggestion.info.email}\r\n                      bio={suggestion.info.bio}\r\n                      phone_number={suggestion.info.phone_number}\r\n                    ></Suggestion>\r\n                  ))}\r\n                </Stack>\r\n              </Container>\r\n            </React.Fragment>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlockedContacts;\r\n","import * as React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport MainPage from \"./Pages/MainPage\";\nimport MessagesPage from \"./Pages/MessagesPage\";\nimport NotificationsPage from \"./Pages/NotificationsPage\";\nimport ProjectsPage from \"./Pages/ProjectsPage\";\nimport SkillsPage from \"./Pages/SkillsPage\";\nimport EducationPage from \"./Pages/EducationPage\";\nimport ExperiencePage from \"./Pages/ExperiencePage\";\nimport LoginPage from \"./Pages/LoginPage\";\nimport RegisterPage from \"./Pages/RegisterPage\";\nimport UserEducationPage from \"./Pages/Profile/UserEducationPage\";\nimport UserSkillsPage from \"./Pages/Profile/UserSkillsPage\";\nimport UserFeed from \"./Pages/Profile/UserFeed\";\nimport UserExperiencePage from \"./Pages/Profile/UserExperiencePage\";\nimport ConnectionsPage from \"./Pages/ConnectionsPage\";\nimport SearchResults from \"./Pages/SearchResults\";\nimport firebase from \"./firebase\";\nimport BlockedContacts from \"./Pages/BlockedContacts\";\nimport { isIOS } from \"react-device-detect\";\n\nexport default class App extends React.Component {\n  componentDidMount() {\n    if (!isIOS) {\n      const messaging = firebase.messaging();\n      if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker\n          .register(\"./firebase-messaging-sw.js\")\n          .then(function (registration) {\n            console.log(\n              \"Registration successful, scope is:\",\n              registration.scope\n            );\n            Notification.requestPermission().then(() => {\n              messaging\n                .getToken({\n                  vapidKey:\n                    \"BPeIeKcMyJbJ6ag2MRhpHdSLOUvNvhPsJp6KXIrPFXllE8LcGx3Mfsm54SwXiir8YsmY_8wWjrOwmJadR-g10l4\",\n                  serviceWorkerRegistration: registration,\n                })\n                .then((currentToken) => {\n                  if (currentToken) {\n                    console.log(\"current token for client: \", currentToken);\n                    localStorage.setItem(\"device_token\", currentToken);\n                  } else {\n                    console.log(\n                      \"No registration token available. Request permission to generate one.\"\n                    );\n                  }\n                })\n                .catch((err) => {\n                  console.log(\n                    \"An error occurred while retrieving token. \",\n                    err\n                  );\n                });\n            });\n          })\n          .catch(function (err) {\n            console.log(\"Service worker registration failed, error:\", err);\n          });\n      }\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Switch>\n          {/* Routes for personal profile */}\n          <Route path=\"/\" exact>\n            <LoginPage />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterPage />\n          </Route>\n          <Route path=\"/user-feed\">\n            <MainPage />\n          </Route>\n          <Route path=\"/connections\">\n            <ConnectionsPage />\n          </Route>\n          <Route path=\"/blocked\">\n            <BlockedContacts />\n          </Route>\n          <Route path=\"/messages\">\n            <MessagesPage />\n          </Route>\n          <Route path=\"/notifications\">\n            <NotificationsPage />\n          </Route>\n          <Route path=\"/projects\">\n            <ProjectsPage />\n          </Route>\n          <Route path=\"/user-skills\">\n            <SkillsPage />\n          </Route>\n          <Route path=\"/user-education\">\n            <EducationPage />\n          </Route>\n          <Route path=\"/user-experience\">\n            <ExperiencePage />\n          </Route>\n          <Route path=\"/search\">\n            <SearchResults />\n          </Route>\n\n          {/* Routes for showing any user profile */}\n          <Route path=\"/feed\">\n            <UserFeed />\n          </Route>\n          <Route path=\"/education\">\n            <UserEducationPage />\n          </Route>\n          <Route path=\"/skills\">\n            <UserSkillsPage />\n          </Route>\n          <Route path=\"/experience\">\n            <UserExperiencePage />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}