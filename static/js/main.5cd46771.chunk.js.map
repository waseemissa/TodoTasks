{"version":3,"sources":["Components/Suggestion.js","Components/Pending.js","Components/UserCard.js","Pages/MainPage.js","Pages/MessagesPage.js","Components/Notification.js","Pages/NotificationsPage.js","Components/UserComment.js","Components/Project.js","Pages/ProjectsPage.js","Components/UserSkill.js","Pages/SkillsPage.js","Components/UserEducation.js","Pages/EducationPage.js","Components/UserExperience.js","Pages/ExperiencePage.js","images/bg.jpg","Pages/LoginPage.js","Pages/RegisterPage.js","Components/ProfileComponents/UserCard.js","Components/ProfileComponents/UserEducation.js","Pages/Profile/UserEducationPage.js","Components/ProfileComponents/UserSkill.js","Pages/Profile/UserSkillsPage.js","Pages/Profile/UserFeed.js","Components/ProfileComponents/UserExperience.js","Pages/Profile/UserExperiencePage.js","Components/Connection.js","Pages/ConnectionsPage.js","Pages/SearchResults.js","firebase.js","Components/Blocked.js","Pages/BlockedContacts.js","App.js","index.js","Components/Layout/MainNavigation.js"],"names":["Suggestion","props","history","useHistory","a","authorization","localStorage","getItem","fetch","method","headers","body","URLSearchParams","id","response","ok","Error","json","add_response","Card","sx","display","flexDirection","paddingTop","CardHeader","onClick","setItem","name","profession","picture","bio","email","phone_number","push","username","window","location","reload","flex","style","fontFamily","avatar","Avatar","src","bgcolor","red","title","IconButton","color","component","sendFollowRequestAPI","then","console","log","catch","error","message","document","getElementById","Pending","user2_id","value","accepts","Authorization","accept_response","delete_response","hidden","Stack","direction","acceptFollowRequestAPI","deleteFollowRequestAPI","Input","styled","UserCard","useState","user_picture","setUserPicture","setSelectedImage","width","CssBaseline","Container","maxWidth","lg","marginLeft","marginRight","Box","height","bottom","position","htmlFor","paddingLeft","accept","type","onChange","e","target","files","event","fd","FormData","append","axios","post","res","data","picture_url","fileUploadHandler","textAlign","marginTop","List","ListItem","disablePadding","ListItemButton","RouterLink","to","ListItemIcon","ListItemText","primary","top","left","transform","border","borderRadius","boxShadow","p","MainPage","open","setOpen","handleClose","setProfession","setBio","setPhoneNumber","pendingRequests","setPendingRequests","suggestions","setSuggestions","edit_response","pending_response","suggestions_response","useEffect","getPendingRequestsAPI","pending_connections","getSuggestionsAPI","backgroundColor","MainNavigation","Grid","container","item","xs","md","sm","paddingBottom","marginBottom","Typography","mt","mb","variant","alignSelf","Modal","onClose","noValidate","autoComplete","TextField","label","innerHTML","Button","editProfileAPI","spacing","map","pendingRequest","info","first_name","last_name","suggestion","MessagesPage","messages","setMessages","setMessage","allMessages","Pusher","logToConsole","cluster","subscribe","bind","submit","overflow","background","inlineSize","alignItems","gap","endIcon","right","Notification","text","deleteNotificationAPI","NotificationsPage","notifications","setNotifications","notifications_response","getUserNotificationsAPI","notification","UserComment","fontSize","CardContent","Project","comments","setComments","getProjectComments","project_id","markAsDone_response","getProjectCommentsAPI","comments_response","comment_text","due_date","amount","markAsDoneAPI","comment","user","addCommentAPI","ProjectsPage","projects","setProjects","freelancers","setFreelancers","freelancerId","setFreelancerId","freelancers_response","freelancer_user_id","description","price","getProjects","getProjectsAPI","projects_response","getFreelancersAPI","InputLabel","Select","labelId","freelancer","MenuItem","placeholder","createProjectAPI","project","UserSkill","setTitle","update_response","deleteSkillAPI","skills_response","updateSkillAPI","SkillsPage","skills","setSkills","getUserSkills","getUserSkillsAPI","user_id","addSkill","addSkillAPI","skill_title","skill","UserEducation","degree","setDegree","university","setUniversity","major","setMajor","year","setYear","education_id","deleteEducationAPI","updateEducationAPI","EducationPage","educations","setEducations","getUserEdcuation","getUserEdcuationAPI","education_response","education","addEducation","addEducationAPI","UserExperience","setPosition","company","setCompany","start_date","setStartDate","end_date","setEndDate","deleteExperienceAPI","updateExperienceAPI","ExperiencePage","experiences","setExperiences","getUserExperience","getUserExperienceAPI","experience_response","jobs","addExperience","addExperienceAPI","experience","Paper","theme","typography","body2","padding","palette","secondary","LoginPage","login","loginAPI","login_response","access_token","alert","password","token","handleLogin","preventDefault","flexGrow","backgroundImage","float","margin","paddingRight","m","required","Link","RegisterPage","is_freelancer","setIsFreelancer","register","registerAPI","register_response","password_confirmation","handleRegistration","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","setId","setName","setPicture","UserEducationPage","UserSkillsPage","UserFeed","UserExperiencePage","Connection","unfollow_response","block_response","unfollowAPI","blockAPI","ConnectionsPage","connections","setConnections","connections_response","getConnectionsAPI","connection","SearchResults","searchResults","setSearchResults","search_value","search_response","getSearchResultsAPI","search_results","result","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Blocked","unblockAPI","unblock_response","BlockedContacts","blockedContacts","setBlockedContacts","blocked_response","getBlockedContactsAPI","blocked_contacts","contact","App","messaging","navigator","serviceWorker","registration","scope","requestPermission","getToken","vapidKey","serviceWorkerRegistration","currentToken","err","path","exact","React","ReactDOM","render","Search","shape","alpha","common","white","breakpoints","up","SearchIconWrapper","pointerEvents","justifyContent","StyledInputBase","InputBase","transition","transitions","create","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","count","setCount","code","setCode","getNotificationsCountAPI","count_response","addEventListener","keyCode","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","encodedString","Buffer","from","toString","JSON","stringify","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","href","URL","searchParams","get","clear","onpopstate","go","mobileMenuId","renderMobileMenu","size","badgeContent","noWrap","textDecoration","inputProps","edge"],"mappings":"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","file":"static/js/main.5cd46771.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport { red } from '@mui/material/colors';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Suggestion(props) {\r\n  const history = new useHistory();\r\n\r\n\r\n\r\n  const handleSendRequest = () =>{\r\n    sendFollowRequest();\r\n    document.getElementById('suggestion_'+props.id).style.display= \"none\";\r\n  }\r\n\r\n  const handleClick = () => {\r\n    localStorage.setItem('todo_tasks_user_id', props.id);\r\n    localStorage.setItem('todo_tasks_user_name', props.name);\r\n    localStorage.setItem('todo_tasks_user_profession', props.profession);\r\n    localStorage.setItem('todo_tasks_user_picture', props.picture);\r\n    localStorage.setItem('todo_tasks_user_bio', props.bio);\r\n    localStorage.setItem('todo_tasks_user_email', props.email);\r\n    localStorage.setItem('todo_tasks_user_phone_number', props.phone_number);\r\n    localStorage.setItem('is_friend', 'false');\r\n    history.push('/feed/'+props.username);\r\n    window.location.reload();\r\n  }\r\n\r\n\r\nfunction sendFollowRequest(){\r\n  sendFollowRequestAPI().then(add_response=>{\r\n    console.log(add_response);\r\n\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function sendFollowRequestAPI(){\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/send-follow-request\", {\r\n      method: 'POST',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n      body: new URLSearchParams({\r\n        'user2_id': props.id,\r\n      })\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst add_response = await response.json();\r\nreturn add_response;\r\n}\r\n\r\n\r\n    return (\r\n        <Card id={'suggestion_'+props.id} sx={{display:'flex', flexDirection:'row', paddingTop:'5px'}}>\r\n        <CardHeader \r\n        onClick={handleClick}\r\n        sx={{flex:'5'}}\r\n        style={{fontFamily:'Roboto'}}\r\n        avatar={\r\n          <Avatar src={props.picture} sx={{ bgcolor: red[500] }} aria-label=\"Profile Picture\">\r\n            \r\n          </Avatar>\r\n        }\r\n        title={props.name}\r\n        />\r\n        <IconButton style={{color:'#1976d2'}} aria-label=\"Follow\" component=\"span\" sx={{flex:'1'}} onClick={handleSendRequest}>\r\n        <AddCircleIcon />\r\n        </IconButton>\r\n\r\n\r\n        </Card>\r\n    );\r\n  }\r\n  ","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { red } from \"@mui/material/colors\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Pending(props) {\r\n  const history = new useHistory();\r\n\r\n\r\n  const handleApproval = () => {\r\n    acceptFollowRequest();\r\n    document.getElementById(\"pending_\" + props.id).style.display = \"none\";\r\n  };\r\n\r\n  const handleRejection = () => {\r\n    deleteFollowRequest();\r\n    document.getElementById(\"pending_\" + props.id).style.display = \"none\";\r\n  };\r\n\r\n\r\n  function acceptFollowRequest() {\r\n    acceptFollowRequestAPI()\r\n      .then((accept_response) => {\r\n        console.log(accept_response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function acceptFollowRequestAPI() {\r\n    const user1_id = localStorage.getItem(\"id\");\r\n    const user2_id = document.getElementById(\"user2_id\").value;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/accept-follow-request\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user2_id: user2_id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const accept_response = await response.json();\r\n    return accept_response;\r\n  }\r\n\r\n  function deleteFollowRequest() {\r\n    deleteFollowRequestAPI()\r\n      .then((delete_response) => {\r\n        console.log(delete_response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function deleteFollowRequestAPI() {\r\n    const user1_id = localStorage.getItem(\"id\");\r\n    const user2_id = document.getElementById(\"user2_id\").value;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/delete-follow-request\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          user2_id: user2_id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const delete_response = await response.json();\r\n    return delete_response;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      id={\"pending_\" + props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"10\" }}\r\n        style={{fontFamily:'Roboto'}}\r\n        avatar={\r\n          <Avatar\r\n            sx={{ bgcolor: red[500] }}\r\n            aria-label=\"profile_pic\"\r\n            src={props.picture}\r\n          ></Avatar>\r\n        }\r\n        title={props.name}\r\n      />\r\n      <button hidden id=\"user2_id\" value={props.id}></button>\r\n      <Stack direction=\"row\" sx={{ flex: \"1\" }}>\r\n        <IconButton\r\n          style={{color:'#1976d2'}}\r\n          aria-label=\"Approve\"\r\n          onClick={handleApproval}\r\n        >\r\n          <CheckIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"error\"\r\n          aria-label=\"Decline\"\r\n          onClick={handleRejection}\r\n        >\r\n          <CancelIcon />\r\n        </IconButton>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Divider from '@mui/material/Divider';\r\nimport Button from '@mui/material/Button';\r\nimport InboxIcon from '@mui/icons-material/Inbox';\r\nimport DraftsIcon from '@mui/icons-material/Drafts';\r\nimport AccountTreeIcon from '@mui/icons-material/AccountTree';\r\nimport FeedIcon from '@mui/icons-material/Feed';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport SchoolIcon from '@mui/icons-material/School';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport PersonOffIcon from '@mui/icons-material/PersonOff';\r\nimport { Link as RouterLink, MemoryRouter as Router } from 'react-router-dom';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst Input = styled('input')({\r\n  display: 'none',\r\n});\r\n\r\nexport default function UserCard() {\r\n\r\n\r\n  const name = localStorage.getItem('full_name');\r\n  const email = localStorage.getItem('email');\r\n  const profession = localStorage.getItem('profession');\r\n  const [user_picture, setUserPicture] = useState(localStorage.getItem('profile_picture'));\r\n  const [selectedImage, setSelectedImage] = useState([]);\r\n\r\n\r\n  const fileUploadHandler = (event) => {\r\n      let picture = event.target.files[0];\r\n      let fd = new FormData();\r\n      fd.append('picture', picture)\r\n      const authorization = localStorage.getItem('token');\r\n      console.log(picture);\r\n      axios.post('https://todotasks.tk/api/auth/upload-profile-picture',fd,\r\n       {\r\n         headers: {\r\n           Authorization: authorization,\r\n           accepts: 'application/json'\r\n         }\r\n       })\r\n      .then(res=>{\r\n       \r\n          document.getElementById('user_image').src = res.data.picture.picture_url;\r\n          localStorage.setItem('profile_picture', res.data.picture.picture_url );\r\n          setUserPicture(res.data.picture.picture_url);\r\n  })\r\n  }\r\n\r\n\r\n\r\n  \r\n  \r\n  \r\n\r\n\r\n  return (\r\n    <React.Fragment style={{width:'80%'}}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"sm\" lg={{marginLeft:'20px', marginRight:'20px'}}>\r\n        <Box sx={{ bgcolor: \"#1976d2\", height: \"100px\"}}>\r\n        <center><Avatar id=\"user_image\" src={user_picture} sx={{ width: '100px', height:'100px', bottom:'-50px', position:'relative'}}></Avatar></center>\r\n        <label htmlFor=\"profile_image\" style={{paddingLeft:'65%'}}>\r\n        <Input accept=\"image/*\" id=\"profile_image\" type=\"file\" \r\n        onChange={e => {\r\n          console.log(e.target.files[0]);\r\n          setSelectedImage(e.target.files[0]);\r\n          fileUploadHandler(e);\r\n        }} />\r\n        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n        <PhotoCamera />\r\n        </IconButton>\r\n        </label>\r\n        </Box>\r\n        <Box sx={{paddingTop: '40px', textAlign:'center'}}>\r\n        <h3 style={{fontFamily:'Roboto'}}>{name}</h3>\r\n        <p id=\"profession_p_card\" style={{marginTop: '-20px', fontFamily:'Roboto' }}>{profession}</p>\r\n        </Box>\r\n        <Box>\r\n        <List style={{fontFamily:'Roboto'}} >\r\n        <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/user-feed\">\r\n              <ListItemIcon>\r\n                <FeedIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Contact Info\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/projects\">\r\n              <ListItemIcon>\r\n                <AccountTreeIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Projects\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/connections\">\r\n              <ListItemIcon>\r\n                <PersonIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Connections\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/blocked\">\r\n              <ListItemIcon>\r\n                <PersonOffIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Blocked Contacts\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/user-experience\">\r\n              <ListItemIcon>\r\n                <WorkIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Experience\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/user-education\">\r\n              <ListItemIcon>\r\n                <SchoolIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Education\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/user-skills\">\r\n              <ListItemIcon>\r\n                <StarIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Skills\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        </List>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport MainNavigation from '../Components/Layout/MainNavigation';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport ClassIcon from '@mui/icons-material/Class';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport Modal from '@mui/material/Modal';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #1976d2',\r\n  borderRadius: '35px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\n\r\n\r\nfunction MainPage(){\r\n  const history = new useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [profession, setProfession] = useState(localStorage.getItem('profession'));\r\n  const [bio, setBio] = useState(localStorage.getItem('bio'));\r\n  const [phone_number, setPhoneNumber] = useState(localStorage.getItem('phone_number'));\r\n  const email = localStorage.getItem('email');\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  const handleEditBio = () => {\r\n    setBio(document.getElementById('bio').value);\r\n    document.getElementById('bio_p').innerHTML = document.getElementById('bio').value;\r\n    localStorage.setItem('bio', bio);\r\n  }\r\n\r\n  const handleEditProfession = () => {\r\n    setProfession(document.getElementById('profession').value);\r\n    document.getElementById('profession_p').innerHTML = document.getElementById('profession').value;\r\n    document.getElementById('profession_p_card').innerHTML = document.getElementById('profession').value;\r\n    localStorage.setItem('profession', profession);\r\n  }\r\n\r\n  const handleEditPhoneNumber = () => {\r\n    setPhoneNumber(document.getElementById('phone_number').value);\r\n    document.getElementById('phone_p').innerHTML = document.getElementById('phone_number').value;\r\n    localStorage.setItem('phone_number', phone_number);\r\n  }\r\n\r\n  const handleEdit = ()=>{\r\n    handleClose();\r\n    editProfile();\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem('is_authenticated');\r\n    if(is_authenticated===\"false\"){\r\n      history.push('/');\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function editProfile(){\r\n    editProfileAPI().then(edit_response=>{\r\n      console.log(edit_response);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function editProfileAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/edit-profile\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'bio': bio,\r\n          'profession': profession,\r\n          'phone_number' : phone_number\r\n        })\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const edit_response = await response.json();\r\n  return edit_response;\r\n  }\r\n\r\n    //pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n        <MainNavigation />\r\n  <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n  <Grid item xs={12} md={3} sm={3}>\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} md={6} sm={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Contact Info\r\n          </Typography>\r\n          <IconButton onClick={handleOpen} color=\"primary\" aria-label=\"Edit\" component=\"span\" sx={{alignSelf:'center'}}><EditIcon /></IconButton>\r\n          </Box>\r\n          <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"title\"\r\n        >\r\n            <Box\r\n            component=\"form\"\r\n            sx={style}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            >\r\n            <Typography id=\"title\" variant=\"h6\">Edit Info</Typography>\r\n            <Box sx={{display:'flex', flexDirection:'column'}}>\r\n            <TextField sx={{marginTop:'15px'}} id=\"profession\"  label=\"Profession\" variant=\"outlined\" value={profession} onChange={handleEditProfession}></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"phone_number\"  label=\"Phone Number\" variant=\"outlined\" value={phone_number} onChange={handleEditPhoneNumber}></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"bio\"  label=\"Bio\" variant=\"outlined\" value={bio} onChange={handleEditBio}></TextField>\r\n            <Button sx={{marginTop:'15px'}} variant=\"contained\" onClick={handleEdit}>Save</Button>\r\n            </Box>\r\n            </Box>\r\n        </Modal>\r\n          <Stack direction=\"column\" spacing={2}>\r\n        <Card sx={{display:'flex', flexDirection:'row', marginTop:'10px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <InfoIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <h3>\r\n            Bio\r\n          </h3>\r\n          <p id=\"bio_p\" style={{marginTop:'-20px', fontFamily:'roboto'}}>\r\n          {bio}\r\n          </p>\r\n        </Typography>}\r\n        />\r\n        </Card>\r\n        <Card sx={{display:'flex', flexDirection:'row', marginTop:'10px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <ClassIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <h3>\r\n            Profession\r\n          </h3>\r\n          <p id=\"profession_p\" style={{marginTop:'-20px', fontFamily:'Roboto'}}>\r\n          {profession}\r\n          </p>\r\n        </Typography>}\r\n        />\r\n        </Card>\r\n        <Card sx={{display:'flex', flexDirection:'row', marginTop:'10px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <EmailIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <h3>\r\n            E-mail Address\r\n          </h3>\r\n          <p style={{marginTop:'-20px', fontFamily:'roboto'}}>\r\n          {email}\r\n          </p>\r\n        </Typography>}\r\n        />\r\n        </Card>\r\n        <Card sx={{display:'flex', flexDirection:'row', marginTop:'10px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <LocalPhoneIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <h3>\r\n            Phone Number\r\n          </h3>\r\n          <p id=\"phone_p\" style={{marginTop:'-20px', fontFamily:'roboto'}}>\r\n          {phone_number}\r\n          </p>\r\n        </Typography>}\r\n        />\r\n        </Card>\r\n        \r\n\r\n          </Stack>\r\n\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs={12} md={3} sm={3}>\r\n  <Grid item >\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} username={pendingRequest.info.username} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url} profession={pendingRequest.info.profession} email={pendingRequest.info.email} bio={pendingRequest.info.bio} phone_number={pendingRequest.info.phone_number}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default MainPage;","import * as React from 'react';\r\nimport MainNavigation from \"../Components/Layout/MainNavigation\";\r\nimport Grid from '@mui/material/Grid';\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Button from '@mui/material/Button';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Pusher from 'pusher-js';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nfunction MessagesPage(){\r\n  const history = new useHistory();\r\n  const username = localStorage.getItem('full_name');\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  let allMessages = [];\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem('is_authenticated');\r\n    if(is_authenticated===\"false\"){\r\n      history.push('/');\r\n    }\r\n\r\n    Pusher.logToConsole = true;\r\n\r\n    const pusher = new Pusher('88b8b9f2f7269cc451cd', {\r\n      cluster: 'ap2'\r\n    });\r\n\r\n    const channel = pusher.subscribe('my-channel');\r\n    channel.bind('message', function(data) {\r\n      allMessages.push(data);\r\n      setMessages(allMessages);\r\n    });\r\n  },[])\r\n\r\n  const submit = async e =>{\r\n    const authorization = localStorage.getItem('token');\r\n    console.log(username);\r\n    console.log(message);\r\n    await fetch('https://todotasks.tk/api/auth/message',{\r\n      method : 'POST',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n      body : new URLSearchParams({\r\n        'username' : username,\r\n        'message' : message\r\n      })\r\n\r\n    })\r\n    setMessage('');\r\n  }\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n            <MainNavigation />\r\n            <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n  <Grid item xs>\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} lg={9} style={{position: 'relative',height:'680px'}}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Chit Chat\r\n          </Typography>\r\n          </Box>\r\n          <div id=\"messages_div\" style={{height:'580px',overflow:'auto',background:'#fff'}}>\r\n            {messages.map(message => {\r\n              return(\r\n                <div style={{backgroundColor:'#1976d2', inlineSize: '70%', height:'wrap-content' , borderRadius:'5px', marginTop:'10px', marginLeft:'30px', color:'white', fontFamily:'Roboto'}}>\r\n                  <h4 style={{paddingLeft:'10px', paddingTop:'5px', color:'#000'}}>{message.username}</h4>\r\n                  <p style={{paddingLeft:'15px'}}>{message.message}</p>\r\n                </div>\r\n                \r\n                );\r\n            })}\r\n          \r\n            \r\n            \r\n            </div>\r\n            <div style={{position: 'absolute', bottom: '0px' , paddingBottom:'15px', display:'flex', flexDirection:'row', width:'95%',alignItems:'center', gap:'10px', height:'60px', backgroundColor:'#ffffff'}}>\r\n            <TextField\r\n          id=\"outlined-multiline-flexible\"\r\n          label=\"Send a message\"\r\n          variant=\"standard\"\r\n          value={message}\r\n          onChange={e=> setMessage(e.target.value)}\r\n          style={{ width:'89%', marginRight:'120px', left:'10px'}}\r\n        />\r\n                \r\n            \r\n            <Button onClick={submit} variant=\"contained\" endIcon={<SendIcon />} style={{flex:'1',height:'40px', position:'absolute', right:'25px', width:'10%', marginLeft:'5px'}}>\r\n                 Send\r\n                </Button>\r\n            </div>\r\n            \r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n\r\n</Grid>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MessagesPage;","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport { red } from '@mui/material/colors';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useState } from 'react';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\n\r\nexport default function Notification(props) {\r\n\r\n   const handleDelete = () => {\r\n     deleteNotification();\r\n     document.getElementById(props.id).style.display= \"none\";\r\n    }\r\n\r\n    function deleteNotification(){\r\n      deleteNotificationAPI().then(delete_response=>{\r\n        console.log(delete_response);\r\n        \r\n    }).catch(error => {\r\n      console.log(error.message);\r\n    });\r\n    \r\n    }\r\n    \r\n    \r\n    async function deleteNotificationAPI(){\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem('token');\r\n    \r\n    \r\n      const response = await fetch(\"https://todotasks.tk/api/auth/delete-notification\", {\r\n          method: 'POST',\r\n          headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n          body: new URLSearchParams({\r\n            'notification_id' : id,\r\n          })\r\n      });\r\n    \r\n      if(!response.ok){\r\n        const message = \"ERROR OCCURED\";\r\n        throw new Error(message);\r\n    }\r\n    \r\n    const delete_response = await response.json();\r\n    return delete_response;\r\n    }\r\n\r\n  return (\r\n      <Card id={props.id} sx={{display:'flex', flexDirection:'row', paddingTop:'5px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"notification\">\r\n            <NotificationsIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <p>{props.text}</p>\r\n        </Typography>}\r\n        />\r\n        <Stack sx={{display:'flex', flexDirection:'row'}}>\r\n        <IconButton color=\"error\" onClick={handleDelete} aria-label=\"Delete\" component=\"span\" sx={{flex:'1'}}>\r\n        <DeleteIcon  />\r\n        </IconButton>\r\n        </Stack>\r\n        </Card>\r\n\r\n\r\n\r\n        \r\n  );\r\n}","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Notification from \"../Components/Notification\";\r\nimport MainNavigation from '../Components/Layout/MainNavigation';\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction NotificationsPage() {\r\n  const history = new useHistory();\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  useEffect(()=>{\r\n      const is_authenticated = localStorage.getItem('is_authenticated');\r\n      if(is_authenticated===\"false\"){\r\n        history.push('/');\r\n      }\r\n      getUserNotifications();\r\n      getPendingRequests();\r\n      getSuggestions();\r\n  },[]);\r\n\r\n  function getUserNotifications(){\r\n    getUserNotificationsAPI().then(notifications_response=>{\r\n      console.log(notifications_response);\r\n      setNotifications(notifications_response);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n//pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n\r\nasync function getUserNotificationsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-notifications\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization}\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const notifications_response = await response.json();\r\n  return notifications_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n  return (\r\n    <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n      <MainNavigation />\r\n      <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n      <Grid item xs={12} md={3} sm={3}>\r\n        <UserCard></UserCard>\r\n      </Grid>\r\n      <Grid item xs={12} md={6} sm={6}>\r\n        <React.Fragment>\r\n          <CssBaseline />\r\n          <Container>\r\n          <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n                Notifications\r\n              </Typography>\r\n            </Box>\r\n            <Stack direction=\"column\" spacing={2}>\r\n            {notifications.map((notification) => (\r\n            <Notification id={notification.id} text={notification.text}></Notification>\r\n          ))}\r\n            </Stack>\r\n          </Container>\r\n        </React.Fragment>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={3} sm={3}>\r\n  <Grid item >\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} username={pendingRequest.info.username} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url} profession={pendingRequest.info.profession} email={pendingRequest.info.email} bio={pendingRequest.info.bio} phone_number={pendingRequest.info.phone_number}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n      </Grid>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotificationsPage;\r\n","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport { red } from '@mui/material/colors';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\n\r\n\r\nexport default function UserComment(props) {\r\n    return (\r\n        <Card id={props.id} sx={{marginTop:'10px', fontFamily:'Roboto', fontSize:'15pt'}}>\r\n        <CardHeader\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\" src={props.picture}>\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography style={{fontFamily:'Roboto', fontSize:'16pt', marginTop:'-35px'}}>\r\n          {props.name}\r\n          </Typography>\r\n        }\r\n        />\r\n        <CardContent>\r\n        <Typography style={{paddingLeft:'60px', marginTop:'-40px', fontFamily:'Roboto', fontSize:'12pt'}}>\r\n            {props.text}\r\n        </Typography>\r\n        </CardContent>\r\n\r\n        </Card>\r\n    );\r\n  }\r\n  ","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport AccountTreeIcon from '@mui/icons-material/AccountTree';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport UserComment from './UserComment';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #1976d2',\r\n  borderRadius: '35px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function Project(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    const [comments, setComments] = useState([]);\r\n\r\n    useEffect(() => {\r\n      getProjectComments();\r\n    },[])\r\n\r\n    const handleAddComment = () => {\r\n      addComment();\r\n      document.getElementById('comment_text').value = '';\r\n    }\r\n\r\n    const handleMarkAsDone = () => {\r\n      markAsDone();\r\n    }\r\n\r\n    //mark as done\r\n    function markAsDone(){\r\n      markAsDoneAPI().then(markAsDone_response=>{\r\n        document.getElementById('project_'+props.id).style.display = \"none\";\r\n        \r\n    }).catch(error => {\r\n      console.log(error.message);\r\n    });\r\n    \r\n    }\r\n    \r\n    \r\n    async function markAsDoneAPI(){\r\n    const project_id = props.id;\r\n    const authorization = localStorage.getItem('token');\r\n    \r\n      const response = await fetch(\"https://todotasks.tk/api/auth/mark-done\", {\r\n          method: 'POST',\r\n          headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n          body: new URLSearchParams({\r\n            'project_id': project_id,\r\n          })\r\n      });\r\n    \r\n      if(!response.ok){\r\n        const message = \"ERROR OCCURED\";\r\n        throw new Error(message);\r\n    }\r\n    \r\n    const markAsDone_response = await response.json();\r\n    return markAsDone_response;\r\n    }\r\n\r\n    //get project comments\r\n    function getProjectComments(){\r\n      getProjectCommentsAPI().then(comments_response=>{\r\n        console.log(comments_response);\r\n        setComments(comments_response.comments);\r\n        \r\n    }).catch(error => {\r\n      console.log(error.message);\r\n    });\r\n    \r\n    }\r\n    \r\n    \r\n    async function getProjectCommentsAPI(){\r\n    const project_id = props.id;\r\n    const authorization = localStorage.getItem('token');\r\n    \r\n      const response = await fetch(\"https://todotasks.tk/api/auth/get-project-comments\", {\r\n          method: 'POST',\r\n          headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n          body: new URLSearchParams({\r\n            'project_id': project_id\r\n          })\r\n      });\r\n    \r\n      if(!response.ok){\r\n        const message = \"ERROR OCCURED\";\r\n        throw new Error(message);\r\n    }\r\n    \r\n    const comments_response = await response.json();\r\n    return comments_response;\r\n    }\r\n\r\n    //add a comments\r\n    function addComment(){\r\n      addCommentAPI().then(add_response=>{\r\n        console.log(add_response);\r\n        getProjectComments();\r\n        \r\n    }).catch(error => {\r\n      console.log(error.message);\r\n    });\r\n    \r\n    }\r\n    \r\n    \r\n    async function addCommentAPI(){\r\n    const project_id = props.id;\r\n    const comment_text = document.getElementById('comment_text').value;\r\n    const authorization = localStorage.getItem('token');\r\n    \r\n      const response = await fetch(\"https://todotasks.tk/api/auth/add-project-comment\", {\r\n          method: 'POST',\r\n          headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n          body: new URLSearchParams({\r\n            'project_id': project_id,\r\n            'comment_text': comment_text\r\n          })\r\n      });\r\n    \r\n      if(!response.ok){\r\n        const message = \"ERROR OCCURED\";\r\n        throw new Error(message);\r\n    }\r\n    \r\n    const add_response = await response.json();\r\n    return add_response;\r\n    }\r\n\r\n\r\n\r\n  return (\r\n      <Card id={\"project_\" + props.id} sx={{display:'flex', flexDirection:'row', paddingTop:'5px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <AccountTreeIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <p>{props.title}</p>\r\n          <p>Due on {props.due_date} for {props.amount} USD</p>\r\n        </Typography>}\r\n        />\r\n        <Stack sx={{display:'flex', flexDirection:'row'}}>\r\n        <IconButton onClick={handleOpen} style={{color:\"#1976d2\"}} aria-label=\"Show details\" component=\"span\" sx={{flex:'1'}}>\r\n        <InfoIcon />\r\n        </IconButton>\r\n        <IconButton onClick={handleMarkAsDone} style={{color:\"#1976d2\"}} aria-label=\"Mark as done\" component=\"span\" sx={{flex:'1'}}>\r\n        <CheckIcon />\r\n        </IconButton>\r\n        </Stack>\r\n        <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"title\"\r\n        >\r\n            <Box\r\n            component=\"form\"\r\n            sx={style}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            >\r\n            <Typography id=\"title\" variant=\"h6\">Project Details</Typography>\r\n            <Box sx={{display:'flex', flexDirection:'column'}}>\r\n            <Typography>\r\n              <p style={{fontFamily:'Roboto'}}>{props.title}</p>\r\n              <p style={{fontFamily:'Roboto'}}>Due on {props.due_date} for {props.amount} USD</p>\r\n              </Typography>\r\n            </Box>\r\n            <Typography id=\"title\" variant=\"h6\">Discussion</Typography>\r\n            <div style={{ overflow: 'scroll', height:'300px', fontFamily:'Roboto'}}>\r\n            {comments.map((comment) => (\r\n            <UserComment picture={comment.picture[0].picture_url} name={comment.user.first_name+\" \"+comment.user.last_name} text={comment.comment}></UserComment>\r\n              ))}\r\n            </div>\r\n            <Box sx={{ display: 'flex', direction: 'row', paddingTop:'5px'}}>\r\n            <TextField id=\"standard-basic\" id=\"comment_text\" label=\"Type your comment\" variant=\"standard\" sx={{flex: '3'}}/>\r\n            <Button variant=\"contained\" onClick={handleAddComment} >Post</Button>\r\n            </Box>\r\n            </Box>\r\n        </Modal>\r\n        </Card>\r\n\r\n  );\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Project from '../Components/Project';\r\nimport MainNavigation from '../Components/Layout/MainNavigation';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Modal from '@mui/material/Modal';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #1976d2',\r\n  borderRadius: '35px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nfunction ProjectsPage(){\r\n  const history = new useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n  const [projects, setProjects]  = useState([]);\r\n  const [freelancers, setFreelancers] = useState([]);\r\n  const [freelancerId, setFreelancerId] = useState('');\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem('is_authenticated');\r\n    if(is_authenticated===\"false\"){\r\n      history.push('/');\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getFreelancers();\r\n    getProjects();\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    setFreelancerId(event.target.value);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    handleClose();\r\n    createProject();\r\n  }\r\n\r\n  //get freelancers\r\n\r\n  function getFreelancers(){\r\n    getFreelancersAPI().then(freelancers_response=>{\r\n      console.log(freelancers_response);\r\n      setFreelancers(freelancers_response.freelancers);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getFreelancersAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-followed-freelancers\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const freelancers_response = await response.json();\r\n  return freelancers_response;\r\n  }\r\n\r\n  //Create Project \r\n\r\n  function createProject(){\r\n    createProjectAPI().then(add_response=>{\r\n      console.log(add_response);\r\n      getProjects();\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function createProjectAPI(){\r\n  const freelancer_user_id = freelancerId;\r\n  const description = document.getElementById('description').value;\r\n  const price = document.getElementById('price').value;\r\n  const due_date = document.getElementById('due_date').value;\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/create-project\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'freelancer_user_id': freelancer_user_id,\r\n          'description': description,\r\n          'price': price,\r\n          'due_date': due_date  \r\n        })\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const add_response = await response.json();\r\n  return add_response;\r\n  }\r\n\r\n  //get Projects\r\n  function getProjects(){\r\n    getProjectsAPI().then(projects_response=>{\r\n      setProjects(projects_response.projects);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getProjectsAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-projects\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const projects_response = await response.json();\r\n  return projects_response;\r\n  }\r\n\r\n\r\n  //pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n        <MainNavigation />\r\n      \r\n  <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n  <Grid item xs={12} md={3} sm={3}>\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} sm={6} md={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Projects\r\n          </Typography>\r\n          <IconButton onClick={handleOpen} color=\"primary\" aria-label=\"Edit\" component=\"span\" ><AddCircleIcon/></IconButton>\r\n          </Box>\r\n          <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"title\"\r\n        >\r\n            <Box\r\n            component=\"form\"\r\n            sx={style}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            >\r\n            <Typography id=\"title\" variant=\"h6\">Start Project</Typography>\r\n            <Box sx={{display:'flex', flexDirection:'column'}}>\r\n            <InputLabel id=\"demo-simple-select-label\" sx={{marginTop:'15px'}}>Freelancer</InputLabel>\r\n            <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={freelancerId}\r\n            onChange={handleChange}\r\n              >\r\n                {freelancers.map((freelancer) => (\r\n            <MenuItem value={freelancer.info.id}>{freelancer.info.first_name+\" \"+ freelancer.info.last_name}</MenuItem>\r\n                ))}\r\n            </Select>\r\n            <InputLabel id=\"demo-simple-select-label\" sx={{marginTop:'15px'}}>Description</InputLabel>\r\n            <TextField  id=\"description\" variant=\"outlined\" placeholder=\"What is your project?\"></TextField>\r\n            <InputLabel id=\"demo-simple-select-label\" sx={{marginTop:'15px'}}>Price</InputLabel>\r\n            <TextField  id=\"price\" variant=\"outlined\" placeholder=\"Amount in USD\"></TextField>\r\n            <InputLabel id=\"demo-simple-select-label\" sx={{marginTop:'15px'}}>Due Date</InputLabel>\r\n            <TextField id=\"due_date\" variant=\"outlined\" placeholder=\"Deadline\"></TextField>\r\n            <Button sx={{marginTop:'15px'}} variant=\"contained\"  onClick={handleSave}>Save</Button>\r\n            </Box>\r\n            </Box>\r\n        </Modal>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {projects.map((project) => (\r\n            <Project id={project.id} amount={project.price} title={project.description} due_date={project.due_date}></Project>\r\n                ))}\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs={12} md={3} sm={3}>\r\n  <Grid item >\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} username={pendingRequest.info.username} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url} profession={pendingRequest.info.profession} email={pendingRequest.info.email} bio={pendingRequest.info.bio} phone_number={pendingRequest.info.phone_number}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2 }} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProjectsPage;","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport { red } from '@mui/material/colors';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useState } from 'react';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #1976d2',\r\n  borderRadius: '35px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function UserSkill(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [title, setTitle] = useState(props.title);\r\n\r\n  const handleEditTitle = () =>setTitle(document.getElementById('skill_title').value);\r\n  const handleDelete = () => {\r\n    deleteSkill();\r\n    document.getElementById(props.id).style.display = \"none\";\r\n  }\r\n\r\n  const handleUpdate = () => {\r\n    updateSkill();\r\n    handleClose();\r\n  }\r\n\r\n\r\n\r\n  function updateSkill(){\r\n    updateSkillAPI().then(skills_response=>{\r\n      console.log(skills_response);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function updateSkillAPI(){\r\n  const id = props.id;\r\n  const authorization = localStorage.getItem('token');\r\n  console.log(id);\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/update-skill\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'skill_id' : id,\r\n          'title': title\r\n\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const update_response = await response.json();\r\n  return update_response;\r\n}\r\n\r\nfunction deleteSkill(){\r\n  deleteSkillAPI().then(skills_response=>{\r\n    console.log(skills_response);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function deleteSkillAPI(){\r\nconst id = props.id;\r\nconst authorization = localStorage.getItem('token');\r\n\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/delete-skill\", {\r\n      method: 'POST',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n      body: new URLSearchParams({\r\n        'skill_id' : id,\r\n      })\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst delete_response = await response.json();\r\nreturn delete_response;\r\n}\r\n\r\n  return (\r\n    <Card id={props.id} sx={{display:'flex', flexDirection:'row', paddingTop:'5px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <StarIcon />\r\n          </Avatar>\r\n        }\r\n        title={title}\r\n        />\r\n        <Stack sx={{display:'flex', flexDirection:'row'}}>\r\n        <IconButton onClick={handleOpen} style={{color:'#1976d2'}} aria-label=\"Edit\" component=\"span\" sx={{flex:'1'}}>\r\n        <EditIcon />\r\n        </IconButton>\r\n        <IconButton onClick={handleDelete} color=\"error\"aria-label=\"Edit\" component=\"span\" sx={{flex:'1'}}>\r\n        <DeleteIcon  />\r\n        </IconButton>\r\n        </Stack>\r\n        <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"title\"\r\n        >\r\n            <Box\r\n            component=\"form\"\r\n            sx={style}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            >\r\n            <Typography id=\"title\" variant=\"h6\">Edit Skill</Typography>\r\n            <Box sx={{display:'flex', flexDirection:'column'}}>\r\n            <TextField sx={{marginTop:'15px'}} id=\"skill_title\"  label=\"Title\" variant=\"outlined\" value={title} onChange={handleEditTitle}></TextField>\r\n            <Button sx={{marginTop:'15px'}} variant=\"contained\" onClick={handleUpdate}>Save</Button>\r\n            </Box>\r\n            </Box>\r\n        </Modal>\r\n\r\n\r\n        </Card>\r\n  );\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport UserSkill from '../Components/UserSkill';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Modal from '@mui/material/Modal';\r\nimport Button from '@mui/material/Button';\r\nimport { useState } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport MainNavigation from '../Components/Layout/MainNavigation';\r\nimport { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #1976d2',\r\n  borderRadius: '35px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\n\r\nfunction SkillsPage(){\r\n\r\n  const history =  new useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [skills, setSkills]  = useState([]);\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem('is_authenticated');\r\n    if(is_authenticated===\"false\"){\r\n      history.push('/');\r\n    }\r\n    getUserSkills();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserSkills(){\r\n    getUserSkillsAPI().then(skills_response=>{\r\n      setSkills(skills_response.skills);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getUserSkillsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-user-skills\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user_id' : user_id,\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const skills_response = await response.json();\r\n  return skills_response;\r\n}\r\n\r\nfunction addSkill(){\r\n  addSkillAPI().then(add_response=>{\r\n    console.log(add_response);\r\n    getUserSkills();\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function addSkillAPI(){\r\nconst skill_title = document.getElementById('skill_title').value;\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/add-skill\", {\r\n      method: 'POST',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n      body: new URLSearchParams({\r\n        'title': skill_title\r\n\r\n      })\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst update_response = await response.json();\r\nreturn update_response;\r\n}\r\n\r\n//pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n\r\n\r\n  const handleSave = () => {\r\n    addSkill();\r\n    handleClose();\r\n  }\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n      <MainNavigation />\r\n      <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n      <Grid item xs={12} md={3} sm={3}>\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} md={6} sm={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Skills\r\n          </Typography>\r\n          <IconButton onClick={handleOpen} color=\"primary\" aria-label=\"Edit\" component=\"span\" sx={{alignSelf:'center'}}><AddCircleIcon/></IconButton>\r\n          </Box>\r\n          <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"title\"\r\n        >\r\n            <Box\r\n            component=\"form\"\r\n            sx={style}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            >\r\n            <Typography id=\"title\" variant=\"h6\">Add Skill</Typography>\r\n            <Box sx={{display:'flex', flexDirection:'column'}}>\r\n            <TextField sx={{marginTop:'15px'}} id=\"skill_title\"  label=\"Title\" variant=\"outlined\" placeholder=\"What is your skill?\"></TextField>\r\n            <Button sx={{marginTop:'15px'}} variant=\"contained\" onClick={handleSave}>Save</Button>\r\n            </Box>\r\n            </Box>\r\n        </Modal>\r\n          <Stack id=\"skills\" direction=\"column\" spacing={2}>\r\n          {skills.map((skill) => (\r\n        <UserSkill id={skill.id} title={skill.title}></UserSkill>\r\n          ))}\r\n            \r\n\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs={12} md={3} sm={3}>\r\n  <Grid item>\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default SkillsPage;","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { useState } from \"react\";\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #1976d2',\r\n  borderRadius: '35px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function UserEducation(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [degree, setDegree] = useState(props.degree);\r\n  const [university, setUniversity] = useState(props.university);\r\n  const [major, setMajor] = useState(props.major);\r\n  const [year, setYear] = useState(props.year);\r\n\r\n  const handleEditDegree = () =>\r\n    setDegree(document.getElementById(\"degree\").value);\r\n  const handleEditMajor = () =>\r\n    setMajor(document.getElementById(\"major\").value);\r\n  const handleEditUniversity = () =>\r\n    setUniversity(document.getElementById(\"university\").value);\r\n  const handleEditYear = () => setYear(document.getElementById(\"year\").value);\r\n\r\n  const handleDelete = () => {\r\n    deleteEducation();\r\n    document.getElementById(props.id).style.display = \"none\";\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    updateEducation();\r\n    handleClose();\r\n  };\r\n\r\n  function updateEducation() {\r\n    updateEducationAPI()\r\n      .then((update_response) => {\r\n        console.log(update_response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function updateEducationAPI() {\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n    console.log(id);\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/update-education\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          education_id: id,\r\n          degree: degree,\r\n          major: major,\r\n          university: university,\r\n          year: year,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const update_response = await response.json();\r\n    return update_response;\r\n  }\r\n\r\n  function deleteEducation() {\r\n    deleteEducationAPI()\r\n      .then((delete_response) => {\r\n        console.log(delete_response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  async function deleteEducationAPI() {\r\n    const id = props.id;\r\n    const authorization = localStorage.getItem(\"token\");\r\n\r\n    const response = await fetch(\r\n      \"https://todotasks.tk/api/auth/delete-education\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { accepts: \"application/json\", Authorization: authorization },\r\n        body: new URLSearchParams({\r\n          education_id: id,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n    }\r\n\r\n    const delete_response = await response.json();\r\n    return delete_response;\r\n  }\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        style={{fontFamily:'Roboto'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"recipe\">\r\n            <StarIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <p>\r\n              {degree} in {major}\r\n            </p>\r\n            <p>\r\n              {university} ({year})\r\n            </p>\r\n          </Typography>\r\n        }\r\n      />\r\n      <Stack sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <IconButton\r\n          style={{color:'#1976d2'}}\r\n          onClick={handleOpen}\r\n          aria-label=\"Edit\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"error\"\r\n          onClick={handleDelete}\r\n          aria-label=\"Delete\"\r\n          component=\"span\"\r\n          sx={{ flex: \"1\" }}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Stack>\r\n      <Modal open={open} onClose={handleClose} aria-labelledby=\"title\">\r\n        <Box component=\"form\" sx={style} noValidate autoComplete=\"off\">\r\n          <Typography id=\"title\" variant=\"h6\">\r\n            Edit Education\r\n          </Typography>\r\n          <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <TextField\r\n              sx={{ marginTop: \"15px\" }}\r\n              id=\"degree\"\r\n              label=\"Degree\"\r\n              variant=\"outlined\"\r\n              value={degree}\r\n              onChange={handleEditDegree}\r\n            ></TextField>\r\n            <TextField\r\n              sx={{ marginTop: \"15px\" }}\r\n              id=\"major\"\r\n              label=\"Major\"\r\n              variant=\"outlined\"\r\n              value={major}\r\n              onChange={handleEditMajor}\r\n            ></TextField>\r\n            <TextField\r\n              sx={{ marginTop: \"15px\" }}\r\n              id=\"university\"\r\n              label=\"University\"\r\n              variant=\"outlined\"\r\n              value={university}\r\n              onChange={handleEditUniversity}\r\n            ></TextField>\r\n            <TextField\r\n              sx={{ marginTop: \"15px\" }}\r\n              id=\"year\"\r\n              label=\"Year\"\r\n              variant=\"outlined\"\r\n              value={year}\r\n              onChange={handleEditYear}\r\n            ></TextField>\r\n            <Button\r\n              sx={{ marginTop: \"15px\" }}\r\n              variant=\"contained\"\r\n              onClick={handleUpdate}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport UserEducation from '../Components/UserEducation';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Modal from '@mui/material/Modal';\r\nimport Button from '@mui/material/Button';\r\nimport { useState } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport MainNavigation from '../Components/Layout/MainNavigation';\r\nimport { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #1976d2',\r\n  borderRadius: '35px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\n\r\nfunction EducationPage(){\r\n  const history = new useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const [educations, setEducations]  = useState([]);\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem('is_authenticated');\r\n    if(is_authenticated===\"false\"){\r\n      history.push('/');\r\n    }\r\n    getUserEdcuation();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserEdcuation(){\r\n    getUserEdcuationAPI().then(education_response=>{\r\n      console.log(education_response);\r\n      setEducations(education_response.education);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\n\r\n\r\nasync function getUserEdcuationAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/user-education\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user_id' : user_id,\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const education_response = await response.json();\r\n  return education_response;\r\n}\r\n\r\nfunction addEducation(){\r\n  addEducationAPI().then(add_response=>{\r\n    console.log(add_response);\r\n    getUserEdcuation();\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function addEducationAPI(){\r\nconst degree = document.getElementById('degree').value;\r\nconst major = document.getElementById('major').value;\r\nconst university = document.getElementById('university').value;\r\nconst year = document.getElementById('year').value;\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/add-education\", {\r\n      method: 'POST',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n      body: new URLSearchParams({\r\n        'degree': degree,\r\n        'major': major,\r\n        'university': university,\r\n        'year': year\r\n      })\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst add_response = await response.json();\r\nreturn add_response;\r\n}\r\n\r\n//pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n\r\n\r\n  const handleSave = () => {\r\n    addEducation();\r\n    handleClose();\r\n  }\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n        <MainNavigation />\r\n        <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n    \r\n        <Grid item xs={12} md={3} sm={3}>\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} md={6} sm={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Education\r\n          </Typography>\r\n          <IconButton onClick={handleOpen} color=\"primary\" aria-label=\"Add\" component=\"span\" sx={{alignSelf:'center'}}><AddCircleIcon/></IconButton>\r\n          </Box>\r\n          <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"title\"\r\n        >\r\n            <Box\r\n            component=\"form\"\r\n            sx={style}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            >\r\n            <Typography id=\"title\" variant=\"h6\">Add Education</Typography>\r\n            <Box sx={{display:'flex', flexDirection:'column'}}>\r\n            <TextField sx={{marginTop:'15px'}} id=\"degree\"  label=\"Degree\" variant=\"outlined\"></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"major\"  label=\"Major\" variant=\"outlined\"></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"university\"  label=\"University\" variant=\"outlined\"></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"year\"  label=\"Year\" variant=\"outlined\"></TextField>\r\n            <Button sx={{marginTop:'15px'}} variant=\"contained\" onClick={handleSave}>Save</Button>\r\n            </Box>\r\n            </Box>\r\n        </Modal>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {educations.map((education) => (\r\n        <UserEducation id={education.id} degree={education.degree} major={education.major} university={education.university} year={education.year}></UserEducation>\r\n          ))}\r\n          \r\n\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs={12} md={3} sm={3}>\r\n  <Grid item >\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} username={pendingRequest.info.username} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url} profession={pendingRequest.info.profession} email={pendingRequest.info.email} bio={pendingRequest.info.bio} phone_number={pendingRequest.info.phone_number}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default EducationPage;","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport { red } from '@mui/material/colors';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useState } from 'react';\r\nimport { display } from '@mui/system';\r\nimport { PinDropRounded } from '@mui/icons-material';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #1976d2',\r\n  borderRadius: '35px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function UserExperience(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n     const [position, setPosition] = useState(props.position);\r\n     const [company, setCompany] = useState(props.company);\r\n     const [start_date, setStartDate] = useState(props.start_date);\r\n     const [end_date, setEndDate] = useState(props.end_date);\r\n\r\n     const handleEditPosition = () =>setPosition(document.getElementById('position').value);\r\n     const handleEditCompany = () =>setCompany(document.getElementById('company').value);\r\n     const handleEditStartDate = () =>setStartDate(document.getElementById('start_date').value);\r\n     const handleEditEndDate = () =>setEndDate(document.getElementById('end_date').value);\r\n\r\n     const handleDelete = () => {\r\n       deleteExperience();\r\n       document.getElementById(props.id).style.display = \"none\";\r\n     }\r\n   \r\n     const handleUpdate = () => {\r\n       updateExperience();\r\n       handleClose();\r\n     }\r\n   \r\n   \r\n   \r\n     function updateExperience(){\r\n       updateExperienceAPI().then(update_response=>{\r\n         console.log(update_response);\r\n         \r\n   }).catch(error => {\r\n       console.log(error.message);\r\n   });\r\n   \r\n   }\r\n   \r\n   \r\n   async function updateExperienceAPI(){\r\n     const id = props.id;\r\n     const authorization = localStorage.getItem('token');\r\n     console.log(id);\r\n   \r\n       const response = await fetch(\"https://todotasks.tk/api/auth/update-job\", {\r\n           method: 'POST',\r\n           headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n           body: new URLSearchParams({\r\n             'job_id' : id,\r\n             'position': position,\r\n             'company': company,\r\n             'start_date': start_date,\r\n             'end_date': end_date\r\n   \r\n           })\r\n       });\r\n   \r\n       if(!response.ok){\r\n         const message = \"ERROR OCCURED\";\r\n         throw new Error(message);\r\n     }\r\n     \r\n     const update_response = await response.json();\r\n     return update_response;\r\n   }\r\n   \r\n   function deleteExperience(){\r\n     deleteExperienceAPI().then(delete_response=>{\r\n       console.log(delete_response);\r\n       \r\n   }).catch(error => {\r\n     console.log(error.message);\r\n   });\r\n   \r\n   }\r\n   \r\n   \r\n   async function deleteExperienceAPI(){\r\n   const id = props.id;\r\n   const authorization = localStorage.getItem('token');\r\n   \r\n   \r\n     const response = await fetch(\"https://todotasks.tk/api/auth/delete-job\", {\r\n         method: 'POST',\r\n         headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n         body: new URLSearchParams({\r\n           'job_id' : id,\r\n         })\r\n     });\r\n   \r\n     if(!response.ok){\r\n       const message = \"ERROR OCCURED\";\r\n       throw new Error(message);\r\n   }\r\n   \r\n   const delete_response = await response.json();\r\n   return delete_response;\r\n   }\r\n\r\n\r\n\r\n\r\n  return (\r\n      <Card id={props.id} sx={{display:'flex', flexDirection:'row', paddingTop:'5px'}}>\r\n        <CardHeader \r\n        style={{fontFamily:'Roboto'}}\r\n        sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <WorkIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <p>{position} at {company}</p>\r\n          <p>From {start_date} till {end_date}</p>\r\n        </Typography>}\r\n        />\r\n        <Stack sx={{display:'flex', flexDirection:'row'}}>\r\n        <IconButton onClick={handleOpen} style={{color:'#1976d2'}} aria-label=\"Edit\" component=\"span\" sx={{flex:'1'}}>\r\n        <EditIcon />\r\n        </IconButton>\r\n        <IconButton onClick={handleDelete} color=\"error\"aria-label=\"Edit\" component=\"span\" sx={{flex:'1'}}>\r\n        <DeleteIcon  />\r\n        </IconButton>\r\n        </Stack>\r\n        <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"title\"\r\n        >\r\n            <Box\r\n            component=\"form\"\r\n            sx={style}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            >\r\n            <Typography id=\"title\" variant=\"h6\">Edit Experience</Typography>\r\n            <Box sx={{display:'flex', flexDirection:'column'}}>\r\n            <TextField sx={{marginTop:'15px'}} id=\"position\"  label=\"Position\" variant=\"outlined\" value={position} onChange={handleEditPosition}></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"company\" label=\"Company\" variant=\"outlined\" value={company} onChange={handleEditCompany} ></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"start_date\" label=\"Start Date\" variant=\"outlined\" value={start_date} onChange={handleEditStartDate} ></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"end_date\" label=\"End Date\" variant=\"outlined\" value={end_date} onChange={handleEditEndDate} ></TextField>\r\n            <Button sx={{marginTop:'15px'}} variant=\"contained\" onClick={handleUpdate}>Save</Button>\r\n            </Box>\r\n            </Box>\r\n        </Modal>\r\n        </Card>\r\n\r\n  );\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport UserExperience from '../Components/UserExperience';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Modal from '@mui/material/Modal';\r\nimport Button from '@mui/material/Button';\r\nimport { useState } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport MainNavigation from '../Components/Layout/MainNavigation';\r\nimport { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #1976d2',\r\n  borderRadius: '35px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\n\r\nfunction ExperiencePage(){\r\n  const history = new useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [experiences, setExperiences]  = useState([]);\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem('is_authenticated');\r\n    if(is_authenticated===\"false\"){\r\n      history.push('/');\r\n    }\r\n    getUserExperience();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserExperience(){\r\n    getUserExperienceAPI().then(experience_response=>{\r\n      console.log(experience_response);\r\n      setExperiences(experience_response.jobs);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getUserExperienceAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/user-jobs\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user_id' : user_id,\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const experience_response = await response.json();\r\n  return experience_response;\r\n}\r\n\r\nfunction addExperience(){\r\n  addExperienceAPI().then(add_response=>{\r\n    console.log(add_response);\r\n    getUserExperience();\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function addExperienceAPI(){\r\nconst position = document.getElementById('position').value;\r\nconst company = document.getElementById('company').value;\r\nconst start_date = document.getElementById('start_date').value;\r\nconst end_date = document.getElementById('end_date').value;\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/add-job\", {\r\n      method: 'POST',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n      body: new URLSearchParams({\r\n        'position': position,\r\n        'company': company,\r\n        'start_date': start_date,\r\n        'end_date': end_date\r\n      })\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst add_response = await response.json();\r\nreturn add_response;\r\n}\r\n\r\n//pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n\r\n\r\n\r\n  const handleSave = () => {\r\n    addExperience();\r\n    handleClose();\r\n  }\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n        <MainNavigation />\r\n        <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} md={6} sm={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Experience\r\n          </Typography>\r\n          <IconButton onClick={handleOpen} color=\"primary\" aria-label=\"Add\" component=\"span\" sx={{alignSelf:'center'}}><AddCircleIcon/></IconButton>\r\n          </Box>\r\n          <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"title\"\r\n        >\r\n            <Box\r\n            component=\"form\"\r\n            sx={style}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            >\r\n            <Typography id=\"title\" variant=\"h6\">Add Experience</Typography>\r\n            <Box sx={{display:'flex', flexDirection:'column'}}>\r\n            <TextField sx={{marginTop:'15px'}} id=\"position\"  label=\"Position\" variant=\"outlined\"></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"company\"  label=\"Company\" variant=\"outlined\"></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"start_date\"  label=\"Start Date\" variant=\"outlined\"></TextField>\r\n            <TextField sx={{marginTop:'15px'}} id=\"end_date\"  label=\"End Date\" variant=\"outlined\"></TextField>\r\n            <Button sx={{marginTop:'15px'}} variant=\"contained\" onClick={handleSave}>Save</Button>\r\n            </Box>\r\n            </Box>\r\n        </Modal>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {experiences.map((experience) => (\r\n        <UserExperience id={experience.id} company={experience.company} position={experience.position} start_date={experience.start_date} end_date={experience.end_date}></UserExperience>\r\n          ))}\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs={12} md={3} sm={3}>\r\n  <Grid item >\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} username={pendingRequest.info.username} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url} profession={pendingRequest.info.profession} email={pendingRequest.info.email} bio={pendingRequest.info.bio} phone_number={pendingRequest.info.phone_number}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default ExperiencePage;","export default __webpack_public_path__ + \"static/media/bg.01705941.jpg\";","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport background from '../images/bg.jpg';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport Button from '@mui/material/Button';\r\nimport Link from '@mui/material/Link';\r\nimport { Link as RouterLink, MemoryRouter as Router } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nexport default function LoginPage() {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem('is_authenticated');\r\n    if(is_authenticated===\"true\"){\r\n      history.push('/projects');\r\n    }\r\n    else{\r\n      localStorage.setItem('is_authenticated', 'false');\r\n    }\r\n    \r\n  },[])\r\n\r\n\r\n\r\n  function login(){\r\n    loginAPI().then(login_response=>{\r\n      localStorage.setItem('token', 'bearer '+login_response.access_token);\r\n      localStorage.setItem('id', login_response.user.id);\r\n      localStorage.setItem('full_name', login_response.user.first_name+' '+login_response.user.last_name);\r\n      localStorage.setItem('username', login_response.user.username);\r\n      localStorage.setItem('email', login_response.user.email);\r\n      localStorage.setItem('phone_number', login_response.user.phone_number);\r\n      localStorage.setItem('profile_picture', login_response.picture[0].picture_url);\r\n      localStorage.setItem('profession', login_response.user.profession);\r\n      localStorage.setItem('bio', login_response.user.bio);\r\n      localStorage.setItem('is_authenticated', 'true');\r\n      history.push('/projects');\r\n}).catch(error => {\r\n    alert(\"Please Check If you're entering the correct email and password!\");\r\n    console.log(error);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function loginAPI(){\r\n  const email = document.getElementById('email').value;\r\n  const password = document.getElementById('password').value;\r\n  const token = localStorage.getItem('device_token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/login\", {\r\n        method: 'POST',\r\n        body: new URLSearchParams({\r\n          'email' : email,\r\n          'password' : password,\r\n          'token' : token\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const login_response = await response.json();\r\n  return login_response;\r\n}\r\n\r\n  const handleLogin = async e => {\r\n    e.preventDefault();\r\n    login();\r\n  }\r\n  return (\r\n    <Box sx={{ flexGrow: 1}}>\r\n      <Grid container style={{backgroundColor:'#f5f5f5'}}>\r\n        <Grid item xs={12} sm={12} md={6} sx={{textAlign:'center', color:'white'}} style={{position: 'relative',height:'100vh',backgroundImage:`url(${background})`}}>\r\n            <h1 style={{color:'#1976d2'}}>Todo Tasks</h1>\r\n            <div style={{marginTop:'35px', backgroundColor:\"#1976d2\", borderRadius:'20px', marginLeft:'10px', maxWidth:'50%',float:'left', padding:'3px'}}>\r\n            <p style={{fontSize:'13pt', fontFamily:'Roboto'}}>\r\n                What is the perfect platform for freelancing?\r\n            </p>\r\n            </div>\r\n            <div style={{marginTop:'35px', backgroundColor:\"#1976d2\", borderRadius:'20px', maxWidth:'50%',float:'right', marginRight:'10px', padding:'3px'}}>\r\n            <p style={{fontSize:'13pt', fontFamily:'Roboto'}}>\r\n            Todo Tasks is a map for you if you're searching for a freelancer.\r\n            </p>\r\n            </div>\r\n            <div style={{marginTop:'10px', maxWidth:'50%',backgroundColor:\"#1976d2\", borderRadius:'20px',float:'right',marginRight:'10px', padding:'3px'}}>\r\n            <p style={{fontSize:'13pt',fontFamily:'Roboto'}}>\r\n            And your home if you are a freelancer and you want to work comfortably.\r\n            </p>\r\n            </div>\r\n            <div style={{position: 'absolute', bottom: '0px' , display:'flex', flexDirection:'row', width:'100%'}}>\r\n            <div style={{flex:'8', backgroundColor:'white', border:'1px solid #1976d2', borderRadius:'20px', textAlign: 'left', margin:'10px', paddingLeft:'10px', height:'40px'}}>\r\n                <p style={{color:'black', fontFamily:'Roboto'}}>By Waseem Issa on Behalf of SE Factory</p>\r\n            </div>\r\n            <div style={{ flex:'1',marginLeft:'-20px'}}>\r\n                <p style={{color:'#1976d2', fontSize:'10pt', marginBottom:'5px', paddingRight:'10px', paddingLeft:'10px'}}><SendIcon sx={{width:'35px', height:'35px'}} /></p>\r\n            </div>\r\n            </div>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} sx={{textAlign: 'center'}}>\r\n          \r\n          <Box\r\n      component=\"form\"\r\n      xs={{marginBottom:'10px'}}\r\n      sx={{\r\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >\r\n     <center><div style={{border:'1px solid #1976d2', backgroundColor:'white', borderRadius:'35px', marginTop:'100px', width:'80%', fontFamily:'Roboto'}}>\r\n      <h1 style={{fontFamily:'Roboto'}}>Login</h1>\r\n        <TextField\r\n          required\r\n          type=\"email\"\r\n          id=\"email\"\r\n          label=\"Email Address\"\r\n          placeholder=\"someone@example.com \"\r\n          style={{width:'80%'}}\r\n        />\r\n        <TextField\r\n          required\r\n          type=\"password\"\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          placeholder=\"your password\"\r\n          style={{width:'80%'}}\r\n        />\r\n        <Button variant=\"contained\" style={{width:'80%'}} onClick={handleLogin}>Login</Button>\r\n        <p>New to Todo Tasks? <Link component={RouterLink} to=\"/register\">Register.</Link> </p>\r\n        \r\n      </div>\r\n      </center>\r\n    </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport background from '../images/bg.jpg';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport Button from '@mui/material/Button';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport Link from '@mui/material/Link';\r\nimport { Link as RouterLink, MemoryRouter as Router } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nexport default function RegisterPage() {\r\n  const history = useHistory();\r\n\r\n  const [is_freelancer, setIsFreelancer] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setIsFreelancer(event.target.value);\r\n  };\r\n\r\n  function register(){\r\n    registerAPI().then(register_response=>{\r\n      history.push('/');\r\n}).catch(error => {\r\n    alert(\"Registration fail, you should:\\nFill all the fields \\nBe at least 18 years old\\nHave a unique email and username\\nProvide a confirmed password of at least 6 characters\");\r\n});\r\n\r\n}\r\n\r\n\r\nasync function registerAPI(){\r\n  const first_name = document.getElementById('first_name').value;\r\n  const last_name = document.getElementById('last_name').value;\r\n  const username = document.getElementById('username').value;\r\n  const email = document.getElementById('email').value;\r\n  const password = document.getElementById('password').value;\r\n  const password_confirmation = document.getElementById('password_confirmation').value;\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/register\", {\r\n        method: 'POST',\r\n        body: new URLSearchParams({\r\n          'first_name': first_name,\r\n          'last_name' : last_name,\r\n          'username' : username,\r\n          'email' : email,\r\n          'password' : password,\r\n          'password_confirmation' : password_confirmation,\r\n          'is_freelancer' : is_freelancer\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const register_response = await response.json();\r\n  return register_response;\r\n}\r\n\r\n  const handleRegistration = async e => {\r\n    e.preventDefault();\r\n    register();\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1}}>\r\n      <Grid container style={{backgroundColor:'#f5f5f5'}}>\r\n        <Grid item xs={12} sm={12} md={6} sx={{textAlign:'center', color:'white'}} style={{position: 'relative',height:'680px',backgroundImage:`url(${background})`}}>\r\n            <h1 style={{color:'#1976d2', fontFamily:'Roboto'}}>Todo Tasks</h1>\r\n            <div style={{marginTop:'35px', backgroundColor:\"#1976d2\", borderRadius:'20px', maxWidth:'50%',float:'left', marginLeft:'10px', padding:'3px'}}>\r\n            <p style={{fontSize:'13pt', fontFamily:'Roboto'}}>\r\n                What is the perfect platform for freelancing?\r\n            </p>\r\n            </div>\r\n            <div style={{marginTop:'35px', backgroundColor:\"#1976d2\", borderRadius:'20px', maxWidth:'50%',float:'right', marginRight:'10px', padding:'3px'}}>\r\n            <p style={{fontSize:'13pt', fontFamily:'Roboto'}}>\r\n            Todo Tasks is a map for you if you're searching for a freelancer.\r\n            </p>\r\n            </div>\r\n            <div style={{marginTop:'10px', maxWidth:'50%',backgroundColor:\"#1976d2\", borderRadius:'20px',float:'right',marginRight:'10px', padding:'3px'}}>\r\n            <p style={{fontSize:'13pt',fontFamily:'Roboto'}}>\r\n            And your home if you are a freelancer and you want to work comfortably.\r\n            </p>\r\n            </div>\r\n            <div style={{position: 'absolute', bottom: '0px' , display:'flex', flexDirection:'row', width:'100%'}}>\r\n            <div style={{flex:'8', backgroundColor:'white', border:'1px solid #1976d2', borderRadius:'20px', textAlign: 'left', margin:'10px', paddingLeft:'10px', height:'40px'}}>\r\n                <p style={{color:'black', fontFamily:'Roboto'}}>By Waseem Issa on Behalf of SE Factory</p>\r\n            </div>\r\n            <div style={{ flex:'1',marginLeft:'-20px'}}>\r\n                <p style={{color:'#1976d2', fontSize:'10pt', marginBottom:'5px', paddingRight:'10px', paddingLeft:'10px'}}><SendIcon sx={{width:'35px', height:'35px'}} /></p>\r\n            </div>\r\n            </div>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} sx={{textAlign: 'center'}}>\r\n          \r\n          <Box\r\n      component=\"form\"\r\n      sx={{\r\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >\r\n     <center><div style={{marginTop:'10px', marginBottom:'10px',border:'1px solid #1976d2',backgroundColor:'white', borderRadius:'35px', width:'80%', fontFamily:'Roboto'}}>\r\n      <h1 style={{fontFamily:'Roboto'}}>Registration</h1>\r\n      <TextField\r\n          required\r\n          id=\"first_name\"\r\n          type=\"text\"\r\n          label=\"First Name\"\r\n          placeholder=\"John\"\r\n          sx={{fontFamily:'Roboto'}}\r\n          style={{width:'80%'}}\r\n        />\r\n        <TextField\r\n          required\r\n          id=\"last_name\"\r\n          type=\"text\"\r\n          label=\"Last Name\"\r\n          placeholder=\"Smith\"\r\n          style={{width:'80%'}}\r\n        />\r\n        <TextField\r\n          required\r\n          id=\"username\"\r\n          type=\"text\"\r\n          label=\"Username\"\r\n          placeholder=\"john.smith\"\r\n          style={{width:'80%'}}\r\n        />\r\n        <TextField\r\n          required\r\n          id=\"email\"\r\n          type=\"email\"\r\n          label=\"Email Address\"\r\n          placeholder=\"someone@example.com \"\r\n          style={{width:'80%'}}\r\n        />\r\n        <TextField\r\n          required\r\n          type=\"password\"\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          placeholder=\"At least 6 characters\"\r\n          style={{width:'80%'}}\r\n        />\r\n        <TextField\r\n          required\r\n          type=\"password\"\r\n          id=\"password_confirmation\"\r\n          label=\"Confirm Password\"\r\n          placeholder=\"Should match password\"\r\n          style={{width:'80%'}}\r\n        />\r\n      <FormControl component=\"fieldset\" sx={{width:'80%'}}>\r\n      <FormLabel component=\"legend\">Are you a freelancer?</FormLabel>\r\n      <RadioGroup\r\n        required\r\n        aria-label=\"is_freelancer\"\r\n        name=\"radio-buttons-group\"\r\n        id = \"is_freelancer\"\r\n        value={is_freelancer}\r\n        onChange={handleChange}\r\n        sx={{display:'flex', flexDirection:'row'}}\r\n      >\r\n        <FormControlLabel value=\"1\" control={<Radio />} label=\"Yes\" />\r\n        <FormControlLabel value=\"0\" control={<Radio />} label=\"No\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n        <Button variant=\"contained\" style={{width:'80%'}} type=\"submit\" onClick={handleRegistration}>Sign Up</Button>\r\n        <p>Already on Todo Tasks? <Link component={RouterLink} to=\"/\">Login.</Link> </p>\r\n      </div>\r\n      </center>\r\n    </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}","import * as React from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport FeedIcon from '@mui/icons-material/Feed';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport SchoolIcon from '@mui/icons-material/School';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport { Link as RouterLink, MemoryRouter as Router } from 'react-router-dom';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function UserCard() {\r\n  const [id, setId] = useState(localStorage.getItem('todo_tasks_user_id'));\r\n  const [name, setName] = useState(localStorage.getItem('todo_tasks_user_name'));\r\n  const [profession, setProfession] = useState(localStorage.getItem('todo_tasks_user_profession'));\r\n  const [picture, setPicture] = useState(localStorage.getItem('todo_tasks_user_picture'));\r\n\r\n\r\n  useEffect(() => {\r\n      setId(localStorage.getItem('todo_tasks_user_id'));\r\n      setName(localStorage.getItem('todo_tasks_user_name'));\r\n      setProfession(localStorage.getItem('todo_tasks_user_profession'));\r\n      setPicture(localStorage.getItem('todo_tasks_user_picture'));\r\n\r\n      const isFriend = localStorage.getItem('is_friend');\r\n      if(isFriend == \"true\"){\r\n        document.getElementById('follow_label').style.display = \"none\";\r\n      }\r\n\r\n  },[]);\r\n\r\n  const handleFollow = () =>{\r\n      sendFollowRequest();\r\n      document.getElementById('follow_label').style.display = \"none\";\r\n  }\r\n\r\n  function sendFollowRequest(){\r\n    sendFollowRequestAPI().then(add_response=>{\r\n\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function sendFollowRequestAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/send-follow-request\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user2_id': id,\r\n        })\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const add_response = await response.json();\r\n  return add_response;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment style={{width:'80%'}}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"sm\" lg={{marginLeft:'20px', marginRight:'20px'}}>\r\n        <Box sx={{ bgcolor: \"#1976d2\", height: \"100px\" }}>\r\n        <center><Avatar src={picture} sx={{ width: '100px', height:'100px', bottom:'-50px', position:'relative'}}>A</Avatar></center>\r\n        <label id=\"follow_label\" htmlFor=\"follow\" style={{paddingLeft:'65%'}}>\r\n        <IconButton onClick={handleFollow} color=\"primary\" id=\"follow\" aria-label=\"Follow\" component=\"span\">\r\n        <AddCircleOutlineIcon />\r\n        </IconButton>\r\n        </label>\r\n        </Box>\r\n        <Box sx={{paddingTop: '40px', textAlign:'center'}}>\r\n            <h3>{name}</h3>\r\n            <p style={{marginTop: '-20px' }}>{profession}</p>\r\n        </Box>\r\n        <Box>\r\n        <List>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/feed\">\r\n              <ListItemIcon>\r\n                <FeedIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Contact Info\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/experience\">\r\n              <ListItemIcon>\r\n                <WorkIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Experience\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/education\">\r\n              <ListItemIcon>\r\n                <SchoolIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Education\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disablePadding>\r\n            <ListItemButton component={RouterLink} to=\"/skills\">\r\n              <ListItemIcon>\r\n                <StarIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Skills\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        </List>\r\n\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nexport default function UserEducation(props) {\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"education\">\r\n            <StarIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <p>\r\n              {props.degree} in {props.major}\r\n            </p>\r\n            <p>\r\n              {props.university} ({props.year})\r\n            </p>\r\n          </Typography>\r\n        }\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../../Components/Suggestion\";\r\nimport Pending from \"../../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../../Components/ProfileComponents/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport UserEducation from '../../Components/ProfileComponents/UserEducation';\r\nimport MainNavigation from '../../Components/Layout/MainNavigation';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\n\r\nfunction UserEducationPage(){\r\n  const history = new useHistory();\r\n  const [educations, setEducations]  = useState([]);\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem('is_authenticated');\r\n    if(is_authenticated===\"false\"){\r\n      history.push('/');\r\n    }\r\n    getUserEdcuation()\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserEdcuation(){\r\n    getUserEdcuationAPI().then(education_response=>{\r\n      console.log(education_response);\r\n      setEducations(education_response.education);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\n\r\n\r\nasync function getUserEdcuationAPI(){\r\n  const user_id = localStorage.getItem('todo_tasks_user_id');\r\n  const authorization = localStorage.getItem('token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/user-education\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user_id' : user_id,\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const education_response = await response.json();\r\n  return education_response;\r\n}\r\n\r\n    //pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n        <MainNavigation />\r\n        <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n    \r\n        <Grid item xs={12} md={3} sm={3}>\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} md={6} sm={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Education\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {educations.map((education) => (\r\n        <UserEducation id={education.id} degree={education.degree} major={education.major} university={education.university} year={education.year}></UserEducation>\r\n          ))}\r\n          \r\n\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs={12} md={3} sm={3}>\r\n  <Grid item >\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} username={pendingRequest.info.username} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url} profession={pendingRequest.info.profession} email={pendingRequest.info.email} bio={pendingRequest.info.bio} phone_number={pendingRequest.info.phone_number}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserEducationPage;","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport { red } from '@mui/material/colors';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport StarIcon from '@mui/icons-material/Star';\r\n\r\n\r\n\r\nexport default function UserSkill(props) {\r\n\r\n\r\n  return (\r\n    <Card id={props.id} sx={{display:'flex', flexDirection:'row', paddingTop:'5px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <StarIcon />\r\n          </Avatar>\r\n        }\r\n        title={props.title}\r\n        />\r\n        </Card>\r\n  );\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../../Components/Suggestion\";\r\nimport Pending from \"../../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../../Components/ProfileComponents/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport UserSkill from '../../Components/ProfileComponents/UserSkill';\r\nimport MainNavigation from '../../Components/Layout/MainNavigation';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nfunction UserSkillsPage(){\r\n  const history = new useHistory();\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n    const [skills, setSkills]  = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem('is_authenticated');\r\n    if(is_authenticated===\"false\"){\r\n      history.push('/');\r\n    }\r\n    getUserSkills();\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n  function getUserSkills(){\r\n    getUserSkillsAPI().then(skills_response=>{\r\n      setSkills(skills_response.skills);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getUserSkillsAPI(){\r\n  const user_id = localStorage.getItem('todo_tasks_user_id');\r\n  const authorization = localStorage.getItem('token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-user-skills\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user_id' : user_id,\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const skills_response = await response.json();\r\n  return skills_response;\r\n}\r\n\r\n    //pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n        <MainNavigation />\r\n        <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} md={6} sm={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Skills\r\n          </Typography>\r\n          </Box>\r\n          <Stack id=\"skills\" direction=\"column\" spacing={2}>\r\n          {skills.map((skill) => (\r\n          <UserSkill id={skill.id} title={skill.title}></UserSkill>\r\n          ))}\r\n            \r\n\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs={12} md={3} sm={3}>\r\n  <Grid item >\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} username={pendingRequest.info.username} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url} profession={pendingRequest.info.profession} email={pendingRequest.info.email} bio={pendingRequest.info.bio} phone_number={pendingRequest.info.phone_number}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserSkillsPage;","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../../Components/Suggestion\";\r\nimport Pending from \"../../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../../Components/ProfileComponents/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport MainNavigation from '../../Components/Layout/MainNavigation';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nfunction UserFeed(){\r\n  const history = new useHistory();\r\n  const bio = localStorage.getItem('todo_tasks_user_bio');\r\n  const email = localStorage.getItem('todo_tasks_user_email');\r\n  const phone_number = localStorage.getItem('todo_tasks_user_phone_number');\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem('is_authenticated');\r\n    if(is_authenticated===\"false\"){\r\n      history.push('/');\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n  }, []);\r\n\r\n    //pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n      <MainNavigation />\r\n      <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n      <Grid item xs={12} md={3} sm={3}>\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} md={6} sm={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Contact Info\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n        <Card sx={{display:'flex', flexDirection:'row', marginTop:'10px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <InfoIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <h3>\r\n            Bio\r\n          </h3>\r\n          <p style={{marginTop:'-20px', fontFamily:'roboto'}}>\r\n          {bio}\r\n          </p>\r\n        </Typography>}\r\n        />\r\n        </Card>\r\n        <Card sx={{display:'flex', flexDirection:'row', marginTop:'10px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <EmailIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <h3>\r\n            E-mail Address\r\n          </h3>\r\n          <p style={{marginTop:'-20px', fontFamily:'roboto'}}>\r\n          {email}\r\n          </p>\r\n        </Typography>}\r\n        />\r\n        </Card>\r\n        <Card sx={{display:'flex', flexDirection:'row', marginTop:'10px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'primary.dark' }} aria-label=\"recipe\">\r\n            <LocalPhoneIcon />\r\n          </Avatar>\r\n        }\r\n        title={<Typography>\r\n          <h3>\r\n            Phone Number\r\n          </h3>\r\n          <p style={{marginTop:'-20px', fontFamily:'roboto'}}>\r\n          {phone_number}\r\n          </p>\r\n        </Typography>}\r\n        />\r\n        </Card>\r\n\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs={12} md={3} sm={3}>\r\n  <Grid item >\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} username={pendingRequest.info.username} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url} profession={pendingRequest.info.profession} email={pendingRequest.info.email} bio={pendingRequest.info.bio} phone_number={pendingRequest.info.phone_number}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n       <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserFeed;","import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport WorkIcon from \"@mui/icons-material/Work\";\r\n\r\nexport default function UserExperience(props) {\r\n  return (\r\n    <Card\r\n      id={props.id}\r\n      sx={{ display: \"flex\", flexDirection: \"row\", paddingTop: \"5px\" }}\r\n    >\r\n      <CardHeader\r\n        sx={{ flex: \"5\" }}\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: \"primary.dark\" }} aria-label=\"recipe\">\r\n            <WorkIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography>\r\n            <p>\r\n              {props.position} at {props.company}\r\n            </p>\r\n            <p>\r\n              From {props.start_date} till {props.end_date}\r\n            </p>\r\n          </Typography>\r\n        }\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Suggestion from \"../../Components/Suggestion\";\r\nimport Pending from \"../../Components/Pending\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport UserCard from \"../../Components/ProfileComponents/UserCard\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport UserExperience from \"../../Components/ProfileComponents/UserExperience\";\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nimport MainNavigation from \"../../Components/Layout/MainNavigation\";\r\n\r\nfunction UserExperiencePage() {\r\n  const history = new useHistory();\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n  const [experiences, setExperiences]  = useState([]);\r\n  \r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem('is_authenticated');\r\n    if(is_authenticated===\"false\"){\r\n      history.push('/');\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getUserExperience();\r\n  }, []);\r\n\r\n  function getUserExperience(){\r\n    getUserExperienceAPI().then(experience_response=>{\r\n      console.log(experience_response);\r\n      setExperiences(experience_response.jobs);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getUserExperienceAPI(){\r\n  const user_id = localStorage.getItem('todo_tasks_user_id');\r\n  const authorization = localStorage.getItem('token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/user-jobs\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user_id' : user_id,\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const experience_response = await response.json();\r\n  return experience_response;\r\n}\r\n\r\n    //pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst user_id = localStorage.getItem('id');\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const user_id = localStorage.getItem('id');\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n  return (\r\n    <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n    <MainNavigation />\r\n    <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n    <Grid item xs={12} md={3} sm={3}>\r\n          <UserCard></UserCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={6}>\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"lg\">\r\n            <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n              <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n                  Experience\r\n                </Typography>\r\n              </Box>\r\n              <Stack direction=\"column\" spacing={2}>\r\n              {experiences.map((experience) => (\r\n        <UserExperience id={experience.id} company={experience.company} position={experience.position} start_date={experience.start_date} end_date={experience.end_date}></UserExperience>\r\n          ))}\r\n              </Stack>\r\n            </Container>\r\n          </React.Fragment>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n  <Grid item >\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} username={pendingRequest.info.username} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url} profession={pendingRequest.info.profession} email={pendingRequest.info.email} bio={pendingRequest.info.bio} phone_number={pendingRequest.info.phone_number}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserExperiencePage;\r\n","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Modal from '@mui/material/Modal';\r\nimport { red } from '@mui/material/colors';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\r\nimport BlockIcon from '@mui/icons-material/Block';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Connection(props) {\r\n  const history = new useHistory();\r\n\r\n  const handleUnfollow = () =>{\r\n    unfollow();\r\n    document.getElementById('connection_'+props.id).style.display = \"none\";\r\n  }\r\n\r\n  const handleBlock = () => {\r\n    block();\r\n    document.getElementById('connection_'+props.id).style.display = \"none\";\r\n  }\r\n\r\n  //unfollow\r\n  function unfollow(){\r\n    unfollowAPI().then(unfollow_response=>{\r\n      console.log(unfollow_response);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function unfollowAPI(){\r\n  const user2_id = props.id;\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/unfollow\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user2_id': user2_id\r\n        })\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const unfollow_response = await response.json();\r\n  return unfollow_response;\r\n  }\r\n\r\n  //block\r\n  function block(){\r\n    blockAPI().then(block_response=>{\r\n      console.log(block_response);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function blockAPI(){\r\n  const user2_id = props.id;\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/block\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user2_id': user2_id\r\n        })\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const block_response = await response.json();\r\n  return block_response;\r\n  }\r\n\r\n  const handleClick = () => {\r\n    localStorage.setItem('todo_tasks_user_id', props.id);\r\n    localStorage.setItem('todo_tasks_user_name', props.name);\r\n    localStorage.setItem('todo_tasks_user_profession', props.profession);\r\n    localStorage.setItem('todo_tasks_user_picture', props.picture);\r\n    localStorage.setItem('todo_tasks_user_bio', props.bio);\r\n    localStorage.setItem('todo_tasks_user_email', props.email);\r\n    localStorage.setItem('todo_tasks_user_phone_number', props.phone_number);\r\n    localStorage.setItem('is_friend', 'true');\r\n    history.push('/feed/'+props.username);\r\n    window.location.reload();\r\n  }\r\n  \r\n\r\n  return (\r\n    <Card id={\"connection_\"+props.id} sx={{display:'flex', flexDirection:'row', paddingTop:'5px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        onClick={handleClick}\r\n        avatar={\r\n          <Avatar aria-label=\"profile pic\" src={props.picture}>\r\n          </Avatar>\r\n        }\r\n        title={props.name}\r\n        />\r\n        <Stack sx={{display:'flex', flexDirection:'row'}}>\r\n        <IconButton onClick={handleUnfollow} color=\"error\" aria-label=\"Edit\" component=\"span\" sx={{flex:'1'}}>\r\n        <PersonRemoveIcon  />\r\n        </IconButton>\r\n        <IconButton onClick={handleBlock} color=\"error\"aria-label=\"Edit\" component=\"span\" sx={{flex:'1'}}>\r\n        <BlockIcon />\r\n        </IconButton>\r\n        </Stack>\r\n        </Card>\r\n  );\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { useState } from 'react';\r\nimport MainNavigation from '../Components/Layout/MainNavigation';\r\nimport { useEffect } from 'react';\r\nimport Connection from '../Components/Connection';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\n\r\nfunction ConnectionsPage(){\r\n  const history = new useHistory();\r\n  const [connections, setConnections]  = useState([]);\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem('is_authenticated');\r\n    if(is_authenticated===\"false\"){\r\n      history.push('/');\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getConnections();\r\n  }, []);\r\n\r\n  function getConnections(){\r\n    getConnectionsAPI().then(connections_response=>{\r\n      setConnections(connections_response.connections);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getConnectionsAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-connections\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization}\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const connections_response = await response.json();\r\n  return connections_response;\r\n}\r\n\r\n\r\n//pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n        <MainNavigation />\r\n        <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} md={6} sm={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Connections\r\n          </Typography>\r\n          </Box>\r\n          \r\n          <Stack id=\"connections\" direction=\"column\" spacing={2}>\r\n          {connections.map((connection) => (\r\n        <Connection id={connection.info.id} username={connection.info.username} name={connection.info.first_name+' '+connection.info.last_name} picture={connection.picture[0].picture_url} profession={connection.info.profession} email={connection.info.email} bio={connection.info.bio} phone_number={connection.info.phone_number}></Connection>\r\n          ))}\r\n            \r\n\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs={12} md={3} sm={3}>\r\n  <Grid item>\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default ConnectionsPage;","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { useState } from 'react';\r\nimport MainNavigation from '../Components/Layout/MainNavigation';\r\nimport { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\n\r\nfunction SearchResults(){\r\n  const history = new useHistory();\r\n  const [searchResults, setSearchResults]  = useState([]);\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem('is_authenticated');\r\n    if(is_authenticated===\"false\"){\r\n      history.push('/');\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getSearchResults();\r\n  }, []);\r\n\r\n  function getSearchResults(){\r\n    getSearchResultsAPI().then(search_response=>{\r\n      console.log(search_response);\r\n      setSearchResults(search_response.search_results);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getSearchResultsAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n  const search_value = localStorage.getItem('search_value');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/search\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n            'search_key': search_value\r\n        })\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const search_response = await response.json();\r\n  return search_response;\r\n}\r\n\r\n\r\n//pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n        <MainNavigation />\r\n        <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} md={6} sm={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Search Results\r\n          </Typography>\r\n          </Box>\r\n          \r\n          <Stack id=\"connections\" direction=\"column\" spacing={2}>\r\n          {searchResults.map((result) => (\r\n        <Suggestion id={result.info.id} username={result.info.username} name={result.info.first_name+' '+result.info.last_name} picture={result.picture[0].picture_url} profession={result.info.profession} email={result.info.email} bio={result.info.bio} phone_number={result.info.phone_number}></Suggestion>\r\n          ))}\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs={12} md={3} sm={3}>\r\n  <Grid item>\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default SearchResults;","import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCPq5sSe6IcMKCG6ocxKgw3SN0wfhn11pI\",\r\n    authDomain: \"todotasks-5c2a9.firebaseapp.com\",\r\n    projectId: \"todotasks-5c2a9\",\r\n    storageBucket: \"todotasks-5c2a9.appspot.com\",\r\n    messagingSenderId: \"813965289640\",\r\n    appId: \"1:813965289640:web:cb1401465f9479f40eba9d\",\r\n    measurementId: \"G-TEDBSBFEXQ\"\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Stack from '@mui/material/Stack';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\r\n\r\n\r\n\r\nexport default function Blocked(props) {\r\n  \r\n\r\n  const handleUnblock = () =>{\r\n    unblock();\r\n  }\r\n\r\n  //unblock\r\n  function unblock(){\r\n    unblockAPI().then(unblock_response=>{\r\n      document.getElementById('blocked_'+props.id).style.display = \"none\";\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function unblockAPI(){\r\n  const user2_id = props.id;\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/unblock\", {\r\n        method: 'POST',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n        body: new URLSearchParams({\r\n          'user2_id': user2_id\r\n        })\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const block_response = await response.json();\r\n  return block_response;\r\n  }\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <Card id={\"blocked_\"+props.id} sx={{display:'flex', flexDirection:'row', paddingTop:'5px'}}>\r\n        <CardHeader sx={{flex:'5'}}\r\n        avatar={\r\n          <Avatar aria-label=\"profile pic\" src={props.picture}>\r\n          </Avatar>\r\n        }\r\n        title={props.name}\r\n        />\r\n        <Stack sx={{display:'flex', flexDirection:'row'}}>\r\n        <IconButton onClick={handleUnblock} style={{color:\"#1976d2\"}} aria-label=\"unblock\" component=\"span\" sx={{flex:'1'}}>\r\n        <PersonRemoveIcon  />\r\n        </IconButton>\r\n        </Stack>\r\n        </Card>\r\n  );\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Suggestion from \"../Components/Suggestion\";\r\nimport Pending from \"../Components/Pending\";\r\nimport Typography from '@mui/material/Typography';\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { useState } from 'react';\r\nimport MainNavigation from '../Components/Layout/MainNavigation';\r\nimport { useEffect } from 'react';\r\nimport Blocked from '../Components/Blocked';\r\nimport { useHistory } from 'react-router'\r\n\r\n\r\n\r\n\r\nfunction BlockedContacts(){\r\n\r\n  const history = new useHistory();\r\n  const [blockedContacts, setBlockedContacts]  = useState([]);\r\n  const [pendingRequests, setPendingRequests]  = useState([]);\r\n  const [suggestions, setSuggestions]  = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n    const is_authenticated = localStorage.getItem('is_authenticated');\r\n    if(is_authenticated===\"false\"){\r\n      history.push('/');\r\n    }\r\n    getPendingRequests();\r\n    getSuggestions();\r\n    getBlockedContacts();\r\n  }, []);\r\n\r\n  function getBlockedContacts(){\r\n    getBlockedContactsAPI().then(blocked_response=>{\r\n      console.log(blocked_response.blocked_contacts);\r\n      setBlockedContacts(blocked_response.blocked_contacts);\r\n      \r\n}).catch(error => {\r\n    console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getBlockedContactsAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n\r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-blocked-contacts\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization}\r\n    });\r\n\r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const blocked_response = await response.json();\r\n  return blocked_response;\r\n}\r\n\r\n\r\n//pending Requests\r\n\r\nfunction getPendingRequests(){\r\n  getPendingRequestsAPI().then(pending_response=>{\r\n    setPendingRequests(pending_response.pending_connections);\r\n    \r\n}).catch(error => {\r\n  console.log(error.message);\r\n});\r\n\r\n}\r\n\r\n\r\nasync function getPendingRequestsAPI(){\r\nconst authorization = localStorage.getItem('token');\r\n\r\n  const response = await fetch(\"https://todotasks.tk/api/auth/get-pending-requests\", {\r\n      method: 'GET',\r\n      headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n  });\r\n\r\n  if(!response.ok){\r\n    const message = \"ERROR OCCURED\";\r\n    throw new Error(message);\r\n}\r\n\r\nconst pending_response = await response.json();\r\nreturn pending_response;\r\n}\r\n\r\n  //Suggestions\r\n\r\n  function getSuggestions(){\r\n    getSuggestionsAPI().then(suggestions_response=>{\r\n      setSuggestions(suggestions_response.suggestions);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getSuggestionsAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-suggestions\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const suggestions_response = await response.json();\r\n  return suggestions_response;\r\n  }\r\n\r\n\r\n    return (\r\n      <div style={{height:'100vh', backgroundColor:'#f5f5f5'}}>\r\n        <MainNavigation />\r\n        <Grid container sx={{paddingTop:\"20px\", backgroundColor:'#f5f5f5'}}>\r\n        <Grid item xs={12} md={3} sm={3}>\r\n    <UserCard></UserCard>\r\n  </Grid>\r\n  <Grid item xs={12} md={6} sm={6}>\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{ height: '30px', display:'flex', flexDirection:'row', paddingBottom:'0px', marginBottom:'15px'}} >\r\n          <Typography sx={{ mt: 4, mb: 2}} variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Blocked Contacts\r\n          </Typography>\r\n          </Box>\r\n          \r\n          <Stack id=\"connections\" direction=\"column\" spacing={2}>\r\n          {blockedContacts.map((contact) => (\r\n          <Blocked id={contact.info.id}  name={contact.info.first_name+' '+contact.info.last_name} picture={contact.picture[0].picture_url}></Blocked>\r\n          ))}\r\n            \r\n\r\n          </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n\r\n  </Grid>\r\n  <Grid item xs={12} md={3} sm={3}>\r\n  <Grid item>\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Pending Requests\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {pendingRequests.map((pendingRequest) => (\r\n            <Pending id={pendingRequest.info.id} name={pendingRequest.info.first_name+' '+pendingRequest.info.last_name} picture={pendingRequest.picture[0].picture_url}></Pending>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  \r\n  </Grid>\r\n  <Grid item>\r\n\r\n  <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{paddingTop:'15px'}}>\r\n      <Box sx={{height: '30px', marginBottom:'15px'}} >\r\n          <Typography variant=\"h5\" color=\"black\" sx={{maxWidth:'900px',fontFamily:'Roboto'}}>\r\n            Suggestions\r\n          </Typography>\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={2}>\r\n          {suggestions.map((suggestion) => (\r\n            <Suggestion id={suggestion.info.id} username={suggestion.info.username} name={suggestion.info.first_name+' '+suggestion.info.last_name} picture={suggestion.picture[0].picture_url} profession={suggestion.info.profession} email={suggestion.info.email} bio={suggestion.info.bio} phone_number={suggestion.info.phone_number}></Suggestion>\r\n          ))}\r\n            </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  </Grid>\r\n  \r\n  </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default BlockedContacts;","import \"./App.css\";\nimport * as React from \"react\";\nimport {Route, Switch} from 'react-router-dom';\n\nimport MainPage from \"./Pages/MainPage\";\nimport MessagesPage from \"./Pages/MessagesPage\";\nimport NotificationsPage from \"./Pages/NotificationsPage\";\nimport ProjectsPage from \"./Pages/ProjectsPage\";\nimport SkillsPage from \"./Pages/SkillsPage\";\nimport EducationPage from \"./Pages/EducationPage\";\nimport ExperiencePage from \"./Pages/ExperiencePage\";\nimport LoginPage from \"./Pages/LoginPage\";\nimport RegisterPage from \"./Pages/RegisterPage\";\nimport UserEducationPage from \"./Pages/Profile/UserEducationPage\";\nimport UserSkillsPage from \"./Pages/Profile/UserSkillsPage\";\nimport UserFeed from \"./Pages/Profile/UserFeed\";\nimport UserExperiencePage from \"./Pages/Profile/UserExperiencePage\";\nimport ConnectionsPage from \"./Pages/ConnectionsPage\";\nimport SearchResults from \"./Pages/SearchResults\";\nimport firebase from './firebase';\nimport BlockedContacts from \"./Pages/BlockedContacts\";\n\nexport default class App extends React.Component {\n\n  componentDidMount(){\n\n    \n    const messaging = firebase.messaging();\n    if (\"serviceWorker\" in navigator) {\n      navigator.serviceWorker\n        .register(\"./firebase-messaging-sw.js\")\n        .then(function(registration) {\n          console.log(\"Registration successful, scope is:\", registration.scope);\n          Notification.requestPermission().then(()=>{\n            messaging.getToken({vapidKey: 'BPeIeKcMyJbJ6ag2MRhpHdSLOUvNvhPsJp6KXIrPFXllE8LcGx3Mfsm54SwXiir8YsmY_8wWjrOwmJadR-g10l4', serviceWorkerRegistration : registration })\n            .then((currentToken) => {\n              if (currentToken) {\n                console.log('current token for client: ', currentToken);\n                localStorage.setItem('device_token', currentToken);\n              } else {\n                console.log('No registration token available. Request permission to generate one.');\n              }\n            }).catch((err) => {\n              console.log('An error occurred while retrieving token. ', err);\n            }); \n          })\n           \n          })\n          .catch(function(err) {\n            console.log(\"Service worker registration failed, error:\"  , err );\n        }); \n      }\n\n\n  }\n  render(){\n    return (\n      <div>\n        <Switch>\n          <Route path=\"/\" exact>\n            <LoginPage />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterPage />\n          </Route>\n          <Route path=\"/user-feed\">\n            <MainPage />\n          </Route>\n          <Route path=\"/connections\">\n            <ConnectionsPage />\n          </Route>\n          <Route path=\"/blocked\">\n            <BlockedContacts />\n          </Route>\n          <Route path=\"/messages\">\n            <MessagesPage />\n          </Route>\n          <Route path=\"/notifications\">\n            <NotificationsPage />\n          </Route>\n          <Route path=\"/projects\">\n            <ProjectsPage />\n          </Route>\n          <Route path=\"/user-skills\">\n            <SkillsPage />\n          </Route>\n          <Route path=\"/user-education\">\n            <EducationPage />\n          </Route>\n          <Route path=\"/user-experience\">\n            <ExperiencePage />\n          </Route>\n          <Route path=\"/search\">\n            <SearchResults />\n          </Route>\n  \n          {/* Routes for a specific user */}\n          <Route path=\"/feed\">\n            <UserFeed />\n          </Route>\n          <Route path=\"/education\" >\n            <UserEducationPage />\n          </Route>\n          <Route path=\"/skills\">\n            <UserSkillsPage />\n          </Route>\n          <Route path=\"/experience\">\n            <UserExperiencePage />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n  \n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router><App /></Router>,document.getElementById('root'));\n\n","import * as React from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Badge from '@mui/material/Badge';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport MoreIcon from '@mui/icons-material/MoreVert';\r\nimport ForumIcon from '@mui/icons-material/Forum';\r\nimport { Link as RouterLink, MemoryRouter as Router } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: '100%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: 'auto',\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: '100%',\r\n  position: 'absolute',\r\n  pointerEvents: 'none',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: 'inherit',\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function MainNavigation() {\r\n  const history = new useHistory();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const [count, setCount] = React.useState('');\r\n  const [code, setCode] = React.useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getNotificationsCount();\r\n    const input = document.getElementById(\"search_value\");\r\n    input.addEventListener(\"keyup\", function(event) {\r\n    if (event.keyCode === 13) {\r\n      localStorage.setItem('search_value', document.getElementById('search_value').value);\r\n      history.push('/search');\r\n    }\r\n  });\r\n  }, [])\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n\r\n  const handleZoomIntegration = () => {\r\n    const response_type = \"code\";\r\n    const client_id = \"1MjedjqCSPSreEJS8W6pA\";\r\n    const redirect_uri = \"https://waseemissa.github.io/TodoTasks/projects/\";\r\n    window.location.href = \"https://zoom.us/oauth/authorize?response_type=\"+response_type+\"&client_id=\"+client_id+\"&redirect_uri=\"+redirect_uri;\r\n\r\n    //after authorization\r\n    var url = new URL(window.location.href);\r\n    var code = url.searchParams.get(\"code\");\r\n    setCode(code);\r\n    console.log(code);\r\n\r\n    //request Zoom token\r\n    getToken();\r\n\r\n\r\n  }\r\n  \r\n\r\n\r\n  const handleLogout = () => {\r\n    handleMenuClose();\r\n    localStorage.clear();\r\n    localStorage.setItem('is_authenticated', \"false\");\r\n    history.push('/');\r\n    //prevent going back\r\n    window.onpopstate = function(event) {\r\n    history.go(1);\r\n  };\r\n  }\r\n\r\n  const getToken = async () =>{\r\n    const encodedString = Buffer.from('1MjedjqCSPSreEJS8W6pA:XvQ9bBozosfXU0lJRGPnZefPBcU9fRC4').toString('base64');\r\n      await fetch(\"https://zoom.us/oauth/token\",{\r\n        method: \"POST\",\r\n        headers : {'Authorization': 'Basic ' +encodedString, 'Content-Type': 'application/x-www-form-urlencoded'},\r\n        body: JSON.stringify({\r\n          'grant_type': 'authorization_code',\r\n          'code': code,\r\n          'redirect_uri': 'https://waseemissa.github.io/TodoTasks/projects/',\r\n        })\r\n      }).then(res=>{\r\n        console.log(res.access_token)\r\n        localStorage.setItem('zoom_token', res.access_token);\r\n      }).catch(error=>{\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  function getNotificationsCount(){\r\n    getNotificationsCountAPI().then(count_response=>{\r\n      setCount(count_response);\r\n      \r\n  }).catch(error => {\r\n    console.log(error.message);\r\n  });\r\n  \r\n  }\r\n  \r\n  \r\n  async function getNotificationsCountAPI(){\r\n  const authorization = localStorage.getItem('token');\r\n  \r\n    const response = await fetch(\"https://todotasks.tk/api/auth/get-notifications-count\", {\r\n        method: 'GET',\r\n        headers : {'accepts' : 'application/json', 'Authorization' : authorization},\r\n    });\r\n  \r\n    if(!response.ok){\r\n      const message = \"ERROR OCCURED\";\r\n      throw new Error(message);\r\n  }\r\n  \r\n  const count_response = await response.json();\r\n  return count_response;\r\n  }\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleZoomIntegration} style={{fontFamily:'Roboto'}}>Integrate Zoom</MenuItem>\r\n      <MenuItem onClick={handleLogout} style={{fontFamily:'Roboto'}}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem component={RouterLink} to=\"/messages\">    \r\n      <IconButton size=\"large\" color=\"inherit\">\r\n          <Badge>\r\n            <ForumIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n    \r\n        \r\n      <MenuItem component={RouterLink} to=\"/notifications\">\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label={\"show \" +count+ \" new notifications\"}\r\n          color=\"inherit\"\r\n        >\r\n          <Badge badgeContent={count} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            color=\"white\"\r\n            component={RouterLink} to=\"/user-feed\"\r\n            style={{textDecoration: 'none', maxWidth:'900px', fontFamily:'Roboto'}}\r\n            sx={{ display: { xs: 'none', sm: 'block' }, }}\r\n          >\r\n            Todo Tasks\r\n          </Typography>\r\n          <Search style={{width:'300px'}} id=\"search_area\">\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Search By Profession...\"\r\n              id = \"search_value\"\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </Search>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n            <IconButton size=\"large\" color=\"inherit\" component={RouterLink} to=\"/messages\">\r\n              <Badge>\r\n                <ForumIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label={\"show \"+count+ \" new notifications\" }\r\n              color=\"inherit\"\r\n              component={RouterLink} to=\"/notifications\"\r\n            >\r\n              <Badge badgeContent={count} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </Box>\r\n          <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}"],"sourceRoot":""}